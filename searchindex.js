Search.setIndex({"docnames": ["background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_the_basics", "contributing/1_navigating_the_code", "contributing/2_type_hints", "contributing/3_docstrings", "contributing/4_docstring_examples", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "framework_handler", "framework_handler/choose_random_framework", "framework_handler/clear_framework_stack", "framework_handler/current_framework", "framework_handler/get_framework", "framework_handler/set_framework", "framework_handler/try_import_ivy_jax", "framework_handler/try_import_ivy_mxnet", "framework_handler/try_import_ivy_numpy", "framework_handler/try_import_ivy_tf", "framework_handler/try_import_ivy_torch", "framework_handler/unset_framework", "func_wrapper", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/dtype_from_str", "functional/ivy/data_type/dtype_to_str", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_from_str", "functional/ivy/device/dev_to_str", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_arrays_on_dev", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_framework_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_the_basics.rst", "contributing/1_navigating_the_code.rst", "contributing/2_type_hints.rst", "contributing/3_docstrings.rst", "contributing/4_docstring_examples.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "framework_handler.rst", "framework_handler/choose_random_framework.rst", "framework_handler/clear_framework_stack.rst", "framework_handler/current_framework.rst", "framework_handler/get_framework.rst", "framework_handler/set_framework.rst", "framework_handler/try_import_ivy_jax.rst", "framework_handler/try_import_ivy_mxnet.rst", "framework_handler/try_import_ivy_numpy.rst", "framework_handler/try_import_ivy_tf.rst", "framework_handler/try_import_ivy_torch.rst", "framework_handler/unset_framework.rst", "func_wrapper.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/dtype_from_str.rst", "functional/ivy/data_type/dtype_to_str.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_from_str.rst", "functional/ivy/device/dev_to_str.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_arrays_on_dev.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_framework_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "The Basics", "Navigating the Code", "Type Hints", "Docstrings", "Docstring Examples", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "Framework handler", "choose_random_framework", "clear_framework_stack", "current_framework", "get_framework", "set_framework", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_framework", "Func wrapper", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "dtype_from_str", "dtype_to_str", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "DevMapper", "DevMapperMultiProc", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_from_str", "dev_to_str", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_arrays_on_dev", "gpu_is_available", "num_arrays_on_dev", "num_cpu_cores", "num_gpus", "percent_used_mem_on_dev", "print_all_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_framework_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"ml": [0, 2, 3, 4, 17, 18, 19, 21, 22, 23, 34, 411, 417], "explos": [0, 2, 411], "A": [0, 1, 2, 3, 4, 10, 18, 21, 60, 65, 105, 112, 113, 146, 152, 199, 210, 212, 237, 269, 311, 327, 328, 329, 340, 350, 352, 360, 361, 363, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 399, 400, 408, 409, 410, 411, 451, 452], "huge": [0, 2, 21, 411], "number": [0, 1, 9, 18, 21, 23, 57, 58, 59, 60, 61, 62, 65, 69, 70, 71, 78, 80, 89, 92, 93, 95, 96, 97, 105, 138, 139, 140, 152, 156, 160, 168, 176, 177, 196, 200, 201, 203, 211, 212, 232, 237, 238, 253, 271, 274, 290, 294, 298, 309, 311, 316, 322, 327, 329, 333, 340, 341, 343, 346, 347, 349, 350, 352, 354, 355, 356, 357, 358, 359, 379, 380, 384, 386, 389, 391, 392, 393, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440], "tool": [0, 3, 19, 23, 34, 411], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 34, 49, 52, 60, 61, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 105, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 211, 212, 220, 227, 228, 229, 231, 275, 280, 288, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 340, 342, 344, 345, 346, 349, 351, 352, 379, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "explod": [0, 1, 411], "onto": [0, 1, 105, 131, 132, 360, 366, 372, 411], "scene": [0, 1, 19, 275, 277, 279, 281, 282, 283, 411], "b": [0, 3, 4, 5, 9, 17, 18, 19, 21, 22, 23, 33, 152, 156, 209, 212, 215, 311, 324, 328, 335, 340, 349, 352, 411, 417], "why": [0, 2, 20, 411], "unifi": [0, 2, 18, 105, 131, 132, 133, 134, 146, 411], "should": [0, 2, 5, 6, 7, 8, 9, 10, 20, 21, 22, 57, 58, 60, 71, 74, 75, 78, 81, 105, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 211, 212, 218, 254, 275, 277, 279, 281, 282, 283, 311, 312, 313, 314, 315, 318, 319, 322, 324, 325, 326, 328, 329, 331, 332, 333, 334, 340, 348, 379, 385, 386, 387, 388, 391, 392, 395, 399, 400, 401, 402, 404, 405, 406, 407, 411], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 34, 275, 278, 399, 400, 411, 417], "try": [0, 2, 3, 10, 20, 212, 272, 411], "them": [0, 1, 2, 3, 18, 20, 21, 22, 411], "c": [0, 2, 3, 4, 5, 9, 17, 18, 19, 21, 212, 215, 275, 276, 277, 279, 281, 282, 283, 340, 352, 386, 389, 399, 405, 407, 411, 417], "standard": [0, 6, 8, 78, 92, 152, 156, 209, 340, 349, 377, 378, 379, 382, 399, 405, 407, 411, 417, 443, 444], "re": [0, 1, 2, 4, 5, 6, 9, 10, 20, 23, 105, 146, 212, 227, 290, 291, 294, 340, 349, 411], "collabor": [0, 1, 2, 411], "The": [0, 1, 3, 4, 6, 8, 9, 10, 17, 18, 21, 22, 23, 34, 49, 50, 51, 54, 56, 57, 58, 60, 61, 66, 70, 74, 75, 78, 79, 83, 84, 89, 90, 91, 94, 104, 105, 112, 113, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 209, 211, 212, 215, 218, 219, 225, 226, 232, 234, 243, 244, 245, 247, 248, 249, 250, 252, 257, 258, 259, 260, 261, 264, 265, 266, 274, 275, 276, 277, 279, 281, 282, 283, 285, 288, 290, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 421, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449], "consortium": [0, 2, 411, 417], "python": [0, 1, 2, 10, 18, 20, 21, 60, 61, 105, 141, 151, 152, 201, 411, 417], "data": [0, 2, 6, 8, 20, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 130, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 211, 212, 215, 247, 248, 250, 267, 275, 280, 288, 290, 296, 298, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 340, 345, 346, 348, 349, 351, 352, 379, 385, 386, 387, 388, 389, 393, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 417], "api": [0, 1, 8, 17, 19, 21, 152, 156, 209, 340, 349, 411, 417], "open": [1, 2, 3, 4, 10, 34, 60, 61, 379, 383, 411], "sourc": [1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455], "project": [1, 2, 3, 10, 20, 22, 34, 379, 382, 383], "ha": [1, 2, 3, 5, 6, 8, 9, 18, 20, 22, 23, 34, 60, 71, 152, 153, 196, 200, 311, 319, 327, 328, 329, 332, 340, 344, 351, 391, 392, 393, 395, 399, 402, 404, 405, 406, 407], "grown": 1, "consider": [1, 7, 9], "recent": [1, 2], "year": [1, 3, 411], "especi": 1, "deep": [1, 21, 411], "learn": [1, 2, 23, 34, 152, 178, 275, 277, 279, 281, 282, 283, 356, 357, 358, 359, 411, 445, 446, 447, 448, 449, 450], "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 20, 21, 22, 23, 34, 60, 62, 78, 82, 105, 144, 145, 146, 290, 292, 311, 318, 340, 348, 399, 400, 411, 417], "seen": [1, 2, 9, 20, 21], "from": [1, 2, 3, 4, 5, 6, 8, 9, 10, 18, 20, 21, 22, 23, 34, 60, 61, 62, 64, 66, 67, 68, 71, 73, 77, 78, 82, 84, 97, 105, 112, 113, 146, 152, 178, 206, 212, 226, 233, 234, 269, 275, 277, 281, 290, 295, 298, 306, 309, 311, 315, 333, 340, 345, 348, 351, 356, 357, 358, 359, 360, 362, 372, 379, 380, 381, 382, 383, 386, 390, 391, 392, 394, 399, 404, 405, 406, 407, 408, 409, 410, 411, 417, 421, 422, 429, 437, 440, 445, 449], "rapidli": 1, "increas": [1, 105, 124, 128, 134, 340, 343, 355, 360, 372], "github": 1, "repo": [1, 2, 3, 5, 9, 18, 20, 21, 22, 23, 34, 411, 417], "contain": [1, 7, 8, 9, 10, 17, 18, 19, 22, 23, 49, 52, 53, 55, 60, 61, 64, 66, 72, 74, 75, 76, 105, 121, 125, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 219, 220, 240, 249, 290, 296, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 336, 338, 340, 341, 342, 346, 349, 379, 380, 386, 387, 388, 389, 391, 392, 393, 395, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 445, 449, 451, 452], "term": [1, 5, 298, 308, 429, 439], "over": [1, 3, 7, 9, 20, 311, 320, 331, 333, 334, 377, 378, 379, 383, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 443, 444], "time": [1, 2, 3, 5, 18, 21, 23, 275, 277, 281, 298, 308, 340, 354, 356, 357, 358, 359, 379, 380, 386, 387, 388, 391, 392, 393, 429, 440, 441, 442], "These": [1, 2, 3, 6, 7, 8, 9, 18, 19, 21, 22, 23, 311, 316, 411, 417], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 34, 60, 61, 105, 112, 113, 136, 138, 142, 146, 152, 169, 191, 192, 204, 209, 212, 213, 215, 216, 217, 235, 241, 242, 246, 253, 255, 267, 298, 307, 311, 313, 319, 320, 322, 325, 329, 330, 333, 340, 341, 345, 349, 360, 362, 366, 372, 379, 382, 383, 386, 387, 388, 389, 391, 392, 411, 451, 452], "written": [1, 6, 7, 18, 20, 23], "mani": [1, 2, 3, 5, 7, 8, 9, 18, 20, 21, 340, 350], "differ": [1, 2, 3, 6, 9, 18, 19, 20, 21, 22, 23, 78, 92, 105, 121, 122, 125, 126, 152, 156, 196, 208, 298, 307, 340, 352, 399, 404, 406, 411], "framework": [1, 2, 3, 6, 7, 12, 13, 14, 15, 16, 17, 20, 23, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455], "while": [1, 2, 9, 22, 23, 152, 191, 192, 391, 392, 399, 402], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 34, 60, 61, 62, 105, 124, 128, 134, 141, 146, 151, 152, 153, 156, 166, 175, 191, 192, 201, 209, 212, 232, 245, 256, 261, 275, 277, 279, 280, 281, 282, 283, 288, 298, 307, 311, 320, 327, 340, 344, 348, 349, 352, 360, 366, 372, 386, 387, 391, 392, 395, 399, 402, 405, 407, 411, 417, 441, 442, 445, 446, 447, 448, 449, 450], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 34, 49, 50, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 88, 94, 95, 96, 104, 105, 112, 113, 120, 124, 125, 126, 127, 128, 131, 132, 133, 134, 137, 141, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 166, 168, 169, 170, 174, 175, 176, 177, 180, 181, 182, 185, 186, 188, 189, 194, 195, 196, 200, 201, 203, 204, 205, 206, 209, 211, 212, 213, 215, 218, 219, 220, 223, 224, 226, 230, 232, 233, 240, 241, 247, 248, 249, 250, 251, 252, 256, 257, 258, 261, 273, 274, 275, 277, 279, 280, 281, 282, 283, 285, 290, 294, 298, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 366, 370, 371, 372, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 421, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450], "wonder": [1, 3, 20], "thing": [1, 2, 3, 5, 20, 21], "research": [1, 34], "develop": [1, 2, 3, 4, 5, 34, 411], "when": [1, 2, 5, 6, 7, 8, 9, 18, 20, 21, 23, 78, 79, 105, 152, 156, 175, 200, 212, 218, 245, 266, 336, 338, 386, 387, 388, 390, 399, 401, 403, 405, 407, 441, 442], "also": [1, 2, 4, 6, 7, 8, 9, 18, 20, 21, 22, 23, 34, 152, 156, 209, 212, 245, 275, 277, 298, 307, 340, 349, 356, 357, 358, 359, 360, 361, 362, 370, 371, 372, 429, 439], "consid": [1, 2, 9, 19, 20, 21, 152, 191, 192, 391, 392, 395], "speed": 1, "which": [1, 2, 3, 5, 6, 7, 8, 9, 10, 17, 18, 20, 21, 22, 23, 34, 49, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 88, 92, 93, 94, 104, 105, 112, 113, 120, 125, 126, 127, 128, 131, 132, 133, 134, 136, 138, 142, 144, 145, 146, 152, 201, 212, 223, 224, 226, 233, 234, 235, 241, 253, 254, 255, 257, 258, 273, 275, 277, 278, 279, 281, 282, 283, 285, 287, 288, 290, 292, 294, 298, 309, 310, 311, 313, 315, 320, 328, 329, 333, 334, 336, 338, 340, 342, 345, 347, 349, 350, 352, 360, 365, 366, 367, 368, 373, 374, 375, 376, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 416, 421, 422, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "evolv": 1, "sharabl": 1, "code": [1, 2, 3, 4, 5, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 33, 411, 417], "significantli": 1, "hinder": 1, "librari": [1, 2, 3, 18, 23, 33, 152, 175, 191, 192, 311, 316, 391, 392, 395, 399, 401, 402, 403, 411], "becom": [1, 3, 5, 9, 18, 23, 340, 341], "outdat": 1, "matter": [1, 9], "month": 1, "rigor": 1, "maintain": [1, 5, 396, 397, 398], "against": [1, 78, 80, 311, 319, 320, 322, 325, 386, 387], "newest": 1, "version": [1, 2, 3, 8, 18, 20, 311, 316], "For": [1, 2, 3, 5, 6, 7, 8, 9, 10, 18, 20, 21, 22, 23, 34, 60, 61, 71, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 169, 170, 174, 175, 176, 185, 186, 188, 189, 196, 200, 201, 204, 205, 206, 209, 211, 275, 280, 288, 311, 329, 332, 340, 341, 352, 391, 392, 395, 399, 401, 403, 406, 421, 422], "softwar": [1, 2], "pipelin": [1, 23], "where": [1, 2, 3, 5, 10, 18, 21, 22, 23, 60, 67, 68, 71, 152, 160, 174, 187, 196, 200, 212, 241, 254, 311, 316, 322, 325, 326, 329, 330, 332, 333, 340, 341, 343, 344, 346, 352, 355, 360, 361, 371, 379, 380, 386, 389, 399, 405, 407, 408, 409, 410, 411], "rapid": [1, 2], "prototyp": 1, "vital": [1, 23], "signific": [1, 2], "bottleneck": 1, "As": [1, 6, 8, 18, 20, 21, 22, 391, 392, 395], "new": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 20, 23, 34, 60, 63, 66, 67, 68, 72, 73, 76, 77, 152, 161, 187, 199, 210, 212, 227, 228, 229, 232, 233, 234, 257, 258, 259, 260, 265, 266, 275, 277, 279, 281, 282, 283, 290, 292, 295, 297, 340, 344, 348, 352, 360, 365, 375, 376, 377, 378, 379, 380, 411, 421, 422, 429, 439, 443, 444, 445, 446, 447, 448, 449, 450], "futur": [1, 3, 5, 20, 311, 316], "avail": [1, 5, 8, 105, 137, 139, 140, 149, 212, 228], "specif": [1, 6, 18, 19, 20, 22, 23, 34, 78, 97, 105, 144, 152, 191, 192, 212, 227, 228, 229, 252, 311, 316, 331, 340, 352, 356, 357, 358, 359, 399, 401, 402, 403, 411, 414, 416, 417, 441, 442], "quickli": [1, 3, 5, 21, 22], "obsolet": [1, 3], "user": [1, 2, 10, 429, 440, 441, 442], "constantli": 1, "invent": 1, "wheel": 1, "If": [1, 4, 5, 6, 8, 9, 10, 20, 21, 23, 60, 61, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 97, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 169, 170, 174, 175, 176, 185, 186, 188, 189, 191, 192, 196, 200, 201, 203, 204, 205, 206, 209, 211, 275, 277, 279, 281, 282, 283, 311, 312, 313, 320, 322, 325, 326, 328, 329, 333, 334, 336, 338, 340, 344, 345, 349, 350, 351, 352, 356, 357, 358, 360, 372, 379, 382, 383, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "our": [1, 2, 4, 5, 9, 20, 21, 22, 23, 411], "desir": [1, 78, 79, 82, 105, 147, 212, 241, 290, 296], "provid": [1, 6, 18, 22, 34, 57, 58, 60, 71, 78, 85, 86, 87, 94, 97, 104, 105, 212, 226, 254, 258, 275, 277, 279, 281, 282, 283, 311, 333, 340, 345, 352, 386, 387, 399, 405, 407, 408, 409, 410, 429, 438, 445, 446, 447, 448, 449, 450], "simultan": [1, 3], "support": [1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 417, 419, 420, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455], "all": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 20, 21, 22, 23, 34, 57, 58, 60, 61, 74, 75, 105, 112, 136, 142, 212, 213, 215, 216, 235, 255, 270, 298, 308, 311, 328, 331, 334, 340, 345, 349, 356, 357, 358, 359, 360, 361, 362, 371, 372, 379, 380, 383, 408, 411, 414, 416], "modern": [1, 2], "simpl": [1, 5, 6, 9, 18, 20, 22, 23, 212, 230], "scalabl": [1, 18], "manner": [1, 6, 21, 34, 360, 372], "must": [1, 3, 5, 8, 9, 18, 22, 23, 49, 52, 60, 61, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 131, 132, 133, 134, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 211, 212, 220, 231, 258, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 340, 342, 344, 345, 346, 349, 351, 352, 379, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 445, 449], "determin": [1, 8, 78, 82, 83, 89, 94, 95, 96, 104, 105, 137, 139, 140, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 174, 175, 180, 181, 182, 185, 186, 188, 189, 193, 196, 200, 201, 204, 205, 206, 209, 212, 213, 215, 216, 240, 242, 246, 247, 248, 249, 250, 267, 274, 275, 280, 298, 309, 311, 312, 313, 314, 315, 318, 319, 322, 324, 325, 327, 328, 332, 333, 334, 356, 357, 358, 359, 391, 392, 395, 408, 409, 410], "exactli": [1, 3, 9, 411, 417], "common": 1, "ground": 1, "li": 1, "between": [1, 9, 17, 19, 20, 21, 23, 34, 60, 61, 78, 92, 152, 160, 200, 336, 338, 339, 340, 344, 352, 360, 366, 379, 381, 391, 392, 395, 411, 445, 447], "find": [1, 5, 18, 21, 391, 392, 395, 411], "exist": [1, 2, 8, 10, 18, 212, 226, 445, 449], "essenti": [1, 2, 9], "order": [1, 5, 6, 9, 10, 20, 21, 23, 152, 160, 275, 277, 279, 281, 282, 283, 311, 316, 320, 329, 330, 334, 340, 345, 356, 357, 358, 386, 389, 391, 392, 395, 396, 397, 398, 451, 452], "design": [1, 2, 18, 20], "univers": 1, "abstract": [1, 22, 105, 117, 445, 449], "In": [1, 3, 5, 8, 9, 18, 20, 21, 22, 23, 34, 105, 141, 148, 151, 152, 156, 196, 201, 340, 348, 379, 383, 411], "search": [1, 9, 387, 388, 389, 390], "languag": [1, 3, 18], "first": [1, 2, 5, 7, 9, 10, 18, 20, 21, 23, 57, 58, 60, 69, 70, 105, 133, 152, 156, 162, 164, 165, 166, 167, 172, 177, 179, 183, 184, 189, 190, 192, 193, 196, 198, 200, 208, 212, 215, 275, 278, 311, 313, 315, 316, 319, 324, 326, 329, 331, 333, 340, 342, 349, 352, 353, 356, 357, 358, 359, 360, 361, 370, 371, 379, 385, 386, 387, 388, 391, 392, 393, 429, 440, 441, 442, 445, 449], "see": [1, 20, 21, 34, 60, 61, 66, 69, 70, 78, 81, 97, 152, 156, 162, 164, 165, 166, 167, 171, 175, 183, 189, 192, 193, 196, 198, 200, 201, 208, 311, 322, 325, 328, 333, 334, 386, 388, 391, 392, 395, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "clear": [1, 2, 3, 5, 9, 18, 20, 105, 118], "front": [1, 17, 18, 21, 411, 417], "runner": 1, "look": [1, 5, 6, 7, 9, 10, 18, 20, 22, 23], "littl": [1, 20], "deeper": [1, 105, 124, 128, 134, 360, 372], "follow": [1, 2, 6, 7, 8, 9, 10, 17, 18, 20, 21, 22, 23, 78, 93, 105, 146, 152, 201, 212, 243, 244, 245, 265, 266, 275, 277, 279, 281, 282, 283, 298, 309, 310, 311, 326, 334, 360, 366, 372, 391, 392, 395, 399, 400, 411, 429, 439, 445, 449], "same": [1, 3, 7, 9, 10, 18, 20, 22, 23, 60, 61, 64, 68, 71, 73, 74, 75, 77, 78, 79, 80, 81, 105, 112, 113, 146, 152, 153, 156, 163, 168, 176, 196, 201, 202, 203, 211, 212, 231, 233, 234, 254, 257, 258, 275, 280, 285, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 323, 325, 326, 328, 329, 332, 333, 340, 342, 345, 346, 349, 351, 352, 356, 357, 358, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 411, 429, 430, 431, 432, 433, 434, 435, 436], "core": [1, 18, 23, 105, 139, 411], "principl": 1, "oper": [1, 6, 7, 9, 21, 22, 60, 69, 70, 78, 97, 152, 156, 166, 201, 212, 217, 227, 228, 229, 267, 275, 277, 279, 281, 282, 283, 298, 299, 300, 301, 302, 303, 304, 305, 307], "expos": [1, 18, 22, 212, 221], "almost": [1, 19, 21], "ident": [1, 3, 6, 20, 21, 411], "function": [1, 6, 7, 8, 9, 10, 17, 19, 20, 21, 22, 33, 34, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 416, 418, 419, 420, 445, 448, 450], "uniqu": [1, 105, 112, 113, 356, 357, 358, 359, 360, 366, 391, 392, 393, 394, 395], "syntax": [1, 2], "argument": [1, 6, 7, 8, 9, 18, 20, 21, 35, 38, 57, 58, 60, 61, 78, 97, 105, 112, 113, 124, 128, 134, 212, 214, 218, 226, 251, 258, 360, 366, 399, 406, 414, 416, 421, 422, 441, 442], "There": [1, 9, 18, 21], "onli": [1, 4, 6, 9, 18, 20, 21, 22, 23, 33, 105, 152, 191, 192, 311, 319, 326, 340, 345, 360, 361, 362, 370, 371, 386, 387, 388, 399, 402, 411, 445, 446, 447, 448, 449, 450], "so": [1, 2, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 360, 361, 371, 411], "wai": [1, 2, 20, 21, 22, 23], "manipul": [1, 23, 34, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "tensor": [1, 6, 7, 18, 20, 21, 22, 23, 60, 69, 70, 78, 88, 152, 194, 195, 212, 254, 257, 258, 298, 306, 308, 311, 331, 340, 348, 350, 379, 380, 381, 411, 429, 437, 439], "unsurprisingli": 1, "fundament": [1, 18], "consist": [1, 105, 134, 311, 316, 399, 400, 441, 442], "each": [1, 2, 3, 5, 8, 9, 17, 18, 20, 21, 23, 34, 49, 52, 53, 55, 60, 71, 78, 80, 105, 112, 113, 121, 122, 123, 124, 125, 126, 127, 133, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 275, 277, 279, 281, 282, 283, 290, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 319, 322, 323, 325, 328, 329, 340, 343, 347, 349, 350, 352, 354, 355, 360, 366, 379, 380, 386, 389, 391, 392, 393, 399, 400, 411, 417, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "veri": [1, 2, 5, 6, 19, 21, 22, 23, 411], "similar": [1, 6, 21, 152, 201, 298, 309, 429, 440], "convent": [1, 34, 311, 319, 399, 400], "those": [1, 5, 18, 23, 60, 61, 275, 288, 311, 326, 329, 340, 341], "numpi": [1, 2, 18, 20, 23, 212, 270, 399, 400, 411], "introduc": [1, 21, 340, 349], "2006": 1, "layer": [1, 18, 19, 22, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 377, 378, 411, 423, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "therefor": [1, 6, 7, 8, 9, 18, 20, 22], "present": [1, 18], "itself": [1, 22, 34, 360, 372], "cut": 1, "cloth": 1, "adher": [1, 2, 6, 8, 18, 23], "set": [1, 18, 20, 21, 105, 131, 132, 144, 145, 146, 152, 160, 212, 213, 259, 260, 261, 262, 275, 277, 279, 280, 281, 282, 283, 311, 313, 320, 322, 325, 328, 360, 361, 370, 371, 372, 375, 376, 379, 380, 384, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 405, 407, 429, 438, 445, 446, 447, 448, 449, 450], "semant": [1, 18, 23, 152, 201], "round": [1, 2, 3, 9, 10, 18, 20, 21, 22, 23, 34, 152, 156, 168, 176, 177, 196, 206, 211, 411], "up": [1, 2, 3, 5, 9, 10, 18, 19, 20, 21, 22, 23, 34], "hopefulli": [1, 2, 3, 10, 18, 20, 21, 22, 23, 34], "paint": [1, 18], "pictur": [1, 18], "how": [1, 3, 4, 9, 10, 19, 20, 21, 22, 23, 34, 411, 417, 429, 440, 441, 442], "pleas": [1, 2, 3, 5, 9, 10, 18, 20, 21, 22, 23, 34], "check": [1, 2, 3, 5, 9, 18, 20, 21, 22, 23, 34, 78, 83, 94, 104, 105, 141, 151, 212, 217, 230, 240, 247, 248, 249, 250, 267, 274, 275, 280, 311, 316, 360, 361, 370, 371, 372, 411], "out": [1, 2, 3, 5, 6, 7, 8, 9, 10, 18, 20, 21, 22, 23, 34, 49, 52, 60, 61, 105, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 220, 223, 224, 231, 233, 298, 306, 308, 311, 314, 332, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 386, 387, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 429, 437], "discuss": [1, 2, 3, 4, 5, 9, 10, 18, 20, 21, 22, 23, 34, 411], "faq": [1, 2, 3, 9, 18, 20, 21, 22, 23, 34], "reach": [1, 2, 3, 5, 9, 10, 18, 20, 21, 22, 23, 34, 105, 124, 128, 134, 360, 372], "discord": [1, 2, 3, 5, 9, 10, 18, 20, 21, 22, 23, 34], "you": [1, 2, 3, 4, 5, 9, 10, 18, 20, 21, 22, 23, 34, 411, 417], "ani": [1, 2, 3, 4, 5, 6, 9, 10, 18, 20, 21, 22, 23, 34, 57, 58, 60, 62, 152, 172, 179, 184, 212, 213, 226, 227, 228, 229, 230, 240, 247, 248, 249, 250, 265, 266, 275, 278, 360, 365, 366, 370, 379, 383, 408, 411], "question": [1, 2, 3, 9, 18, 20, 21, 22, 23, 34], "With": [2, 3, 9, 18, 152, 156, 209, 311, 320, 340, 349, 386, 387], "central": 2, "goal": 2, "being": [2, 3, 5, 6, 9, 18, 21, 34, 60, 61, 212, 256, 261, 391, 394, 411], "would": [2, 5, 6, 7, 8, 9, 10, 18, 20, 22, 23, 49, 54], "entir": [2, 3, 9, 20, 21, 22, 23, 105, 146, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 429, 438], "forgiven": 2, "rais": [2, 18, 20, 78, 81, 152, 174, 200, 212, 217, 236, 259, 266, 272, 311, 319, 321, 333, 340, 351, 352, 386, 389, 399, 401, 403, 408, 409, 410, 441, 442, 445, 449], "an": [2, 3, 5, 6, 7, 8, 9, 10, 18, 20, 21, 22, 23, 34, 49, 52, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 95, 96, 97, 105, 122, 126, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 218, 219, 220, 222, 231, 232, 241, 247, 248, 249, 250, 270, 271, 272, 275, 280, 285, 287, 288, 290, 292, 296, 297, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 360, 366, 379, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 421, 422, 441, 442, 445, 446, 447, 449], "eyebrow": 2, "want": [2, 4, 5, 21, 22, 23], "somehow": 2, "tensorflow": [2, 3, 18, 23, 411], "pytorch": [2, 3, 18, 20, 23, 275, 277, 279, 281, 282, 283, 411, 445, 446, 447, 448, 449, 450], "jax": [2, 3, 18, 20, 23, 275, 280, 391, 392, 395, 411], "mxnet": [2, 18, 23, 411], "other": [2, 5, 6, 7, 9, 18, 20, 22, 23, 33, 34, 57, 58, 60, 61, 152, 175, 212, 213, 275, 278, 379, 383, 391, 394, 399, 405, 407, 411], "strong": 2, "industri": 2, "back": [2, 17, 18, 20, 411, 417, 441, 442, 445, 449], "momentum": 2, "won": [2, 3, 23], "t": [2, 3, 5, 9, 10, 18, 20, 21, 22, 23, 298, 307, 308], "ad": [2, 5, 6, 7, 8, 9, 18, 22, 212, 265, 266, 311, 316, 340, 344, 451, 452], "just": [2, 3, 5, 6, 9, 18, 20, 21, 429, 438], "make": [2, 3, 5, 6, 8, 9, 18, 20, 21, 23, 105], "problem": [2, 5, 20], "even": [2, 3, 5, 20, 21, 22, 23, 152, 200], "wors": 2, "rather": [2, 23, 60, 61, 105, 146, 212, 247, 248, 250, 275, 280], "funni": 2, "comic": 2, "strip": 2, "": [2, 3, 4, 5, 7, 9, 10, 18, 20, 21, 22, 23, 34, 35, 38, 59, 60, 71, 74, 75, 152, 201, 275, 277, 279, 281, 283, 311, 329, 330, 360, 366, 372, 399, 405, 407, 411, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "easi": 2, "feasibl": 2, "space": [2, 60, 61, 69, 70, 212, 232], "howev": [2, 6, 7, 9, 20, 21, 22, 23], "import": [2, 6, 9, 18, 20, 21, 23, 290, 296, 411, 417], "case": [2, 5, 6, 7, 8, 9, 18, 20, 22, 23, 60, 71, 105, 141, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 169, 170, 174, 175, 176, 185, 186, 188, 189, 196, 200, 201, 203, 204, 205, 206, 209, 211, 212, 257, 258, 311, 320, 340, 348, 360, 363, 369, 399, 401, 402, 403, 405, 406, 407, 429, 440, 441, 442, 445, 449], "ivi": [2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455], "unlik": [2, 9, 105], "charger": 2, "charact": 2, "encod": [2, 21, 212, 232, 290, 292], "instant": [2, 411], "messag": [2, 18, 20, 454, 455], "much": [2, 5, 18, 20, 21], "one": [2, 3, 5, 7, 9, 17, 20, 21, 23, 60, 61, 71, 78, 80, 82, 84, 105, 131, 132, 133, 134, 146, 212, 251, 254, 257, 258, 311, 319, 320, 324, 326, 333, 334, 340, 344, 345, 351, 386, 387, 389, 391, 392, 393, 394, 395, 399, 400, 411], "doe": [2, 5, 6, 9, 10, 18, 20, 21, 340, 350], "mandat": 2, "adopt": 2, "continu": [2, 3], "own": [2, 3, 18], "call": [2, 6, 9, 10, 18, 20, 21, 22, 23, 105, 146, 212, 256, 261, 272, 275, 278, 360, 361, 366, 370, 371, 429, 440, 441, 442, 445, 449], "signatur": [2, 6, 8, 9], "replac": [2, 6, 7, 10, 18, 20, 23, 212, 257, 258, 340, 341, 379, 380], "your": [2, 3, 4, 10, 21, 22, 411], "1": [2, 3, 9, 10, 17, 18, 20, 21, 22, 23, 49, 52, 53, 54, 60, 61, 68, 69, 70, 72, 73, 77, 78, 79, 92, 105, 108, 111, 112, 116, 120, 124, 128, 134, 140, 145, 147, 152, 154, 155, 156, 157, 160, 163, 166, 168, 169, 170, 174, 175, 178, 183, 185, 186, 187, 188, 200, 203, 204, 209, 212, 215, 222, 233, 234, 254, 257, 258, 266, 269, 270, 271, 273, 290, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 313, 314, 315, 318, 322, 324, 328, 329, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 352, 360, 372, 377, 378, 379, 380, 381, 382, 383, 385, 396, 397, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "10": [2, 9, 10, 18, 20, 21, 60, 67, 70, 105, 152, 163, 186, 212, 256, 261, 275, 281, 445, 447], "100": [2, 3, 21, 22, 23, 411], "despit": 2, "distinct": [2, 17, 391, 392, 395, 411], "still": [2, 20, 22], "believ": [2, 5], "share": [2, 18], "bring": [2, 18, 19], "benefit": [2, 3, 20, 21], "unrel": 2, "what": [2, 3, 9, 18, 20, 21, 22, 23, 34, 411], "again": [2, 3, 5, 8, 9, 21, 23], "contrari": 2, "bumpi": 2, "road": [2, 411], "allud": [2, 21], "most": [2, 18, 20, 21, 22, 311, 316], "technologi": 2, "sector": [2, 152, 155, 158, 161], "full": [2, 3, 5, 7, 18, 60, 78, 92, 311, 326, 328, 329], "success": 2, "reason": [2, 7, 9, 18, 20, 152, 201], "build": [2, 17, 19, 22, 23, 391, 392, 395, 411, 429, 440, 441, 442], "custom": [2, 22], "comput": [2, 3, 18, 21, 105, 146, 152, 156, 162, 165, 167, 172, 173, 178, 179, 183, 184, 190, 191, 192, 193, 196, 197, 198, 212, 219, 220, 223, 224, 275, 276, 277, 278, 279, 281, 282, 283, 285, 287, 290, 293, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 316, 317, 318, 319, 320, 326, 327, 328, 329, 333, 334, 336, 337, 338, 339, 360, 366, 391, 392, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407], "thank": [2, 21], "interoper": 2, "compon": [2, 18], "bio": 2, "hardwar": 2, "initi": [2, 5, 105, 298, 308, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 445, 449], "pcie": 2, "interfac": [2, 23], "motherboard": 2, "raid": 2, "storag": [2, 21], "virtual": [2, 10], "bluetooth": 2, "wireless": 2, "exchang": 2, "btx": 2, "form": [2, 4, 22, 23, 60, 62, 74, 75, 275, 277, 279, 281, 282, 283, 298, 311, 312, 314, 315, 316, 317, 318, 322, 323, 325, 326, 328, 329, 330, 332, 360, 362, 372], "factor": [2, 105, 112, 144, 145, 146, 275, 276, 277, 281, 282, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 429, 430, 431, 432, 433, 434, 435, 436, 445, 446, 447, 448], "sata": 2, "connect": [2, 22, 23, 429, 439, 440], "host": 2, "bu": 2, "adapt": [2, 275, 282, 445, 448], "devic": [2, 6, 20, 21, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 212, 233, 234, 254, 257, 258, 379, 380, 381, 382, 383, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "html": [2, 8, 10], "enabl": [2, 5, 17, 18, 19, 21, 23], "anyon": [2, 4], "websit": 2, "tcp": 2, "ip": 2, "node": [2, 360, 361, 370, 371], "commun": [2, 4, 5, 411, 417], "network": [2, 18, 22, 34, 298, 307, 411, 418, 429, 441, 442], "smtp": 2, "possibl": [2, 4, 5, 9, 18, 21, 34, 212, 251, 290, 296, 399, 401, 403], "send": 2, "gmail": 2, "outlook": 2, "pop": 2, "u": [2, 5, 22, 311, 312, 329, 399, 400], "email": 2, "ieee": [2, 59, 78, 92, 152, 156, 175, 196, 201, 206], "754": [2, 59, 78, 92, 152, 156, 175, 196, 201, 206], "allow": [2, 18, 60, 69, 70, 212, 251, 441, 442], "calcul": [2, 8, 152, 153, 154, 155, 156, 157, 158, 159, 160, 169, 170, 171, 174, 175, 185, 186, 187, 188, 189, 196, 200, 204, 205, 206, 208, 209, 336, 338, 399, 401, 402, 403, 404, 405, 406, 407], "live": [2, 3], "depend": [2, 7, 8, 18, 78, 79, 152, 153, 154, 155, 157, 158, 159, 160, 169, 170, 174, 175, 185, 186, 187, 188, 200, 204, 205, 209, 311, 316, 326, 328, 329, 386, 390, 396, 397, 398], "did": [2, 8, 23], "aris": 2, "until": [2, 5], "wa": [2, 9, 18, 20, 212, 272, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "substanti": 2, "innov": 2, "growth": 2, "usag": [2, 18, 105, 146], "relev": [2, 7, 9, 21, 445, 446, 447, 448, 449, 450], "area": [2, 33, 152, 155, 158, 161, 411], "necess": 2, "parti": 2, "could": [2, 3, 7, 9, 18, 20, 21, 22, 391, 392, 395], "easili": [2, 21, 22, 23, 411], "engag": [2, 4, 5, 10], "regard": [2, 105], "effect": [2, 7, 60, 71, 275, 283, 399, 405, 407], "2015": 2, "sinc": 2, "alongsid": 2, "machin": [2, 34, 78, 92, 93, 152, 178, 311, 322, 325], "given": [2, 3, 5, 8, 10, 18, 20, 22, 23, 34, 60, 61, 63, 69, 70, 105, 135, 141, 144, 145, 146, 148, 151, 212, 223, 224, 234, 257, 258, 273, 275, 276, 277, 279, 281, 282, 283, 298, 299, 300, 301, 302, 303, 304, 305, 311, 335, 336, 338, 340, 341, 344, 345, 347, 349, 350, 354, 360, 367, 368, 379, 382, 383, 385, 396, 398, 421, 422], "frame": [2, 34], "less": [2, 6, 9, 18, 152, 154, 155, 157, 160, 168, 185, 186, 188, 200, 201, 203, 206, 311, 322, 325, 334, 379, 383, 399, 407], "matur": 2, "state": [2, 17, 18, 19, 21, 34, 152, 196, 298, 308, 411, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "than": [2, 9, 18, 21, 22, 23, 60, 61, 78, 92, 105, 146, 152, 154, 155, 157, 160, 164, 166, 168, 176, 177, 185, 186, 188, 194, 200, 201, 203, 206, 211, 212, 247, 248, 250, 275, 280, 311, 313, 319, 322, 325, 334, 340, 341, 345, 351, 379, 383, 391, 392, 393, 395, 399, 404, 405, 406, 407], "preced": [2, 22], "mention": [2, 5], "aros": 2, "70": 2, "80": 2, "90": 2, "effort": [2, 4], "stage": [2, 4, 5, 10], "complet": [2, 5, 20, 21, 311, 326], "natur": [2, 34, 152, 174, 185, 187, 311, 327], "like": [2, 5, 6, 8, 9, 10, 18, 20, 21, 22, 23, 34, 275, 280, 379, 383, 411], "certainli": 2, "mission": [2, 411], "creat": [2, 4, 10, 18, 19, 22, 33, 34, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 76, 77, 105, 112, 113, 212, 233, 234, 254, 257, 258, 269, 275, 287, 379, 380, 381, 383, 411, 417, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "At": 2, "process": [2, 3, 4, 5, 10, 18, 23, 105, 112, 113, 141, 151], "ourselv": 2, "lead": [2, 3, 311, 326, 329], "quansight": 2, "compani": 2, "made": [2, 5, 18, 20], "organ": [2, 6], "panda": 2, "scipi": 2, "conda": [2, 10], "dask": [2, 391, 392, 395], "apach": 2, "onnx": 2, "scikit": 2, "jupyt": 2, "aw": 2, "cupi": 2, "net": [2, 3, 18, 23], "sympi": 2, "rai": [2, 152, 160], "modin": 2, "spyder": 2, "includ": [2, 6, 9, 34, 60, 61, 62, 212, 240, 274, 311, 334, 360, 361, 379, 383, 386, 388, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 416, 429, 439, 440, 443, 444], "member": [2, 5], "googl": [2, 411], "octoml": 2, "einop": [2, 212, 227, 228, 229], "further": [2, 3, 5, 9, 10, 17, 21, 22, 411], "sponsor": 2, "lg": 2, "electron": 2, "microsoft": 2, "d": [2, 3, 4, 5, 21, 290, 293, 298, 299, 300, 301, 302, 303, 304, 305, 311, 315, 411, 417], "e": [2, 3, 4, 5, 7, 10, 21, 59, 60, 71, 78, 90, 97, 105, 130, 152, 153, 160, 164, 166, 168, 174, 176, 177, 180, 185, 187, 194, 195, 200, 201, 275, 277, 279, 281, 282, 283, 311, 313, 319, 322, 325, 328, 329, 334, 340, 352, 379, 382, 383, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407], "shaw": 2, "co": [2, 18, 34, 152, 212, 232, 411], "intel": 2, "togeth": [2, 22, 23, 451, 452], "major": [2, 386, 389], "involv": [2, 4, 10, 23, 78, 97, 152, 156, 196, 411, 417], "anoth": [2, 5, 20, 23, 60, 66, 78, 80, 82, 84], "promis": 2, "sign": [2, 19, 23, 60, 61, 152, 153, 156, 160, 166, 196, 201, 311, 327, 391, 392, 395, 399, 404, 406], "pursuit": 2, "unif": [2, 4, 20, 411, 417], "clearli": [2, 9], "lot": [2, 3, 20], "thought": [2, 5], "care": [2, 23], "attent": [2, 5, 298, 309, 310, 429, 440], "gone": 2, "simplifi": [2, 18, 19, 20, 22], "compat": [2, 78, 81, 152, 156, 160, 162, 164, 165, 166, 167, 171, 172, 177, 179, 183, 184, 189, 190, 192, 193, 196, 198, 200, 201, 208, 311, 322, 325, 328, 331, 333, 334, 340, 348, 386, 388, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "excit": [2, 4, 411], "complianc": 2, "hope": 2, "due": [2, 152, 196], "suit": [2, 21, 34], "some": [2, 3, 5, 8, 9, 19, 20, 21, 22, 34, 152, 175, 275, 276, 277, 279, 281, 282, 283, 288, 298, 306, 411, 429, 437], "motiv": [2, 20], "great": [2, 3, 18, 20], "convinc": 2, "celebr": 2, "encourag": [2, 34, 411, 417], "foundat": 2, "point": [3, 5, 7, 8, 9, 18, 20, 21, 34, 59, 60, 61, 63, 65, 67, 72, 76, 78, 79, 92, 95, 97, 152, 154, 155, 156, 157, 158, 159, 160, 161, 168, 169, 170, 171, 174, 175, 176, 185, 186, 188, 189, 196, 200, 201, 204, 205, 206, 209, 211, 311, 312, 314, 316, 317, 318, 322, 325, 326, 328, 329, 334, 391, 392, 395, 399, 401, 402, 403, 404, 405, 406, 407], "mai": [3, 20, 22, 60, 61, 66, 152, 172, 179, 184, 191, 192, 212, 226, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403], "ask": [3, 18, 20], "perfectli": 3, "happi": 3, "current": [3, 10, 18, 23, 34, 78, 84, 94, 104, 105, 112, 135, 136, 138, 142, 212, 235, 242, 246, 253, 255, 360, 361, 370, 371, 411], "us": [3, 4, 5, 6, 7, 8, 9, 18, 20, 22, 23, 34, 59, 78, 89, 105, 112, 113, 137, 141, 144, 145, 146, 149, 151, 152, 156, 209, 212, 236, 237, 251, 257, 258, 259, 260, 265, 266, 275, 276, 277, 281, 282, 298, 306, 307, 309, 310, 311, 315, 320, 340, 347, 349, 356, 357, 358, 359, 360, 361, 363, 369, 370, 371, 377, 378, 391, 392, 399, 400, 411, 429, 437, 440, 441, 442, 443, 444, 445, 447, 448], "abund": 3, "better": [3, 20, 21, 22], "ll": [3, 4, 9, 21], "give": [3, 5, 9, 20, 340, 348, 399, 400], "two": [3, 9, 17, 21, 23, 60, 61, 65, 71, 74, 75, 152, 166, 212, 215, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 340, 353, 391, 392, 394, 395, 411], "exampl": [3, 4, 6, 7, 8, 18, 20, 21, 22, 23, 34, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 68, 72, 73, 76, 77, 78, 79, 105, 120, 137, 140, 147, 149, 152, 156, 161, 163, 166, 168, 169, 174, 178, 183, 209, 212, 215, 222, 237, 269, 270, 271, 290, 293, 296, 298, 299, 303, 311, 314, 318, 322, 332, 336, 338, 340, 341, 344, 348, 349, 352, 379, 382, 383, 385, 399, 400, 405, 406, 411], "streamlin": 3, "workflow": [3, 21, 33, 411], "save": [3, 212, 262, 290, 292, 441, 442], "week": 3, "let": [3, 7, 9, 18, 20, 21, 22, 23, 399, 402, 405, 406, 407, 411], "sai": [3, 20], "deepmind": 3, "releas": 3, "awesom": 3, "paper": 3, "love": 3, "choic": [3, 21, 399, 405, 407], "perceiverio": 3, "happen": [3, 5, 21], "slew": 3, "rush": 3, "f": [3, 5, 10, 18, 21, 23, 35, 39, 40, 152, 178, 212, 242, 246, 290, 295], "g": [3, 78, 90, 97, 105, 130, 379, 382, 383, 391, 392, 395, 399, 401, 403, 404, 406], "inevit": 3, "deviat": [3, 377, 378, 379, 382, 399, 405, 443, 444], "origin": [3, 18, 20, 152, 160, 311, 320, 340, 348, 349], "often": 3, "erron": 3, "train": [3, 21, 22, 23, 33, 34, 275, 276, 277, 281, 411], "poor": 3, "converg": 3, "perform": [3, 6, 7, 9, 18, 21, 49, 54, 60, 69, 70, 105, 212, 223, 227, 228, 229, 243, 244, 245, 275, 277, 279, 281, 282, 283, 290, 291, 294, 298, 306, 308, 311, 329, 356, 357, 358, 359, 360, 367, 368, 408, 409, 410], "issu": [3, 4, 18, 20, 22], "etc": [3, 5, 6, 7, 18, 20, 21, 60, 69, 70, 212, 233, 234, 254, 257, 258, 379, 380, 381, 383, 391, 392, 395, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "publish": 3, "manag": [3, 4, 105], "get": [3, 4, 5, 18, 19, 20, 21, 22, 78, 88, 89, 92, 93, 105, 112, 113, 120, 135, 136, 141, 145, 148, 151, 212, 214, 235, 236, 237, 256, 411, 417, 429, 438], "work": [3, 5, 18, 19, 20, 22, 23, 411, 417], "repositori": [3, 5, 10], "pull": [3, 4, 10], "request": [3, 4], "confus": 3, "do": [3, 5, 6, 7, 9, 18, 20, 21, 22, 23, 152, 201, 275, 280, 288, 360, 361, 370, 371, 372], "don": [3, 5, 22], "expect": [3, 212, 214], "codebas": [3, 4, 17, 105, 144, 145, 411], "total": [3, 4, 21, 22, 105, 148, 386, 389, 399, 405, 407], "hour": 3, "spent": 3, "spin": 3, "off": [3, 311, 315, 332], "test": [3, 78, 95, 96, 152, 180, 181, 182, 408, 409, 410], "error": [3, 20, 49, 50, 105, 152, 173, 399, 401, 403, 441, 442, 445, 449], "iter": [3, 18, 21, 57, 58, 105, 123, 125, 126, 127, 128, 133, 146, 212, 213, 258, 263, 340, 343, 347, 350, 354, 355, 360, 361, 362, 366, 370, 371, 372], "address": [3, 5, 18], "sake": 3, "singl": [3, 9, 18, 21, 22, 23, 105, 112, 113, 131, 132, 133, 134, 212, 271, 274, 379, 382, 383, 391, 392], "multipl": [3, 152, 196, 212, 251, 311, 318, 340, 350, 377, 378, 386, 387, 388, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 429, 439], "line": [3, 7, 19, 20, 21, 22, 33, 411, 417], "convert": [3, 6, 18, 60, 62, 78, 84, 90, 91, 105, 129, 130, 212, 264, 270, 271, 290, 292, 297, 311, 335, 360, 362, 372, 422], "directli": [3, 5, 6, 18, 20, 22, 23, 34, 360, 372], "graph": [3, 19, 275, 277, 279, 281, 282, 283, 391, 392, 395, 441, 442], "guarante": [3, 7, 391, 392], "turn": [3, 9], "4": [3, 9, 10, 18, 20, 21, 22, 23, 60, 68, 73, 77, 152, 156, 160, 209, 212, 232, 290, 292, 293, 297, 298, 301, 302, 303, 305, 308, 311, 314, 318, 322, 332, 340, 348, 349, 379, 385, 399, 400, 411, 445, 446, 447, 448, 450], "step": [3, 5, 9, 10, 18, 21, 22, 23, 34, 60, 61, 69, 70, 105, 275, 276, 277, 279, 281, 282, 283, 356, 357, 358, 359, 411, 445, 446, 447, 448, 449, 450], "take": [3, 5, 7, 9, 18, 20, 22, 23, 290, 294, 411, 417], "few": [3, 19, 20, 21, 22, 33, 411, 417], "second": [3, 9, 20, 105, 133, 152, 156, 162, 164, 165, 166, 167, 172, 177, 179, 183, 184, 189, 190, 192, 193, 196, 198, 200, 208, 212, 215, 256, 261, 275, 276, 277, 281, 311, 313, 315, 316, 319, 324, 326, 329, 331, 333, 340, 352, 353, 356, 358, 391, 392, 393, 445, 446, 447], "automat": [3, 5, 17, 18, 19, 22, 23, 411], "convers": [3, 17, 19, 23, 34, 411, 417], "everyon": [3, 4], "regardless": [3, 4, 20, 23, 57, 58], "wouldn": 3, "nice": 3, "write": [3, 4, 5, 8, 10, 18, 20, 23, 49, 52, 105, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 220, 224, 231, 233, 340, 344, 345, 346, 349, 351, 352, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "onc": [3, 5, 18, 21, 105, 146, 311, 318, 329, 379, 380], "know": [3, 391, 392, 395], "among": [3, 7], "frantic": 3, "port": 3, "last": [3, 49, 54, 290, 294, 298, 308, 311, 313, 315, 320, 332, 333, 336, 338, 340, 345, 349, 350, 352, 396, 397, 398, 408, 409, 410, 429, 439], "lucid": 3, "honk": 3, "improv": [3, 18], "understand": [3, 9, 10], "pattern": [3, 7, 212, 227, 228, 229], "hasn": 3, "chang": [3, 5, 8, 10, 18, 22, 105, 340, 348, 360, 362, 372, 411, 417], "now": [3, 10, 20, 21, 23, 34, 429, 440, 441, 442], "spend": 3, "torchvis": 3, "probabl": [3, 298, 306, 379, 380, 429, 437], "sonnet": 3, "about": [3, 18, 22, 23, 78, 92, 93], "next": [3, 9, 10, 20, 21, 78, 92, 411, 441, 442, 445, 446, 447, 448, 449, 450], "everyth": [3, 19], "zero": [3, 9, 18, 21, 22, 60, 63, 65, 71, 74, 75, 77, 78, 79, 152, 156, 164, 175, 191, 192, 196, 200, 201, 209, 212, 254, 257, 258, 275, 276, 277, 281, 282, 298, 306, 311, 314, 319, 322, 325, 333, 334, 340, 349, 355, 386, 387, 388, 389, 391, 392, 395, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 423, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 445, 446, 447, 448], "need": [3, 5, 6, 8, 9, 10, 18, 20, 21, 34, 212, 219, 220, 340, 344], "said": 3, "high": [3, 21, 379, 381, 383], "level": [3, 4, 18, 21, 22, 23], "modul": [3, 10, 18, 19, 21, 23, 34, 35, 212, 252, 379, 382, 383, 411, 418, 419, 420, 421, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 451, 452], "optim": [3, 19, 21, 23, 34, 105, 275, 277, 279, 281, 282, 283, 356, 357, 358, 359, 411, 446, 447, 448, 450], "trainer": [3, 33, 411], "statu": 3, "quo": 3, "kera": 3, "dopamin": 3, "ignit": 3, "catalyst": 3, "lightn": 3, "fastai": 3, "haiku": [3, 23], "flax": [3, 23], "trax": [3, 23], "objax": [3, 23], "idea": [3, 34], "fulli": [3, 6, 18, 19, 20, 21, 22, 23, 429, 439, 440], "offer": [3, 22], "strongli": [4, 411, 417], "welcom": [4, 411, 417], "absolut": [4, 152, 153, 311, 327], "skill": 4, "whether": [4, 49, 50, 57, 58, 78, 79, 88, 94, 95, 96, 104, 105, 120, 133, 137, 141, 146, 149, 151, 152, 182, 212, 213, 215, 216, 223, 226, 230, 232, 238, 240, 242, 246, 247, 248, 249, 250, 251, 263, 267, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 298, 306, 311, 316, 356, 357, 358, 359, 360, 361, 362, 366, 370, 371, 372, 379, 380, 408, 409, 410, 421, 422, 429, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450], "vetern": 4, "beginn": 4, "start": [4, 5, 8, 9, 10, 18, 20, 21, 22, 34, 60, 61, 69, 70, 105, 117], "aspect": [4, 21, 290, 296, 411], "guid": [4, 5, 411], "through": [4, 5, 9, 18, 20, 21, 22, 23, 34, 152, 160], "journei": [4, 411, 417], "inclusvi": 4, "big": 4, "team": [4, 5], "board": 4, "contributor": [4, 5, 411], "split": [4, 17, 18, 105, 112, 125, 126, 127, 128, 144, 145, 146, 212, 251, 340, 411], "section": [4, 8, 21, 22, 391, 392, 395], "below": [4, 8, 9, 10, 18, 19, 20, 21, 22, 23, 34, 60, 74, 75, 152, 156, 209, 311, 315, 332, 340, 349, 411], "best": [4, 5, 9, 10, 212, 251], "go": [4, 9, 21], "finish": [4, 411], "dive": [4, 20, 21], "basic": [4, 10], "fork": [4, 212, 252], "navig": 4, "quick": [4, 22], "tour": 4, "type": [4, 6, 8, 9, 18, 20, 21, 23, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 118, 120, 129, 130, 134, 135, 137, 139, 140, 141, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 247, 248, 249, 250, 254, 257, 258, 259, 260, 263, 265, 266, 267, 269, 270, 271, 273, 274, 275, 280, 285, 287, 290, 294, 296, 298, 299, 303, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 365, 366, 370, 371, 372, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "hint": [4, 6, 8, 152, 156, 209, 340, 349], "add": [4, 6, 7, 8, 18, 20, 152, 336, 337, 339, 377, 378, 411, 417, 443, 444], "correct": [4, 6, 399, 405, 407, 411], "docstr": [4, 6, 10, 152, 156, 209, 340, 349], "properli": 4, "contribut": [5, 18, 417], "Then": [5, 10, 20], "practic": 5, "separ": [5, 18, 20, 21], "branch": [5, 57, 58, 152, 160], "master": 5, "simpli": [5, 8, 18, 22, 23, 152, 175], "role": [5, 19], "kept": [5, 356, 357, 358], "date": 5, "upstream": 5, "pr": 5, "base": [5, 18, 34, 35, 60, 70, 78, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 152, 174, 185, 186, 187, 188, 200, 212, 236, 259, 266, 275, 391, 392, 395, 399, 400, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "more": [5, 9, 18, 19, 20, 21, 22, 23, 34, 60, 61, 78, 80, 152, 175, 311, 319, 340, 345, 391, 392, 393, 395, 411], "complic": [5, 18], "addit": [5, 8, 20, 21, 23, 152, 156, 212, 227, 228, 229, 377, 378, 429, 439], "keep": [5, 19, 21, 23, 212, 273], "script": [5, 10, 18], "root": [5, 10, 21, 152, 206, 379, 382, 383], "folder": [5, 6, 10], "merge_with_upstream": 5, "sh": 5, "To": [5, 21, 22, 23, 411], "updat": [5, 9, 10, 18, 20, 21, 23, 105, 112, 212, 245, 257, 258, 275, 276, 277, 279, 281, 282, 283, 298, 308, 356, 357, 358, 360, 367, 368, 375, 376, 421, 422, 445, 446, 447, 448, 449, 450], "run": [5, 10, 18, 19, 20, 21, 22, 23, 34, 105, 112, 275, 276, 277, 281, 356, 357, 358, 359, 429, 440, 441, 442], "name_of_your_branch": 5, "extens": [5, 8, 152, 156, 209, 340, 349], "act": [5, 9], "placehold": [5, 360, 372], "track": [5, 105, 360, 372, 441, 442], "relat": [5, 34], "sub": [5, 20, 21, 22, 105, 125, 126, 131, 132, 133, 134, 311, 315, 340, 350, 356, 357, 358, 359, 411], "task": [5, 34, 356, 357, 358, 359], "mark": 5, "tick": 5, "ii": [5, 399, 400], "iii": 5, "comment": 5, "titl": [5, 411], "name": [5, 8, 10, 18, 20, 21, 23, 57, 58, 311, 316, 326, 329, 391, 392, 393], "refer": [5, 7, 60, 65, 152, 175, 187, 275, 276, 277, 311, 333, 335, 399, 405, 407, 408, 409, 410, 429, 439], "issue_numb": 5, "delet": [5, 10], "No": [5, 18], "wait": 5, "befor": [5, 6, 18, 21, 105, 146, 152, 211, 298, 309, 310, 356, 357, 358, 360, 372, 391, 392, 395, 399, 404, 406], "progress": [5, 19, 23], "soon": [5, 33, 411, 417], "partial": [5, 441, 442], "solut": [5, 311, 328], "help": [5, 9, 20, 21, 22, 33, 399, 406, 411], "review": 5, "either": [5, 7, 8, 10, 18, 20, 21, 60, 66, 152, 156, 160, 181, 185, 186, 188, 189, 196, 201, 203, 204, 209, 212, 226, 247, 251, 252, 311, 319, 356, 357, 358, 359, 399, 404, 406, 429, 440, 441, 442], "merg": 5, "everi": [5, 9, 10, 18, 20, 22, 60, 67, 68, 212, 213], "respond": 5, "good": [5, 8, 9, 10, 18, 22], "shape": [5, 6, 8, 9, 18, 20, 21, 22, 23, 49, 52, 60, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 114, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 220, 231, 234, 238, 254, 257, 258, 264, 290, 293, 295, 296, 298, 300, 302, 304, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 379, 381, 382, 383, 386, 387, 393, 396, 397, 398, 399, 400, 408, 409, 410, 411, 429, 431, 432, 433, 434, 435, 436, 443, 444], "move": [5, 6, 105, 147], "within": [5, 22, 60, 61, 379, 383], "7": [5, 9, 10, 152, 156, 163, 174, 209, 275, 276, 277, 281, 290, 293, 336, 337, 338, 339, 399, 400], "dai": 5, "close": [5, 152, 175, 290, 296], "method": [5, 6, 7, 8, 9, 18, 19, 22, 23, 60, 66, 152, 156, 209, 212, 221, 257, 258, 275, 281, 282, 340, 349, 360, 361, 371, 372, 411, 429, 440, 441, 442], "free": [5, 10, 34], "likewis": [5, 21], "associ": [5, 152, 156, 196, 311, 322, 325, 335], "freed": 5, "flag": [5, 20, 275, 280], "purpos": [5, 7, 10, 17, 20, 152, 175, 411], "ensur": [5, 6, 7], "remain": [5, 6, 152, 156, 196, 201, 340, 348, 360, 366], "access": [5, 10], "prioriti": [5, 35, 38], "who": 5, "short": [5, 22, 298, 308], "basi": [5, 21], "avoid": [5, 20, 105, 152, 175], "situat": [5, 23], "alloc": [5, 60, 74, 75, 78, 79, 105], "upon": [5, 9], "long": [5, 9, 298, 308], "period": 5, "whilst": [5, 23], "prevet": 5, "instead": [5, 9, 18, 20, 21], "unabl": 5, "side": 5, "communuti": 5, "obvious": 5, "never": 5, "reflect": 5, "qualiti": 5, "hypothet": 5, "frustrat": 5, "delai": 5, "respons": [5, 10], "cours": [5, 21], "busi": 5, "peopl": 5, "sometim": 5, "person": 5, "becaus": [5, 6, 7, 8, 18, 22, 23], "limit": [5, 9, 18, 21, 23, 78, 92, 93, 212, 219, 220, 340, 341], "me": 5, "unfairli": 5, "definit": [5, 20, 311, 312], "investig": 5, "newli": [5, 57, 58, 78, 79, 212, 218], "repeat": [5, 8, 212, 229, 340, 354], "yourslef": 5, "simpler": [5, 20], "note": [5, 6, 9, 152, 201, 311, 316, 329, 340, 352, 399, 402], "cannot": [5, 23], "alreadi": [5, 20, 105, 152, 168, 176, 196, 211, 311, 324, 411], "receiv": [5, 105, 112, 113, 212, 214, 251, 429, 439], "least": [5, 7, 9, 311, 319], "final": [5, 8, 9, 18, 20, 21, 60, 69, 70, 212, 232, 429, 440], "done": [5, 9, 21], "tickbox": 5, "lower": [5, 9, 18, 60, 65, 74, 152, 194, 311, 312, 379, 383], "right": [5, 9, 21, 152, 164, 166, 311, 329], "corner": 5, "fix": 5, "conflict": [5, 21], "without": [5, 6, 18, 20, 21, 22, 34, 212, 256, 261, 340, 348, 360, 362, 391, 392, 395], "yourself": [5, 34], "namespac": [6, 10, 18, 23], "matmul": [6, 18, 311, 411], "some_namespac": 6, "insid": [6, 10], "some_backend": 6, "another_backend": 6, "file": [6, 10, 18, 21, 212, 262, 441, 442], "break": [6, 20], "anyth": 6, "refactor": 6, "part": [6, 18, 19, 23, 34, 60, 74, 75, 275, 277, 279, 281, 282, 283, 441, 442], "structur": [6, 10, 21, 22, 212, 221], "ongo": 6, "dtype": [6, 9, 20, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 152, 166, 212, 215, 254, 290, 293, 340, 349, 386, 387, 396, 398, 399, 404, 405, 406, 411], "gener": [6, 8, 10, 18, 20, 22, 23, 34, 57, 60, 61, 69, 70, 152, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 379, 381, 383, 384, 411, 445, 449], "defin": [6, 8, 20, 22, 152, 196, 201, 212, 254, 311, 313, 316, 328, 379, 381, 399, 401, 402, 403], "here": [6, 9, 18, 19, 20, 21, 22, 23, 34], "format": [6, 10, 18, 20, 21, 78, 84, 88, 105, 120, 399, 400, 411], "def": [6, 7, 9, 18, 20, 21, 22, 23, 411], "my_func": [6, 9], "x": [6, 7, 8, 9, 10, 18, 20, 21, 22, 23, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 64, 66, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 105, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 168, 169, 170, 173, 174, 175, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 254, 263, 267, 269, 270, 271, 273, 274, 275, 278, 280, 285, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 329, 330, 332, 334, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 366, 370, 371, 372, 377, 378, 379, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 429, 440], "union": [6, 7, 9, 18, 23, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 120, 125, 126, 127, 128, 129, 130, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 238, 240, 241, 254, 257, 258, 263, 264, 269, 270, 271, 273, 274, 275, 287, 290, 294, 296, 298, 299, 303, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 371, 372, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410], "arrai": [6, 7, 8, 9, 17, 18, 19, 21, 22, 23, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 92, 93, 95, 96, 97, 105, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 136, 138, 142, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 247, 248, 250, 253, 254, 255, 257, 258, 263, 267, 269, 270, 271, 273, 274, 275, 280, 285, 287, 288, 290, 291, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 362, 372, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 416, 429, 437, 440], "nativearrai": [6, 7, 8, 9, 18, 20, 23, 49, 51, 52, 53, 54, 55, 56, 60, 61, 62, 64, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 88, 92, 93, 95, 96, 97, 105, 120, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 238, 240, 241, 254, 257, 258, 263, 269, 270, 271, 273, 274, 275, 287, 290, 294, 296, 298, 299, 303, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 362, 372, 379, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410], "ax": [6, 9, 20, 105, 146, 311, 320, 328, 331, 334, 340, 343, 345, 346, 349, 351, 353, 355, 386, 387, 388, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "int": [6, 7, 9, 23, 49, 54, 57, 58, 60, 63, 65, 67, 68, 69, 70, 72, 74, 75, 76, 78, 81, 87, 89, 92, 93, 96, 105, 125, 126, 127, 128, 139, 140, 146, 212, 223, 224, 227, 228, 229, 232, 233, 238, 254, 257, 258, 263, 264, 273, 290, 294, 296, 298, 299, 303, 311, 313, 315, 331, 332, 333, 334, 336, 338, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 360, 372, 379, 382, 383, 386, 387, 388, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410], "tupl": [6, 7, 9, 20, 21, 22, 57, 58, 60, 62, 63, 67, 72, 76, 78, 81, 212, 232, 264, 290, 296, 311, 322, 325, 329, 331, 334, 340, 342, 343, 345, 346, 349, 351, 352, 355, 360, 362, 363, 365, 367, 368, 369, 372, 373, 374, 375, 376, 379, 381, 382, 383, 386, 389, 391, 392, 393, 394, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "list": [6, 9, 10, 18, 21, 22, 23, 60, 61, 62, 63, 71, 72, 76, 78, 80, 105, 112, 113, 121, 122, 125, 126, 131, 132, 146, 212, 216, 264, 269, 273, 290, 296, 298, 299, 300, 301, 302, 303, 304, 305, 311, 331, 340, 342, 345, 350, 352, 360, 361, 362, 366, 371, 372, 408, 409, 410, 411, 429, 430, 431, 432, 433, 434, 435, 436], "option": [6, 7, 8, 9, 18, 23, 49, 51, 52, 54, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 83, 85, 86, 87, 94, 104, 105, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 220, 223, 224, 225, 231, 233, 234, 252, 254, 257, 258, 265, 266, 275, 285, 298, 310, 311, 320, 322, 325, 334, 336, 338, 340, 342, 344, 345, 346, 347, 349, 350, 351, 352, 360, 361, 366, 371, 372, 379, 382, 383, 386, 387, 388, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "str": [6, 60, 62, 64, 68, 71, 73, 77, 78, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 120, 125, 126, 127, 128, 129, 130, 146, 212, 225, 227, 228, 229, 252, 257, 258, 298, 299, 303, 311, 326, 360, 366, 399, 400, 406], "none": [6, 7, 9, 18, 20, 22, 23, 35, 36, 39, 49, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 76, 77, 78, 85, 86, 87, 92, 93, 105, 112, 113, 118, 119, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 220, 223, 224, 226, 230, 231, 233, 234, 239, 242, 246, 252, 254, 257, 258, 259, 260, 265, 266, 272, 275, 277, 279, 281, 282, 283, 289, 290, 295, 298, 300, 302, 304, 307, 308, 309, 310, 311, 320, 322, 325, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 371, 372, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "dev": [6, 18, 20, 22, 105, 112], "my": 6, "someth": [6, 21, 22], "cool": 6, "special": [6, 7, 8, 9, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 169, 170, 174, 175, 176, 185, 186, 188, 189, 196, 200, 201, 203, 204, 205, 206, 209, 211, 399, 401, 402, 403, 405, 406, 407], "particular": [6, 152, 153], "nan": [6, 8, 59, 78, 79, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 169, 170, 174, 175, 176, 180, 182, 185, 186, 188, 189, 196, 200, 201, 204, 205, 206, 209, 211, 212, 240, 274, 391, 392, 395, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410], "y": [6, 9, 18, 20, 49, 51, 52, 53, 54, 55, 56, 60, 67, 68, 72, 73, 77, 78, 79, 105, 120, 152, 156, 160, 163, 166, 168, 169, 174, 194, 195, 209, 212, 215, 222, 231, 269, 270, 271, 275, 278, 298, 307, 311, 318, 332, 336, 338, 340, 344, 348, 349, 379, 382, 383, 385, 386, 390, 399, 400, 405, 406], "0": [6, 8, 9, 18, 20, 21, 22, 23, 49, 51, 52, 53, 54, 55, 56, 60, 61, 65, 69, 70, 73, 74, 75, 76, 77, 78, 79, 92, 105, 106, 109, 112, 114, 120, 125, 126, 127, 128, 130, 131, 132, 133, 134, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 168, 169, 170, 174, 175, 176, 185, 186, 188, 196, 200, 201, 203, 204, 205, 206, 209, 211, 212, 215, 219, 220, 222, 223, 224, 233, 234, 239, 254, 257, 258, 269, 270, 275, 276, 277, 281, 282, 290, 293, 296, 298, 299, 303, 311, 315, 318, 329, 332, 334, 336, 338, 340, 341, 342, 343, 344, 346, 349, 350, 352, 360, 372, 379, 380, 381, 382, 383, 384, 385, 391, 392, 395, 399, 400, 402, 405, 406, 407, 411, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452], "els": [6, 18, 20, 22, 23, 212, 217, 226, 230, 360, 370], "paramet": [6, 8, 20, 21, 34, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 416, 421, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "input": [6, 7, 8, 9, 18, 20, 21, 22, 23, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 68, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 95, 96, 97, 105, 112, 113, 120, 121, 124, 125, 128, 134, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 263, 264, 267, 269, 270, 271, 273, 274, 275, 278, 280, 285, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 377, 378, 379, 380, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444], "numer": [6, 22, 60, 71, 78, 79, 152, 153, 156, 168, 171, 175, 176, 177, 180, 181, 182, 183, 191, 192, 196, 197, 198, 200, 201, 203, 208, 211, 212, 236, 237, 259, 260, 265, 266, 311, 313, 319, 324, 331, 332, 333, 379, 385, 386, 387, 388, 399, 401, 404, 406, 423], "along": [6, 60, 69, 70, 105, 125, 126, 127, 128, 131, 132, 133, 134, 146, 212, 223, 224, 233, 273, 290, 294, 311, 320, 332, 333, 334, 336, 338, 340, 342, 345, 347, 349, 350, 352, 354, 356, 357, 358, 359, 379, 385, 386, 387, 388, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "op": [6, 18], "place": [6, 7, 8, 9, 23, 60, 61, 62, 63, 64, 65, 67, 68, 72, 73, 76, 77, 105, 147, 152, 156, 209, 212, 243, 244, 245, 340, 349, 445, 446, 447, 448, 449, 450], "return": [6, 7, 8, 18, 20, 21, 22, 23, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 416, 421, 422, 429, 438, 439, 445, 449], "cooler": 6, "_cur_framework": 6, "wherea": [6, 23], "output": [6, 7, 8, 9, 18, 20, 22, 23, 49, 52, 60, 61, 63, 64, 65, 67, 68, 71, 72, 73, 76, 77, 105, 112, 113, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 218, 220, 224, 231, 233, 275, 278, 298, 300, 302, 304, 306, 308, 309, 310, 311, 332, 340, 344, 345, 346, 347, 349, 351, 352, 354, 379, 381, 382, 383, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440], "alwai": [6, 7, 18, 20, 78, 79, 152, 156, 196, 212, 245, 275, 280, 285], "instanc": [6, 7, 8, 9, 21, 22, 23, 105, 112, 152, 156, 209, 212, 245, 340, 349, 421, 422], "subsequ": [6, 9, 22], "agnost": [6, 7, 18, 20, 23, 411], "handl": [6, 22, 57, 58, 105, 118, 120, 129, 130, 141, 148, 151, 275, 277, 279, 281, 282, 283, 445, 446, 447, 448, 449, 450], "prevent": [6, 20, 275, 276, 277, 281, 399, 406, 445, 446, 447], "nativ": [6, 20, 21, 78, 83, 90, 91, 105, 118, 120, 129, 130, 141, 148, 151, 212, 245, 247, 250, 421, 422], "permit": [6, 7], "wrap": [6, 18, 20, 23, 212, 218, 275, 288], "implement": [6, 7, 8, 18, 20, 21, 22, 23, 34, 78, 79, 97, 152, 153, 154, 155, 157, 158, 159, 160, 169, 170, 174, 175, 185, 186, 187, 188, 196, 200, 201, 204, 205, 209, 311, 316, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 411], "torch": [6, 7, 18, 20, 21, 22, 23, 57, 58, 411], "anywai": 6, "composit": [6, 18, 22, 23], "lstm_updat": [6, 18, 298], "execut": [6, 10, 18, 20, 23, 212, 272], "arg": [6, 10, 18, 20, 22, 35, 38, 105, 112, 124, 128, 134, 146, 212, 258, 421, 422, 441, 442], "dictat": [6, 9], "repres": [6, 10, 20, 60, 71, 78, 84, 89, 152, 155, 156, 158, 161, 170, 196, 205, 298, 307, 311, 327, 328], "sequenc": [6, 34, 105, 112, 113, 212, 216, 251, 290, 296, 340, 350, 352, 360, 365, 429, 438, 443, 444, 451, 452], "brittl": 6, "accept": [6, 7, 8, 9, 20, 152, 156, 191, 192, 201, 209, 340, 349, 399, 402, 411], "both": [6, 7, 9, 18, 20, 21, 22, 23, 34, 152, 200, 311, 313, 319, 333], "intend": [6, 399, 406], "subset": [6, 8, 18], "requir": [6, 9, 10, 20, 57, 58, 152, 206, 311, 316, 340, 352, 421, 422], "behaviour": [6, 8, 20], "freeli": 6, "extend": [6, 8], "abov": [6, 7, 8, 9, 10, 20, 21, 22, 23, 60, 74, 75, 152, 156, 196, 209, 311, 315, 316, 332, 340, 349, 379, 381, 399, 404, 405, 406], "creation": [6, 18, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "though": [6, 21], "string": [6, 18, 21, 78, 88, 90, 91, 94, 104, 105, 118, 120, 129, 130, 135, 141, 147, 148, 151, 212, 225], "represent": [6, 34, 59, 78, 84, 90, 91, 92, 93, 105, 129, 130, 152, 153, 156, 162, 165, 167, 193, 196, 212, 264, 269], "int32": [6, 399, 404, 406], "float32": [6, 9, 78, 90, 91, 290, 293, 340, 349], "bool": [6, 9, 23, 57, 58, 60, 67, 78, 79, 82, 85, 86, 87, 88, 94, 95, 96, 104, 105, 120, 137, 146, 149, 152, 172, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 198, 212, 213, 215, 216, 223, 226, 230, 232, 238, 240, 247, 248, 249, 250, 263, 273, 274, 275, 285, 311, 312, 320, 329, 334, 340, 350, 360, 361, 362, 366, 370, 371, 372, 386, 387, 388, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "cpu": [6, 60, 69, 70, 105, 120, 139, 141, 147, 148, 151, 212, 233, 234, 254, 257, 258, 379, 380, 381, 383, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "gpu0": 6, "gpu2": 6, "align": [6, 7, 18, 20, 411, 417], "categori": [6, 17, 411], "dtype_from_str": [6, 78], "default_dtyp": [6, 78], "dev_from_str": [6, 105], "default_dev": 6, "something_cool": 6, "apart": 6, "thorough": 7, "explan": [7, 20], "three": [7, 9, 17, 60, 71, 411], "randomli": [7, 290, 295, 298, 306, 429, 437], "chosen": [7, 60, 61, 152, 160, 386, 390], "tan": [7, 8, 18, 152, 411], "roll": [7, 8, 340], "consum": [7, 105], "flexibl": [7, 9], "combin": [7, 9, 23, 290, 296], "broadcast": [7, 8, 9, 49, 52, 78, 80, 81, 105, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 220, 231, 311, 319, 320, 322, 325, 328, 333, 334, 340, 344, 345, 346, 347, 349, 351, 352, 386, 387, 388, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "leav": [7, 21, 22, 340, 352, 360, 361, 362, 370, 371, 372], "class": [7, 9, 10, 18, 19, 21, 22, 23, 33, 34, 35, 78, 93, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 212, 214, 245, 251, 270, 275, 288, 336, 339, 360, 362, 372, 411, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "self": [7, 18, 20, 21, 22, 23, 411, 445, 449], "furthermor": [7, 18], "pass": [7, 9, 20, 78, 83, 105, 112, 146, 152, 160, 212, 218, 245, 275, 288, 356, 357, 358, 421, 422, 441, 442, 445, 449, 451, 452], "np": [7, 20, 21, 23, 411], "ndarrai": [7, 20, 60, 62, 212, 270], "backend": [7, 19, 20, 23, 78, 84, 94, 104, 105, 137, 140, 149, 212, 242, 245, 246, 275, 277, 279, 281, 282, 283, 288, 411, 421, 422, 445, 446, 447, 448, 449, 450], "control": [7, 20, 21, 34], "__add__": [7, 20], "__sub__": [7, 20], "__mul__": [7, 20], "__div__": 7, "dicat": 7, "result": [7, 8, 9, 21, 49, 52, 60, 61, 78, 97, 105, 112, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 220, 224, 231, 233, 257, 258, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 320, 334, 340, 344, 345, 346, 349, 351, 352, 386, 387, 388, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "serv": [7, 17, 411], "specifi": [7, 18, 21, 22, 23, 60, 61, 63, 67, 69, 70, 72, 74, 75, 76, 78, 79, 81, 84, 105, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 136, 138, 142, 145, 146, 147, 152, 201, 212, 233, 234, 240, 273, 290, 296, 311, 315, 320, 331, 332, 333, 334, 336, 338, 340, 341, 342, 343, 345, 349, 351, 352, 355, 360, 365, 367, 368, 373, 374, 375, 376, 386, 387, 388, 391, 392, 395, 396, 397, 399, 400, 404, 406, 408, 409, 410], "addition": 7, "similarli": [7, 20, 60, 71], "shift": [7, 9, 152, 164, 166, 340, 349], "axi": [7, 9, 18, 20, 23, 34, 49, 54, 60, 69, 70, 105, 106, 109, 114, 125, 126, 127, 128, 131, 132, 133, 134, 146, 212, 223, 224, 233, 273, 290, 294, 311, 313, 315, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 379, 385, 386, 387, 388, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "x1": [7, 9, 152, 156, 160, 162, 164, 165, 166, 167, 171, 172, 177, 178, 179, 183, 184, 189, 190, 192, 193, 194, 195, 196, 198, 200, 201, 208, 212, 215, 298, 303, 311, 313, 319, 324, 328, 331, 333, 386, 390], "x2": [7, 9, 152, 156, 160, 162, 164, 165, 166, 167, 171, 172, 177, 178, 179, 183, 184, 189, 190, 192, 193, 194, 195, 196, 198, 200, 201, 208, 298, 303, 311, 313, 319, 324, 328, 331, 333, 386, 390], "explain": [8, 9, 18, 19, 20, 21, 22, 23, 411, 417], "exemplar": 8, "firstli": [8, 21], "correspond": [8, 9, 78, 80, 152, 160, 200, 311, 313, 316, 328, 340, 342, 349, 379, 380, 386, 387, 388, 391, 392, 393, 395, 399, 404, 405, 406, 407], "templat": [8, 411], "found": 8, "under": [8, 9, 18, 21, 23], "spec": [8, 9], "api_specif": 8, "approxim": [8, 49, 50, 152, 154, 155, 157, 158, 159, 160, 169, 170, 174, 175, 185, 186, 187, 188, 200, 204, 205, 209, 311, 322, 325], "tangent": [8, 49, 56, 152, 159, 160, 161, 209, 210], "domain": [8, 152, 154, 155, 157, 158, 159, 160, 169, 170, 174, 175, 185, 186, 188, 204, 205, 206, 209], "infin": [8, 59, 78, 79, 152, 153, 155, 156, 158, 159, 160, 168, 169, 170, 174, 175, 176, 177, 180, 181, 185, 186, 188, 189, 196, 200, 201, 204, 205, 206, 209, 211, 311, 334, 399, 401, 403, 408, 409, 410], "codomain": [8, 152, 154, 155, 157, 158, 159, 160, 169, 170, 174, 175, 185, 186, 188, 204, 205, 206, 209], "element": [8, 18, 23, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 67, 68, 74, 75, 105, 123, 127, 133, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 219, 220, 223, 224, 231, 241, 270, 271, 298, 306, 311, 313, 316, 319, 326, 329, 340, 341, 345, 347, 349, 350, 351, 386, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 429, 437], "x_i": [8, 152, 153, 154, 155, 157, 158, 159, 163, 168, 169, 170, 174, 175, 176, 180, 181, 182, 185, 186, 188, 191, 203, 204, 205, 206, 207, 209, 211, 391, 392, 395, 399, 401, 402, 403, 405, 406, 407], "assum": [8, 20, 21, 152, 156, 169, 204, 209, 340, 349], "express": [8, 18, 23, 152, 154, 157, 159, 160, 169, 204, 209], "radian": [8, 152, 154, 157, 159, 160, 169, 204, 209], "float": [8, 20, 22, 49, 51, 59, 60, 61, 63, 65, 67, 68, 70, 72, 76, 78, 79, 86, 92, 95, 97, 105, 135, 141, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 168, 169, 170, 171, 174, 175, 176, 185, 186, 188, 189, 196, 200, 201, 204, 205, 206, 209, 211, 212, 219, 220, 232, 236, 237, 259, 260, 265, 266, 290, 292, 297, 311, 312, 314, 316, 317, 318, 322, 325, 326, 328, 329, 334, 336, 338, 379, 382, 383, 391, 392, 395, 399, 401, 402, 403, 404, 405, 406, 407], "operand": [8, 152, 154, 155, 156, 157, 158, 159, 160, 168, 169, 170, 174, 175, 176, 185, 186, 188, 189, 196, 200, 201, 204, 205, 206, 209, 211, 399, 400, 401, 403, 406], "whose": [8, 60, 74, 75, 152, 155, 158, 161, 169, 170, 200, 204, 205, 209, 212, 218, 311, 312, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 328, 329, 330, 332, 340, 345, 349, 391, 392, 393, 399, 400], "ref": [8, 152, 166, 183, 196, 198, 201, 208, 340, 352], "promot": [8, 78, 79, 82, 97, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 169, 170, 171, 174, 175, 185, 186, 188, 189, 193, 196, 200, 201, 204, 205, 206, 209, 311, 312, 313, 318, 319, 322, 324, 325, 328, 333, 334, 340, 352, 399, 402], "But": [8, 23], "doc": [8, 18, 21, 22, 411], "needless": 8, "duplic": [8, 20, 22], "remov": [8, 10, 23, 311, 315, 319, 332, 340, 351, 356, 357, 358], "info": [8, 411], "It": [8, 9, 10, 18, 20, 21, 22, 49, 52, 105, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 220, 231, 340, 344, 345, 346, 349, 351, 352, 386, 387, 396, 397, 398, 408, 409, 410], "renam": 8, "default": [8, 9, 22, 49, 50, 51, 52, 54, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 105, 112, 113, 119, 120, 124, 125, 126, 127, 128, 131, 132, 133, 134, 141, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 219, 220, 223, 224, 231, 232, 233, 234, 238, 239, 240, 242, 246, 247, 248, 250, 251, 252, 254, 256, 257, 258, 261, 263, 265, 266, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 290, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 320, 322, 325, 326, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 366, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 421, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "ret": [8, 18, 23, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 263, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 370, 371, 372, 377, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 421, 422, 445, 449], "been": [8, 18, 34, 212, 227, 228, 229, 379, 380], "modifi": [8, 18], "conform": [8, 152, 156, 175, 209, 340, 349], "_": [8, 10, 20, 21, 275, 276, 277, 311, 335], "http": [8, 275, 276, 277], "org": [8, 275, 276, 277], "latest": [8, 10, 429, 438], "elementwise_funct": 8, "descript": [8, 152, 156, 209, 311, 334, 340, 349], "simplic": [8, 22, 34, 152, 156, 209, 340, 349], "shown": [8, 9, 18, 20, 152, 156, 209, 340, 349], "show": [9, 34, 411], "func_nam": 9, "cover": 9, "variant": 9, "independ": [9, 18, 23, 311, 313, 328, 379, 380], "combinatorili": 9, "mean": [9, 18, 20, 21, 22, 23, 34, 105, 131, 132, 133, 134, 146, 212, 228, 356, 357, 358, 359, 360, 366, 379, 382, 399, 423], "equal": [9, 60, 65, 67, 68, 78, 79, 152, 164, 166, 180, 181, 200, 212, 213, 215, 216, 311, 315, 322, 325, 340, 343, 350, 355, 379, 383, 391, 392, 395, 396, 397, 398, 399, 402, 405, 406, 407], "maximum": [9, 18, 21, 23, 105, 124, 128, 134, 146, 152, 212, 219, 220, 232, 275, 281, 340, 341, 360, 372, 386, 387, 399, 401, 403, 411], "variat": 9, "grid": [9, 34, 60, 71], "across": [9, 105, 112, 113, 121, 122, 124, 125, 126, 127, 128, 134, 144, 145, 212, 215, 216, 360, 366, 386, 388], "vari": [9, 20, 391, 392, 395], "valu": [9, 18, 20, 23, 60, 61, 65, 67, 68, 69, 70, 78, 79, 85, 86, 87, 105, 114, 119, 145, 146, 152, 153, 154, 156, 157, 159, 168, 172, 173, 176, 177, 178, 179, 183, 184, 194, 195, 196, 198, 199, 200, 202, 211, 212, 219, 220, 221, 226, 232, 233, 234, 239, 242, 246, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 281, 285, 289, 290, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 322, 325, 326, 327, 328, 329, 330, 334, 340, 341, 343, 347, 348, 355, 356, 357, 358, 360, 364, 365, 366, 367, 368, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449], "simplest": 9, "small": [9, 18, 22, 152, 196, 311, 322, 325, 336, 337, 339, 377, 378, 443, 444], "dimens": [9, 18, 21, 49, 54, 60, 74, 75, 105, 133, 212, 227, 228, 229, 232, 238, 254, 273, 290, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 328, 329, 330, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 379, 385, 386, 387, 388, 389, 391, 392, 393, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440], "unus": [9, 57, 58], "inplac": [9, 20, 22, 212, 217, 242, 246, 267, 275, 277, 279, 281, 282, 283, 421, 422, 445, 446, 447, 448, 449, 450], "highlight": 9, "appli": [9, 18, 20, 21, 22, 23, 33, 49, 50, 51, 52, 53, 54, 55, 56, 78, 97, 212, 227, 228, 229, 275, 281, 282, 298, 307, 309, 310, 311, 322, 325, 336, 338, 340, 352, 356, 357, 358, 360, 366, 369, 372, 377, 378, 411, 418, 419, 420, 443, 444], "z": [9, 18, 20, 152, 156, 212, 215, 336, 338, 399, 400], "respect": [9, 60, 71, 152, 153, 156, 160, 162, 164, 165, 166, 167, 171, 172, 177, 178, 179, 183, 184, 189, 190, 192, 193, 196, 198, 201, 208, 275, 276, 277, 278, 279, 281, 282, 283, 311, 326, 356, 357, 358, 359], "hood": [9, 18, 21, 23], "meant": 9, "imaginari": 9, "mode": [9, 57, 58, 105, 131, 132, 133, 134, 146, 152, 156, 196, 311, 326], "std": [9, 379, 382, 399], "prod": [9, 212, 228, 399], "var": [9, 18, 356, 357, 358, 399], "some_flag": 9, "another_flag": 9, "fals": [9, 21, 22, 23, 35, 41, 42, 43, 44, 45, 78, 79, 82, 85, 86, 87, 88, 105, 120, 133, 141, 146, 151, 152, 178, 180, 181, 182, 183, 191, 192, 212, 213, 215, 223, 226, 230, 232, 238, 247, 248, 250, 251, 263, 273, 275, 277, 278, 279, 280, 281, 282, 283, 311, 312, 320, 329, 334, 340, 350, 356, 357, 358, 359, 360, 361, 362, 366, 370, 371, 372, 386, 387, 388, 390, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 421, 422, 441, 442, 445, 446, 447, 448, 449, 450], "true": [9, 18, 20, 21, 22, 23, 49, 50, 57, 58, 60, 69, 78, 79, 82, 105, 137, 149, 152, 178, 180, 181, 182, 183, 191, 192, 212, 213, 215, 217, 218, 230, 232, 240, 241, 269, 271, 274, 275, 277, 279, 280, 281, 282, 283, 285, 298, 306, 311, 312, 320, 329, 334, 336, 337, 338, 339, 356, 357, 358, 359, 360, 361, 370, 371, 379, 380, 386, 387, 388, 390, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 429, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450], "3": [9, 10, 18, 20, 21, 22, 23, 59, 60, 68, 73, 76, 77, 105, 147, 152, 156, 166, 174, 178, 183, 209, 212, 215, 290, 293, 296, 298, 299, 300, 303, 304, 311, 313, 314, 318, 322, 332, 335, 340, 348, 349, 379, 385, 399, 400, 406, 411], "2": [9, 10, 17, 18, 20, 21, 22, 23, 49, 51, 53, 59, 60, 67, 68, 72, 73, 77, 78, 79, 105, 120, 147, 152, 156, 157, 159, 160, 163, 166, 169, 174, 178, 183, 188, 209, 212, 215, 219, 220, 290, 291, 293, 296, 298, 301, 302, 303, 305, 311, 314, 315, 318, 319, 320, 322, 325, 326, 329, 331, 332, 334, 340, 344, 348, 349, 379, 382, 383, 385, 399, 400, 411], "54": 9, "jointli": 9, "x0": [9, 212, 215], "doesn": [9, 10, 18], "procedur": 9, "left": [9, 152, 164, 311, 316, 320, 329, 386, 387], "think": 9, "sens": [9, 20], "miss": [9, 445, 449], "12": [9, 212, 237, 340, 349, 399, 400], "print": [9, 18, 20, 21, 22, 49, 51, 52, 53, 54, 55, 56, 60, 67, 68, 72, 73, 76, 77, 78, 79, 105, 120, 137, 140, 142, 149, 152, 156, 161, 163, 166, 168, 169, 174, 178, 183, 209, 212, 215, 222, 237, 255, 269, 270, 271, 290, 293, 296, 298, 299, 303, 311, 314, 318, 332, 336, 338, 340, 344, 348, 349, 379, 382, 383, 385, 399, 400, 405, 406, 411], "5574077": [9, 152, 209], "1850398": [9, 152, 209], "5": [9, 10, 20, 21, 22, 49, 53, 60, 68, 73, 76, 77, 152, 156, 161, 166, 209, 290, 293, 298, 303, 304, 311, 318, 332, 340, 348, 349, 379, 385, 399, 400, 429, 440], "5463025": [9, 152, 209], "8422884": [9, 152, 209], "91601413": [9, 152, 209], "6": [9, 10, 20, 21, 22, 60, 68, 152, 156, 163, 209, 290, 293, 340, 348, 349, 399, 400], "9647598": [9, 152, 209], "3738229": [9, 152, 209], "1597457": [9, 152, 209], "0963247": [9, 152, 209], "9955841": [9, 152, 209], "3278579": [9, 152, 209], "satisfi": [9, 311, 335], "ignor": [9, 60, 71, 445, 449], "far": [9, 19, 20, 360, 361, 371], "concern": 9, "asid": [9, 34], "irrelev": 9, "increasingli": 9, "complex": [9, 21, 22, 23, 311, 316, 329], "rule": [9, 78, 79, 82, 97, 152, 161, 166, 171, 196, 201, 311, 312, 313, 324, 328], "exclud": [9, 18, 35, 36, 60, 61, 379, 383], "count": [9, 21, 311, 333, 340, 345, 391, 392, 393, 408, 409, 410], "14254655": [9, 152, 209], "1578213": [9, 152, 209], "380515": [9, 152, 209], "8": [9, 10, 17, 21, 152, 156, 290, 293, 399, 400, 411, 429, 440], "9": [9, 10, 21, 22, 152, 156, 163, 275, 276, 277, 281, 340, 349, 399, 400, 445, 446, 447], "15": [9, 340, 349, 399, 400], "bit": [9, 20, 78, 89, 92, 93, 152, 163, 164, 166, 290, 292, 297, 399, 404, 406], "trivial": 9, "By": [9, 22, 23, 212, 223, 224, 311, 333, 340, 347, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "demonstr": [9, 20], "non": [9, 18, 57, 58, 78, 79, 94, 152, 191, 192, 311, 314, 322, 329, 331, 333, 334, 386, 387, 388, 389, 399, 401, 402, 403, 404, 407, 408, 409, 410, 441, 442, 445, 449], "thei": [9, 20, 21, 22, 23, 356, 357, 358, 379, 380, 411, 451, 452], "caus": 9, "11": [9, 152, 156], "mix": [9, 18, 78, 97, 152, 156, 399, 402], "were": 9, "docst": 9, "ever": [9, 10], "unsur": [9, 10], "proce": [9, 10], "imag": [10, 18, 19, 21, 23, 34, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 411], "builder": [10, 33, 411], "dockerfil": 10, "clone": [10, 105, 121, 122, 123, 124], "unifyai": 10, "command": [10, 411], "window": [10, 290, 296, 298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "maco": 10, "ubuntu": 10, "uid": 10, "cd": 10, "bash": 10, "environ": [10, 34], "instal": [10, 34, 411], "termin": [10, 18, 21], "ivy_dev": 10, "activ": [10, 22, 50, 51, 52, 53, 54, 55, 56, 411, 419, 420], "builtin": [10, 20, 22], "packag": 10, "explicit": [10, 18], "cmd": 10, "directori": [10, 212, 262], "m": [10, 18, 60, 71, 74, 75, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 328, 329, 330, 332, 379, 382, 383], "python3": 10, "bat": 10, "OR": [10, 152, 165, 192, 408, 410], "bin": 10, "mac": 10, "linux": 10, "make_docs_without_dock": 10, "path": 10, "rel": [10, 275, 277, 279, 281, 282, 283, 311, 315, 322, 325, 332, 340, 345, 349, 396, 397, 398], "synchron": 10, "rest": [10, 19, 23], "remove_doc": 10, "indic": [10, 19, 23, 49, 54, 152, 203, 212, 233, 234, 241, 254, 257, 258, 298, 299, 300, 301, 302, 303, 304, 305, 311, 334, 340, 349, 360, 361, 363, 365, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 386, 387, 388, 389, 391, 392, 394, 396, 397, 398, 411, 414, 416, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442], "privat": [10, 445, 449], "fulfil": [10, 17, 411], "previous": [10, 18, 212, 218], "autogenerated_sourc": 10, "png": [10, 21], "_imag": 10, "lastli": 10, "rst": 10, "main": [10, 60, 65, 74, 75, 311, 315, 332], "submodul": [10, 17, 18, 22, 411, 443, 444, 451, 452], "skip": 10, "read": [10, 411], "configur": 10, "partial_sourc": 10, "conf": 10, "copi": [10, 18, 20, 21, 34, 60, 66, 78, 79, 212, 222, 270, 271, 340, 348, 360, 362, 396, 398], "create_rst_fil": 10, "filter": [10, 298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "recurs": [10, 22, 360, 361, 362, 370, 371, 372], "its": [10, 78, 80, 105, 146, 311, 319, 340, 344, 348, 349, 353], "overal": [10, 23], "markup": 10, "extract": 10, "get_functions_and_class": 10, "doctr": 10, "readm": 10, "module_nam": 10, "copy_readme_to_rst": 10, "tabl": 10, "content": [10, 18, 21], "toc": 10, "tree": 10, "accord": [10, 78, 82, 92, 152, 156, 166, 196, 212, 233, 257, 258, 311, 333, 340, 343, 355, 399, 405, 407], "append": [10, 18, 21, 152, 164, 311, 315, 319], "append_toctree_to_rst": 10, "index": [10, 20, 59, 60, 65, 71, 212, 233, 234, 340, 352, 360, 363, 364, 367, 368, 369, 373, 375, 386, 387, 388, 389, 391, 392, 393, 396, 397, 414, 416], "create_index_rst": 10, "14": 10, "\u03c0": [10, 152, 154, 157, 159, 160], "local": 10, "feel": 10, "channel": [10, 212, 232, 290, 292, 293, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "debug_mod": 11, "set_breakpoint_debug_mod": 11, "set_debug_mod": 11, "debug_mode_in": [11, 14], "except": [11, 14, 20, 78, 81, 212, 217, 226, 272, 311, 325, 340, 342, 352, 386, 389, 408, 409, 410], "set_exception_debug_mod": 11, "unset_debug_mod": 11, "debugg": [12, 13, 14, 15, 16], "multi": [17, 298, 309, 311, 313, 411, 417, 429, 440], "fall": [17, 411, 441, 442, 445, 449], "block": [17, 19, 23, 411], "end": [17, 34, 60, 61, 152, 160, 411, 417], "handler": [17, 19, 23, 411], "compil": [17, 19, 411, 441, 442, 445, 446, 447, 448, 449, 450], "transpil": [17, 19, 411, 417], "fledg": [18, 19], "label": [18, 19, 23, 336, 337, 338, 339], "cuda": [18, 21, 60, 69, 70, 105, 112, 130, 212, 233, 234, 254, 257, 258, 379, 380, 381, 383, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452], "syntact": [18, 23], "clip": [18, 21, 23, 152, 194, 195, 212, 219, 220, 340, 411], "elementwis": [18, 23, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "py": [18, 20, 22, 23, 379, 382, 383], "x_min": [18, 23, 340, 341], "x_max": [18, 23, 340, 341], "nd": [18, 23, 411], "clip_by_valu": [18, 23], "clamp": [18, 23], "mayb": [18, 20], "behavior": [18, 152, 200, 201, 391, 392, 395], "fit": [18, 290, 296, 340, 347], "logspac": [18, 60], "construct": [18, 19, 22, 23, 340, 354, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "stop": [18, 60, 61, 69, 70, 105, 117, 146, 275, 277, 279, 281, 282, 283, 285, 356, 357, 358, 359, 445, 446, 447, 448, 449, 450], "num": [18, 60, 69, 70, 290, 296], "power_seq": 18, "linspac": [18, 60, 61, 411], "default_devic": [18, 105], "explicitli": [18, 311, 316, 429, 438, 440, 441, 442], "okai": 18, "bound": 18, "set_framework": [18, 20, 21, 23, 35, 411], "resid": [18, 22], "interv": [18, 23, 60, 61, 69, 70, 311, 333, 340, 341, 352, 379, 383, 408, 409, 410], "outsid": [18, 20, 23, 340, 341, 352], "edg": [18, 23, 340, 341, 343, 355], "wise": [18, 23, 49, 50, 51, 52, 53, 54, 55, 56, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 171, 172, 173, 177, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 208, 212, 231, 340, 341], "smaller": [18, 23, 340, 341, 349, 399, 404, 406], "larger": [18, 23, 78, 92, 340, 341, 349, 399, 405, 407], "param": [18, 23, 212, 233, 234, 360, 365], "minimum": [18, 23, 105, 152, 153, 212, 236, 237, 259, 260, 265, 266, 340, 341, 386, 388, 399, 401, 403, 411], "scalar": [18, 23, 60, 68, 212, 254, 271, 274, 311, 334], "infer": [18, 23, 57, 58, 60, 61, 62, 64, 67, 68, 73, 77, 152, 178, 212, 238, 263, 290, 295, 340, 348], "ml_framework": [18, 23, 60, 61], "current_framework": [18, 23, 35], "implicit": 18, "select": [18, 20, 23], "ones": [18, 20, 21, 60, 65, 73, 212, 254, 290, 296, 411], "concaten": [18, 21, 212, 232, 340, 342, 411], "global": [18, 78, 85, 86, 87, 105, 112, 113, 144, 145, 146, 212, 236, 237, 256, 259, 260, 261, 265, 266, 377, 378, 443, 444], "via": [18, 20, 21, 34, 360, 361, 370, 371], "unset": [18, 20], "framework_handl": [18, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 411], "face": 18, "kwarg": [18, 20, 22, 35, 38, 105, 112, 124, 128, 134, 212, 251, 421, 422, 441, 442], "verbos": [18, 411, 455], "cprint": [18, 454], "framework_stack": 18, "stack": [18, 60, 74, 75, 290, 296, 311, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 329, 330, 332, 340, 360, 361, 370, 371, 411, 429, 438], "_determine_framework_from_arg": 18, "valueerror": [18, 340, 351], "get_framework": [18, 35], "fail": [18, 20], "valid": [18, 78, 83, 298, 299, 300, 301, 302, 303, 304, 305, 340, 352, 408, 409, 410, 429, 430, 431, 432, 433, 434, 435, 436], "otherwis": [18, 20, 60, 61, 78, 79, 82, 85, 86, 87, 152, 180, 181, 182, 212, 217, 272, 275, 280, 285, 311, 312, 314, 333, 334, 356, 357, 358, 386, 387, 388, 390, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "neither": [18, 152, 156, 196], "callabl": [18, 57, 58, 105, 146, 212, 218, 226, 228, 356, 357, 358, 359, 360, 366, 370, 371, 372, 414, 416], "popul": [18, 379, 380, 399, 405, 407], "__dict__": [18, 20], "overwrit": [18, 105, 146], "slightli": [18, 22], "illustr": [18, 34], "un": [18, 78, 94], "ivy_original_dict": 18, "k": [18, 60, 65, 74, 75, 212, 215, 298, 310, 311, 319, 326, 328, 329, 330, 332, 379, 382, 383, 386, 389], "v": [18, 21, 22, 23, 298, 310, 411, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 449, 451, 452], "item": [18, 20, 21, 23, 78, 85, 105, 112, 113, 114, 121, 123, 125, 127, 133, 212, 221, 239, 265, 266, 360, 365, 366, 367, 368, 372, 375, 376, 411, 441, 442], "log": [18, 21, 60, 70, 152, 187, 189, 311, 327, 336, 337, 339, 411], "constitut": [18, 399, 405, 407], "higher": [18, 23, 275, 277, 279, 281, 282, 283], "nn": [18, 23, 60, 71, 411], "init_h": [18, 298, 308], "init_c": [18, 298, 308], "kernel": [18, 298, 308], "recurrent_kernel": [18, 298, 308], "bia": [18, 22, 298, 307, 308, 429, 430, 431, 432, 433, 434, 435, 436, 439], "recurrent_bia": [18, 298, 308], "x_shape": 18, "batch_shap": [18, 20, 23, 212, 254, 290, 291, 292, 293, 295, 296, 297, 298, 308, 309, 310, 311, 335, 379, 380, 429, 438], "timestep": [18, 298, 308, 429, 438], "input_channel": [18, 22, 429, 430, 431, 432, 433, 434, 435, 438, 439], "x_flat": 18, "reshap": [18, 20, 23, 290, 293, 340, 411], "wi": 18, "wi_x": 18, "wii_x": 18, "wif_x": 18, "wig_x": 18, "wio_x": 18, "recurr": [18, 298, 308], "wh": 18, "lstm": [18, 298, 308, 429], "ht": 18, "ct": 18, "hts_list": 18, "unrol": [18, 21, 298, 308], "wii_xt": 18, "wif_xt": 18, "wig_xt": 18, "wio_xt": 18, "zip": 18, "unstack": [18, 21, 212, 411], "htm1": 18, "ctm1": 18, "wh_htm1": 18, "whi_htm1": 18, "whf_htm1": 18, "whg_htm1": 18, "who_htm1": 18, "num_or_size_split": [18, 340, 350], "sigmoid": [18, 21, 22, 49, 411], "ft": 18, "gt": 18, "tanh": [18, 49, 152, 411], "ot": 18, "expand_dim": [18, 21, 340, 411], "might": [18, 20, 21, 212, 226], "offici": 18, "stabl": [18, 212, 236, 237, 259, 260, 265, 266, 396, 397, 398], "reliabl": 18, "decis": [18, 20], "minim": 18, "sacrific": 18, "hear": 18, "hit": 18, "virtu": 18, "One": [18, 20, 21, 212, 228, 340, 348, 379, 381], "piec": 18, "exact": [18, 391, 392], "pure_ivi": 18, "reduce_mean": [18, 21, 22, 23, 411], "reduce_sum": [18, 411], "reduce_var": 18, "sin": [18, 152, 212, 232, 411], "o": 18, "compile_graph": [18, 23], "pure_torch": 18, "sum": [18, 105, 131, 132, 133, 134, 146, 152, 156, 189, 212, 224, 228, 257, 258, 311, 332, 334, 399, 400, 405], "cat": [18, 23], "backbon": [18, 21], "underpin": 18, "extra": [18, 275, 278], "toward": [18, 340, 349, 411, 417], "__init__": [18, 20, 21, 22, 23, 35, 78, 105, 112, 113, 114, 115, 116, 117, 275, 379, 382, 383, 411, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "_layer": 18, "linear": [18, 21, 22, 23, 49, 50, 51, 52, 212, 232, 290, 294, 298, 306, 328, 411, 429, 430, 431, 432, 433, 434, 435, 436], "super": [18, 21, 22, 23], "_forward": [18, 21, 22, 411], "clean": [18, 19, 21], "w": [18, 21, 22, 275, 276, 277, 279, 281, 282, 283, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305], "random_unifrom": 18, "unclean": 18, "wx": 18, "temp": 18, "trace": [18, 212, 247, 248, 250, 311], "store": [18, 20, 21, 22, 212, 232, 275, 288, 311, 332, 340, 350, 441, 442], "effici": [18, 21], "travers": [18, 20, 360, 372], "torchscript": 18, "lambda": [18, 21, 445, 448, 450], "fn": [18, 20, 105, 112, 113, 212, 272, 360, 361, 366, 367, 368, 370, 371, 372, 414, 416], "dynam": [18, 57, 58], "example_input": [18, 57, 58], "static_argnum": [18, 57, 58], "static_argnam": [18, 57, 58], "tf": [18, 23, 411], "jit": 18, "maxim": 18, "low": [18, 379, 381, 383], "On": [19, 23], "page": [19, 23, 33, 411, 417], "explor": [19, 23, 34], "frontend": 19, "mainli": [19, 21], "treat": [19, 23, 57, 58], "abil": 19, "primit": 19, "conveni": [19, 21, 22], "experi": [19, 21], "describ": [19, 23, 399, 400, 404, 405, 406], "document": [19, 21, 23], "hierarch": [19, 21, 22], "solv": [19, 34, 311], "behind": [19, 275, 277, 279, 281, 282, 283], "trainabl": [19, 21, 22, 275, 280, 421, 422, 441, 442, 451], "built": [19, 60, 61, 105, 429, 440, 441, 442], "attribut": [19, 20, 21, 22, 78, 92, 93], "straight": 20, "constructor": [20, 212, 214, 451, 452], "arraywithdevic": 20, "arraywithgener": 20, "arraywithgradi": 20, "arraywithimag": 20, "arraywithlinalg": 20, "arraywithlog": 20, "arraywithmath": 20, "arraywithmeta": 20, "arraywithrandom": 20, "arraywithreduct": 20, "is_ivy_arrai": [20, 212], "_data": 20, "assert": [20, 21, 212, 217], "is_native_arrai": [20, 212], "_shape": 20, "_size": 20, "functool": 20, "reduc": [20, 105, 146, 212, 228, 311, 326, 386, 387, 388, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "mul": 20, "len": [20, 23, 60, 71], "_dtype": 20, "_devic": 20, "_dev_str": 20, "dev_to_str": [20, 105], "_pre_repr": 20, "gpu": [20, 105, 137, 140], "_post_repr": 20, "properti": [20, 21, 22, 105, 114, 441, 442, 445, 446, 447, 448, 450], "ndim": [20, 311, 326, 329], "size": [20, 21, 60, 69, 70, 105, 144, 145, 146, 212, 257, 290, 295, 311, 315, 320, 324, 326, 329, 333, 340, 344, 349, 350, 351, 379, 380, 382, 383, 386, 387, 389, 408, 409, 410, 429, 430, 431], "matrix_transpos": [20, 311], "mt": 20, "wrapper": 20, "around": 20, "dedic": [20, 22, 275, 288, 421, 422], "coupl": [20, 22], "answer": 20, "perhap": [20, 21, 22], "consol": 20, "throw": 20, "typeerror": 20, "jaxlib": 20, "xla_extens": 20, "devicearrai": 20, "object": [20, 23, 35, 60, 66, 78, 92, 105, 275, 360, 363, 365, 367, 368, 369, 373, 374, 375, 376, 379, 385, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442], "assign": 20, "immut": 20, "idx": 20, "pure": [20, 23], "behav": 20, "irrespect": [20, 78, 79], "ve": [20, 379, 380, 411], "claim": 20, "truli": 20, "__setitem__": 20, "_native_wrapp": 20, "queri": [20, 105, 135, 145, 298, 309, 310, 429, 440], "val": [20, 212, 243, 244, 245, 259, 260], "attributeerror": 20, "scatter_nd": [20, 212, 411], "reduct": [20, 212, 228, 257, 258, 408, 409, 410, 411], "genuin": 20, "logic": [20, 152, 190, 191, 192, 408, 409, 410, 411], "some_method": 20, "rewritten": 20, "__pow__": 20, "fine": [20, 23], "strang": 20, "integ": [20, 60, 61, 67, 78, 93, 96, 97, 152, 153, 162, 163, 164, 165, 166, 167, 168, 176, 177, 193, 200, 201, 202, 211, 311, 321, 333, 334, 340, 350, 379, 381, 384, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "power": [20, 21, 22, 152, 166, 174, 200, 212, 236, 259, 266, 311, 321, 423], "enforc": 20, "notic": 20, "appear": [20, 340, 344], "actual": [20, 22], "inv": [20, 311, 411], "linear_algebra": [20, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "invers": [20, 34, 152, 154, 155, 157, 158, 159, 160, 161, 311, 318, 325], "excess": 20, "opt": 20, "_wrap_method": 20, "func_wrapp": 20, "hasattr": 20, "__name__": 20, "non_wrapped_method": 20, "_method_wrap": 20, "native_arg": 20, "native_kwarg": 20, "args_to_n": 20, "to_ivi": 20, "nest": [20, 21, 22, 105, 124, 128, 134, 212, 269, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 441, 442, 445, 446, 447, 448, 449, 450], "inner_fn": 20, "outlin": 20, "whist": 20, "down": 20, "verifi": [20, 411, 417], "unwrap": 20, "inner": [20, 311, 316, 319, 356, 357, 358, 359], "importantli": [20, 23, 34], "abl": [20, 23], "transit": 20, "needlessli": 20, "randn": 20, "_unwrap_method": 20, "method_wrap": 20, "whenev": [20, 21], "parent": 20, "deriv": [20, 22, 60, 64, 68, 73, 77, 275, 276, 277, 279, 281, 282, 283, 360, 362, 372, 441, 445, 449, 451], "compartment": 20, "readabl": [20, 21], "public": [20, 212, 221], "inherit": 20, "abc": [20, 105, 112, 117, 441, 442, 445, 449], "newshap": [20, 340, 348], "new_shap": 20, "transpos": [20, 23, 105, 133, 298, 300, 302, 304, 311, 323, 325, 411, 429, 431, 433, 435], "flip": [20, 21, 23, 152, 163, 340, 411], "tidi": 20, "20": [20, 152, 174], "approach": [20, 21], "shorter": 20, "hard": 20, "crystal": 20, "topic": 20, "41": [20, 399, 406], "That": [20, 21, 22, 152, 201], "enough": [20, 21, 22], "ton": 21, "ado": [21, 22], "dictionari": 21, "incredibli": 21, "hash": 21, "arbitrarili": 21, "soup": 21, "dict": [21, 22, 105, 112, 113, 125, 126, 127, 128, 212, 227, 228, 229, 360, 362, 363, 366, 369, 372], "featur": [21, 411], "top": [21, 22], "walk": [21, 22], "dct": 21, "cnt": 21, "keyword": [21, 60, 71, 105, 112, 113, 124, 128, 134, 212, 214, 251, 360, 366, 399, 406, 441, 442], "combo": [21, 411, 417], "intuit": [21, 22], "hold": [21, 212, 257, 258], "larg": [21, 152, 156, 196], "1000": 21, "uda": 21, "map": [21, 34, 105, 112, 360, 367, 368, 372, 411, 429, 440], "3333": 21, "6667": 21, "Or": [21, 399, 400], "178": 21, "gradient": [21, 22, 34, 105, 146, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 356, 357, 358, 359, 411, 445, 446, 447, 448, 449, 450], "grad": [21, 22, 23, 411, 445, 449], "lr": [21, 22, 275, 277, 279, 281, 282, 283, 445, 446, 447, 448, 449, 450], "new_weight": 21, "0600": 21, "3100": 21, "2400": 21, "6900": 21, "kei": [21, 105, 114, 212, 221, 298, 309, 310, 356, 357, 358, 360, 363, 369, 421, 422, 429, 440, 445, 449], "equival": [21, 23, 60, 61, 152, 166, 191, 192, 201, 311, 322, 325, 328, 334], "delimit": 21, "autocomplet": 21, "auto": 21, "press": [21, 411], "tab": [21, 411], "midwai": 21, "agent": 21, "total_spe": 21, "total_height": 21, "total_width": 21, "ag": 21, "tot": 21, "total_": 21, "total_h": 21, "disk": [21, 290, 292], "hdf5": [21, 441, 442], "to_disk_as_hdf5": 21, "from_disk_as_hdf5": 21, "same_arrai": 21, "pickl": 21, "to_disk_as_pickl": 21, "from_disk_as_pickl": 21, "altern": 21, "config": 21, "batch_siz": [21, 290, 293, 298, 299, 300, 301, 302, 303, 304, 305, 379, 380], "16": 21, "dir": 21, "dataset": [21, 33, 411], "dropout": [21, 298, 429, 440], "adam": [21, 22, 23, 275, 276, 277, 281, 411, 445, 447], "json": 21, "to_disk_as_json": 21, "from_disk_as_json": 21, "all_tru": 21, "compar": [21, 212, 213, 215, 216, 391, 392, 395, 396, 397, 398], "achiev": [21, 23], "per": [21, 105, 298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "leaf": [21, 360, 361, 370, 371], "debug": 21, "cnt0": 21, "cnt1": 21, "deep_copi": 21, "diff": 21, "diff_0": 21, "diff_1": 21, "detect": [21, 22, 360, 361, 371], "config0": 21, "config1": 21, "Not": [21, 22, 59], "helper": 21, "hierarchi": 21, "screen": 21, "decod": 21, "l0": 21, "l1": [21, 311, 334], "depth": [21, 22, 23, 34, 105, 124, 128, 134, 212, 239, 254, 360, 372, 441, 442], "clearer": 21, "truncat": 21, "__": 21, "flatten_key_chain": [21, 441, 442], "above_height": 21, "decoder__l0": 21, "decoder__l1": 21, "encoder__l0": 21, "encoder__l1": 21, "height": [21, 290, 296], "below_depth": 21, "l0__b": 21, "l0__w": 21, "l1__b": 21, "l1__w": 21, "with_print_limit": 21, "printabl": 21, "displai": 21, "with_key_length_limit": 21, "length": [21, 60, 61, 71, 311, 329, 330, 340, 348], "with_print_ind": 21, "indent": 21, "detail": [21, 22, 60, 66, 391, 392, 395], "obviou": 21, "foresight": 21, "untidili": 21, "update_ag": 21, "normalize_img": 21, "img": 21, "img_max": 21, "reduce_max": [21, 411], "img_min": 21, "reduce_min": [21, 411], "img_rang": 21, "agent_posit": 21, "agent_veloc": 21, "agent_cam_front_rgb": 21, "agent_cam_front_depth": 21, "agent_cam_rear_rgb": 21, "agent_cam_rear_depth": 21, "agent_cam_lidar": 21, "normal": [21, 340, 352, 377, 378, 379, 382, 443, 444], "cleaner": 21, "particularli": 21, "camera": 21, "front_rgb": 21, "front_depth": 21, "rear_rgb": 21, "rear_depth": 21, "lidar": 21, "rgb": 21, "rear": 21, "posit": [21, 34, 59, 60, 65, 78, 92, 105, 124, 128, 134, 152, 153, 180, 181, 196, 201, 212, 232, 311, 312, 340, 344, 349, 379, 384, 386, 389, 408, 409, 410, 421, 422], "veloc": 21, "cam": 21, "cam_max": 21, "cam_min": 21, "cam_rang": 21, "Of": 21, "isn": 21, "five": 21, "four": 21, "briefli": 21, "ideal": 21, "perman": 21, "afterward": 21, "thread": 21, "incorpor": 21, "multiprocess": [21, 105, 112, 212], "queue": [21, 105, 112, 113, 212, 256, 261], "pretti": 21, "straightforward": 21, "batch": [21, 105, 144, 145, 212, 232, 290, 295, 298, 307, 311, 334, 356, 357, 358, 359, 377, 378, 443, 444], "dataload": [21, 33, 411], "_cnt": 21, "img_": 21, "_dataset_s": 21, "_batch_siz": 21, "_count": [21, 22], "__next__": 21, "filenam": 21, "img_fnam": 21, "list_stack": 21, "fname": 21, "rang": [21, 22, 23, 60, 61, 69, 70, 399, 404, 406, 411], "loaded_img": 21, "cv2": 21, "imread": 21, "from_numpi": 21, "loader": 21, "32": 21, "batch_slic": 21, "fact": 21, "variabl": [21, 22, 23, 212, 217, 243, 244, 245, 246, 247, 248, 250, 267, 275, 277, 278, 279, 280, 281, 282, 283, 285, 288, 298, 309, 311, 328, 356, 357, 358, 359, 377, 378, 411, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "model": [21, 22, 411], "mymodel": [21, 411], "linear0": [21, 22, 411], "64": [21, 22, 411, 429, 440], "linear1": [21, 22, 411], "relu": [21, 22, 49, 50, 51, 411], "x_in": [21, 22, 23, 411], "target": [21, 22, 23, 105, 118, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 411], "001": [21, 22], "loss_fn": [21, 22, 23, 411], "loss": [21, 22, 23, 337, 338, 339, 411], "execute_with_gradi": [21, 22, 23, 275, 411], "to_numpi": [21, 212, 411], "0145": 21, "grad_fn": 21, "addbackward0": 21, "manual": [22, 360, 361, 370, 371], "_create_vari": 22, "output_channel": [22, 429, 430, 431, 432, 433, 434, 435, 438, 439], "with_bia": [22, 429, 439], "_input_channel": 22, "_output_channel": 22, "_w_shape": 22, "_b_shape": 22, "_with_bia": 22, "random_uniform": [22, 379, 411], "8979": 22, "3198": 22, "0196": 22, "3126": 22, "3717": 22, "9687": 22, "6958": 22, "5122": 22, "3902": 22, "8800": 22, "5613": 22, "1982": 22, "well": [22, 23, 34, 212, 240, 311, 328], "nightmar": 22, "overcom": 22, "arbitrari": [22, 60, 71, 78, 80, 97, 105, 131, 132, 134], "fc": 22, "9563": 22, "direct": [22, 23, 34, 396, 398], "impact": 22, "v0": 22, "v1": 22, "6440": 22, "key0": 22, "key1": 22, "1823": 22, "8075": 22, "correctli": [22, 311, 320, 386, 387], "linear3": 22, "v2": 22, "2346": 22, "seem": 22, "counter": 22, "hidden": [22, 298, 308, 429, 438], "weight": [22, 23, 275, 276, 277, 279, 281, 282, 283, 298, 307, 308, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 445, 447, 448], "chain": [22, 23, 356, 357, 358, 451, 452], "fed": [22, 105, 146], "sequenti": 22, "1300": 22, "decoupl": 22, "scheme": 22, "come": [22, 33, 411, 417], "weight_initi": [22, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "glorotuniform": [22, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "bias_initi": [22, 429, 430, 431, 432, 433, 434, 435, 436, 439], "_w_init": 22, "_b_init": 22, "create_vari": [22, 423], "var_shap": [22, 423], "fan_out": [22, 423], "fan_in": [22, 423], "uniform": [22, 379, 380, 383, 423, 424, 425, 427], "fan_mod": [22, 423], "fan_sum": 22, "gain": [22, 423], "constant": [22, 23, 105, 112, 113, 336, 337, 339, 340, 343, 360, 366, 377, 378, 423, 426, 428, 441, 442, 443, 444], "slight": 22, "misnom": 22, "themselv": [22, 360, 361], "applic": [22, 298, 309, 310, 360, 366, 372], "belong": 22, "recap": 22, "saw": 22, "vanilla": [22, 356, 358], "descent": [22, 275, 279, 445, 450], "lar": [22, 275, 281, 282, 445], "lamb": [22, 275, 281, 445], "1e": [22, 23, 212, 237, 275, 276, 277, 281, 336, 337, 338, 339, 411, 445, 446, 447, 448, 450], "beta1": [22, 275, 276, 277, 281, 445, 446, 447], "beta2": [22, 275, 276, 277, 281, 445, 446, 447], "999": [22, 275, 276, 277, 281, 445, 446, 447], "epsilon": [22, 275, 276, 277, 281, 311, 322, 325, 336, 337, 338, 339, 377, 378, 443, 444, 445, 446, 447], "07": [22, 275, 276, 277, 281, 336, 337, 338, 339, 445, 446, 447], "stop_gradi": [22, 105, 146, 275, 277, 279, 281, 282, 283, 356, 357, 358, 359, 411, 445, 446, 447, 448, 449, 450], "compile_on_next_step": [22, 441, 442, 445, 446, 447, 448, 449, 450], "_beta1": 22, "_beta2": 22, "_epsilon": 22, "_mw": 22, "_vw": 22, "_first_pass": 22, "_should_compil": 22, "_step": [22, 445, 449], "new_v": 22, "adam_upd": [22, 275], "_lr": 22, "isinst": [22, 23, 212, 269], "_inplac": 22, "_stop_gradi": 22, "set_stat": [22, 445, 446, 447, 448, 449, 450], "mw": [22, 275, 276, 277], "vw": [22, 275, 276, 277], "revisit": 23, "revers": [23, 212, 226, 340, 345], "pre": [23, 105], "captur": 23, "one_hot": [23, 212, 411], "sparse_funct": 23, "num_class": [23, 379, 380], "ey": [23, 60], "cumprod": [23, 212], "math": [23, 411], "exclus": [23, 60, 61, 212, 223, 247, 248, 250, 275, 280, 379, 381], "ones_lik": [23, 60, 411], "num_dim": 23, "new_axi": 23, "plai": 23, "constitu": 23, "_linear": 23, "forward": [23, 34, 441, 442, 445, 449], "previou": [23, 275, 277, 281], "to_backend": 23, "jax_graph": 23, "learnabl": [23, 377, 378, 443, 444], "post": [23, 377, 378, 411, 417], "to_ivy_modul": [23, 421], "thinli": 23, "preserv": [23, 275, 285, 340, 345], "choos": [23, 152, 191, 192, 386, 390, 391, 392, 395, 399, 401, 402, 403], "to_haiku_modul": 23, "hk": 23, "jnp": [23, 411], "loss_fn_t": 23, "transform": [23, 34, 298, 306, 307], "without_apply_rng": 23, "rng": 23, "random": [23, 34, 380, 381, 382, 383, 384, 385, 411], "prngkei": 23, "42": 23, "init": 23, "update_rul": 23, "01": 23, "tree_multimap": 23, "taken": [23, 311, 315], "architectur": 23, "mechan": [33, 411], "vision": [33, 411], "robot": [33, 411], "memori": [33, 105, 118, 141, 146, 148, 151, 298, 308, 411], "overview": 34, "focus": 34, "variou": 34, "field": [34, 311, 316, 326, 329, 391, 392, 393], "perfect": 34, "showcas": 34, "3d": [34, 429, 434, 435], "differenti": 34, "demo": [34, 411], "pip": [34, 411], "orient": 34, "pose": 34, "largest": [34, 78, 92, 93, 311, 329], "euler": [34, 59], "quaternion": 34, "rotat": 34, "matric": [34, 60, 71, 74, 75, 298, 307, 311, 312, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 328, 329, 330, 332], "vector": [34, 60, 71, 212, 220, 298, 307, 311, 313, 316, 319, 324, 329, 330, 333, 334, 335, 429, 439], "angl": [34, 152, 160, 170, 205], "ivy_mech": 34, "target_facing_rotation_matrix": 34, "polar_to_cartesian_coord": 34, "predominantli": 34, "ordin": [34, 311, 328], "warp": [34, 290, 291], "optic": 34, "flow": 34, "voxel": 34, "cloud": 34, "ivy_vis": 34, "coords_to_voxel_grid": 34, "render_pixel_coord": 34, "neural": [34, 298, 411, 418, 429], "radianc": 34, "nerf": 34, "trajectori": 34, "motion": 34, "plan": [34, 411], "mobil": 34, "ivy_robot": 34, "sample_spline_path": 34, "rigidmobil": 34, "sample_bodi": 34, "drone": 34, "sample_link": 34, "openai": 34, "swimmer": 34, "cumul": [34, 212, 223, 224], "reward": 34, "supervis": 34, "reinforc": 34, "door": 34, "intersect": 34, "cartpol": 34, "mountain_car": 34, "pendulum": 34, "reacher": 34, "polici": 34, "condit": [34, 57, 58, 360, 370, 371, 386, 390], "learnt": 34, "ture": 34, "ntm": 34, "egospher": 34, "spatial": 34, "esm": 34, "ivy_memori": 34, "egocentr": 34, "room": 34, "collect": [34, 49, 57, 105, 212, 275, 290, 298, 336, 360, 377, 379, 418, 429, 443, 445], "inspir": 34, "contextmanag": 35, "choose_random_framework": 35, "clear_framework_stack": 35, "global_framework": [35, 38], "try_import_ivy_jax": 35, "warn": [35, 41, 42, 43, 44, 45], "try_import_ivy_mxnet": 35, "try_import_ivy_numpi": 35, "try_import_ivy_tf": 35, "try_import_ivy_torch": 35, "unset_framework": 35, "gelu": [49, 418], "gaussian": [49, 50], "unit": [49, 50, 51, 52, 105], "leaki": [49, 50, 51], "leaky_relu": [49, 411], "alpha": [49, 51], "rectifi": [49, 51, 52], "neg": [49, 51, 60, 61, 65, 152, 180, 181, 196, 200, 201, 311, 329, 333, 334, 340, 345, 349, 408, 409, 410], "slope": [49, 51], "39": [49, 51], "85": [49, 51], "17": [49, 51], "268": [49, 53], "880": [49, 53], "softmax": [49, 298, 309, 310, 411], "09003057": [49, 54], "24472847": [49, 54], "66524096": [49, 54], "softplu": [49, 411], "3461": [49, 55], "6491": [49, 55], "5350": [49, 55], "4203": [49, 55], "hyperbol": [49, 56, 152, 155, 158, 161, 170, 205, 210], "55": [49, 56], "50": [49, 56], "func": [57, 58, 105, 146, 212, 218, 275, 278], "faster": [57, 58], "dure": [57, 58, 212, 272, 275, 276, 277, 281, 311, 319, 356, 357, 358, 359, 399, 405, 407, 441, 442, 445, 446, 447, 449], "invoc": [57, 58], "static": [57, 58], "718281828459045": 59, "inf": [59, 212, 240, 274, 311, 334], "newaxi": 59, "alia": 59, "pi": 59, "141592653589793": 59, "mathemat": [59, 152, 156, 160, 175, 196, 311, 334], "arang": [60, 69, 70, 290, 293, 411], "evenli": [60, 61, 69, 70, 340, 350], "half": [60, 61, 379, 383], "word": [60, 61, 379, 383, 421, 422], "certain": [60, 61, 69, 70], "inclus": [60, 61, 379, 381], "distanc": [60, 61], "adjac": [60, 61], "empti": [60, 61, 399, 405, 406, 408, 409, 410], "dimension": [60, 61, 65, 71, 311, 313, 314, 319, 322, 324, 325, 333, 334, 340, 350, 386, 387, 388, 389, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "ceil": [60, 61, 152, 411], "datatyp": [60, 62, 78, 83, 95, 96], "interpret": [60, 62], "asarrai": [60, 298, 299], "fill": [60, 63, 67, 68, 72, 73, 76, 77, 379, 381], "uniniti": [60, 63, 64], "empty_lik": 60, "n_row": [60, 65], "n_col": [60, 65], "diagon": [60, 65, 74, 75, 311, 332, 399, 400], "elsewher": [60, 65, 386, 390], "row": [60, 65, 311, 328, 329, 379, 380, 386, 389], "column": [60, 65, 311, 316, 326, 328, 329, 399, 400], "upper": [60, 65, 75, 311, 312, 326, 379, 383], "from_dlpack": 60, "__dlpack__": [60, 66], "view": [60, 66], "interchang": [60, 66, 340, 353], "fill_valu": [60, 67, 68], "boolean": [60, 67, 78, 79, 94, 104, 105, 137, 149, 152, 162, 163, 165, 167, 190, 191, 192, 193, 212, 213, 215, 216, 240, 241, 242, 246, 247, 248, 249, 250, 267, 274, 275, 280, 356, 357, 358, 360, 370, 399, 403], "full_lik": 60, "endpoint": [60, 69], "entri": [60, 69, 70, 340, 350], "meshgrid": 60, "xy": [60, 71], "coordin": [60, 71, 152, 160], "cartesian": [60, 71], "matrix": [60, 71, 74, 75, 212, 213, 219, 298, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 332, 335, 429, 439], "ij": [60, 71, 399, 400], "n": [60, 71, 74, 75, 298, 306, 311, 315, 319, 321, 322, 323, 324, 325, 326, 329, 330, 332, 333, 334, 335, 340, 343, 344, 346, 352, 355, 379, 382, 383, 386, 389, 399, 402, 405, 406, 407, 408, 409, 410], "rank": [60, 71, 212, 273, 311, 313, 322, 326, 328, 332, 333, 334, 340, 343, 344, 352, 355, 386, 389, 408, 409, 410], "ni": [60, 71], "xi": [60, 71], "n1": [60, 71], "n2": [60, 71], "n3": [60, 71], "accordingli": [60, 71, 152, 175, 311, 334, 386, 388, 391, 392, 395, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "p": [60, 71, 212, 219, 220, 298, 306, 311, 320, 334, 429, 437], "tril": 60, "triangular": [60, 74, 75, 311, 312, 326], "innermost": [60, 74, 75, 311, 312, 314, 315, 316, 317, 318, 322, 323, 325, 326, 328, 329, 330, 332], "mxn": [60, 74, 75, 311, 315, 322, 323, 325, 326, 330, 332], "triu": 60, "zeros_lik": [60, 411], "data_typ": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "defaultdtyp": 78, "defaultfloatdtyp": 78, "float_dtyp": [78, 86, 99], "defaultintdtyp": 78, "astyp": 78, "cast": [78, 79, 82, 290, 292, 297, 340, 342, 399, 404, 406, 411], "integr": [78, 79], "match": [78, 79, 152, 201, 212, 251], "float64": [78, 79], "broadcast_arrai": 78, "broadcast_to": 78, "incompat": [78, 81], "can_cast": 78, "from_": [78, 82], "occur": [78, 82, 386, 387, 388, 391, 392, 393, 395], "closest_valid_dtyp": 78, "closest": [78, 83, 152, 168, 176, 177, 211], "convert_dtyp": 78, "dtype_in": [78, 84, 89, 90, 91, 94, 95, 96, 104], "as_str": [78, 85, 86, 87, 88, 105, 120], "summari": [78, 85, 86, 87, 98, 99, 100, 105, 115, 116, 119, 143, 212, 221, 225, 239, 275, 284, 289], "default_float_dtyp": 78, "default_int_dtyp": 78, "int_dtyp": [78, 87, 100], "dtype_bit": 78, "dtype_to_str": 78, "finfo": 78, "kind": [78, 92, 93, 152, 200, 399, 404, 406], "inform": [78, 92, 93, 275, 285], "followng": [78, 92], "occupi": [78, 92, 93, 212, 257, 258], "ep": [78, 92, 311, 322, 325], "smallest": [78, 92, 93, 152, 168], "max": [78, 92, 93, 152, 194, 212, 219, 220, 228, 257, 258, 311, 322, 325, 399, 445, 447], "min": [78, 92, 93, 152, 195, 212, 228, 257, 258, 265, 311, 326, 329, 330, 334, 399], "smallest_norm": [78, 92], "precis": [78, 92, 152, 196, 206], "iinfo": 78, "encapsul": [78, 93], "invalid_dtyp": 78, "is_float_dtyp": 78, "is_int_dtyp": [78, 212, 271], "result_typ": 78, "arrays_and_dtyp": [78, 97], "set_default_dtyp": 78, "set_default_float_dtyp": 78, "set_default_int_dtyp": 78, "unset_default_dtyp": 78, "unset_default_float_dtyp": 78, "unset_default_int_dtyp": 78, "valid_dtyp": 78, "defaultdevic": 105, "devcloneditem": 105, "multidevitem": [105, 106, 109], "devclonedit": 105, "multidevit": [105, 107, 110, 112, 113, 116], "devclonednest": 105, "max_depth": [105, 108, 111, 116, 124, 128, 134, 212, 239, 360, 372], "multidevnest": [105, 108, 111], "devdistitem": 105, "devdistit": 105, "devdistnest": 105, "devmanag": 105, "dev_mapp": 105, "da_dim_s": 105, "safety_factor": 105, "min_dev_dim_s": 105, "max_dev_dim_step_ratio": 105, "min_unit_dev_tune_step": 105, "min_sf_tune_step": 105, "starting_split_factor": 105, "max_split_factor_step_s": 105, "05": 105, "tune_dev_alloc": 105, "tune_dev_split": 105, "mapper": [105, 112, 113], "distribut": [105, 121, 125, 126, 127, 128, 298, 306, 336, 338, 379, 380, 381, 382, 383, 429, 437, 441, 442], "intern": [105, 275, 288, 360, 361, 370, 371, 423, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 451, 452], "receivess": 105, "ratio": [105, 275, 281, 290, 296, 445, 447], "safe": [105, 112], "oom": 105, "tune": 105, "util": [105, 135, 409, 410], "da_tune_step": 105, "dim_siz": 105, "ds_tune_step": 105, "to_clon": 105, "to_distribut": 105, "multidevic": [105, 112], "parallel": [105, 112, 113], "mutlidevic": [105, 112], "repeated_config_check": 105, "tune_step": 105, "devmapp": [105, 113], "ret_fn": [105, 112, 113], "queue_class": [105, 112, 113], "worker_class": [105, 112, 113], "timeout": [105, 112, 113, 212, 256, 261], "parallelis": [105, 112, 113], "produc": [105, 112, 113], "worker": [105, 112, 113], "used_dev": [105, 112], "split_factor": [105, 112], "sf": [105, 112], "devmappermultiproc": 105, "multidev": [105, 114, 115, 134], "at_dev": [105, 115, 116], "profil": 105, "save_dir": [105, 117], "clear_mem_on_dev": 105, "cach": [105, 118, 212, 218], "conver": [105, 118, 129, 141, 148, 151], "dev_clon": 105, "deviceic": [105, 121], "dev_clone_arrai": 105, "dev_clone_it": 105, "dev_clone_nest": 105, "dev_dist": 105, "dev_dist_arrai": 105, "dev_dist_it": 105, "iterbal": [105, 127, 133], "dev_dist_nest": 105, "dev_unifi": 105, "concatten": [105, 131, 132, 133, 134, 146], "concat": [105, 131, 132, 133, 134, 146, 212, 232, 340, 411], "dev_unify_arrai": 105, "dev_unify_it": 105, "dev_unify_nest": 105, "spread": [105, 134], "dev_util": 105, "get_all_arrays_on_dev": 105, "aliv": [105, 136, 138, 142, 212, 235, 253, 255], "gpu_is_avail": 105, "num_arrays_on_dev": 105, "num_cpu_cor": 105, "num_gpu": 105, "percent_used_mem_on_dev": 105, "process_specif": [105, 141, 151], "percentag": [105, 141], "ram": [105, 141, 148, 151], "alon": [105, 141, 151], "print_all_arrays_on_dev": 105, "set_default_devic": 105, "set_split_factor": 105, "scale": [105, 144, 145, 275, 282, 298, 306, 309, 310, 377, 378, 429, 437, 440, 445, 448], "chunk": [105, 144, 145, 146], "split_func_cal": 105, "max_chunk_s": [105, 146], "chunk_siz": [105, 146], "input_ax": [105, 146], "output_ax": [105, 146], "feed": [105, 146], "fist": [105, 146], "to_dev": 105, "total_mem_on_dev": 105, "amount": [105, 148, 336, 338], "gb": [105, 148, 151], "tpu_is_avail": 105, "tpu": [105, 149], "unset_default_devic": 105, "used_mem_on_dev": 105, "ab": [152, 200, 311, 334, 411], "magnitud": [152, 153, 156, 196, 311, 329, 330], "aco": [152, 411], "princip": [152, 154, 157, 159], "cosin": [152, 154, 155, 169, 170], "greater": [152, 154, 157, 160, 164, 166, 176, 177, 200, 201, 203, 211, 311, 313, 340, 351, 379, 383], "acosh": [152, 411], "x1_i": [152, 156, 160, 162, 164, 165, 166, 167, 171, 172, 177, 178, 179, 183, 184, 189, 190, 192, 193, 196, 198, 200, 201, 208], "x2_i": [152, 156, 160, 162, 164, 165, 166, 167, 171, 172, 177, 178, 179, 183, 184, 189, 190, 192, 193, 196, 198, 200, 201, 208], "finit": [152, 156, 160, 180, 196, 200, 201], "nonzero": [152, 156, 196, 386], "nor": [152, 156, 196], "nearest": [152, 156, 196, 202], "2019": [152, 156, 175, 196], "too": [152, 156, 196], "overflow": [152, 156, 399, 406], "appropri": [152, 156, 196, 386, 387], "commut": [152, 156], "noqa": [152, 156, 209, 340, 349], "asin": [152, 411], "sine": [152, 157, 158, 204, 205], "asinh": [152, 411], "atan": [152, 411], "atan2": [152, 411], "quotient": [152, 160], "notat": [152, 160, 399, 400], "denot": [152, 160], "pair": [152, 160, 298, 310, 311, 313], "quadrant": [152, 160], "3\u03c0": [152, 160], "atanh": [152, 411], "54930614": [152, 161], "bitwise_and": 152, "bitwis": [152, 162, 165, 167, 193], "AND": [152, 162, 190, 408, 409], "underli": [152, 162, 165, 167, 193], "binari": [152, 162, 165, 167, 193, 336, 337], "bitwise_invert": 152, "invert": [152, 163], "bitwise_left_shift": 152, "bitwise_or": 152, "bitwise_right_shift": 152, "arithmet": [152, 166, 399, 402], "propag": [152, 166, 399, 401, 402, 403, 405, 406, 407], "thu": [152, 166, 200, 201, 311, 316], "floor": [152, 166, 212, 231, 411], "divis": [152, 166, 171, 177, 201, 212, 231, 237, 260, 265, 266, 275, 276, 277, 281, 445, 446, 447], "lh": [152, 166], "int64": [152, 166, 399, 404, 406], "rh": [152, 166], "bitwise_xor": 152, "xor": [152, 167, 193], "54030231": [152, 169], "41614684": [152, 169], "cosh": [152, 411], "divid": [152, 177, 212, 265, 340, 350], "dividend": [152, 171, 201], "divisor": [152, 171, 201, 275, 276, 277, 281, 399, 405, 407, 445, 446, 447], "truth": [152, 172, 178, 179, 183, 184, 198], "erf": 152, "gauss": [152, 173], "exponenti": [152, 173, 174, 189, 200], "exp": [152, 175, 189, 411], "logarithm": [152, 174, 185, 186, 187, 188, 189, 311, 327], "evalu": [152, 174, 175, 185, 186, 187, 188, 197, 203, 207, 360, 361, 370, 371, 408, 409, 410], "71828183": [152, 174], "3890561": [152, 174], "08553692": [152, 174], "expm1": 152, "accur": [152, 175], "fdlibm": [152, 175], "compliant": [152, 175, 191, 192, 399, 401, 402, 403], "potenti": [152, 175], "greatest": [152, 176, 177], "floor_divid": 152, "greater_equ": 152, "isfinit": 152, "out_i": [152, 180, 181, 182], "isinf": 152, "isnan": 152, "less_equ": 152, "log10": 152, "log1p": 152, "log2": 152, "logaddexp": 152, "logical_and": [152, 411], "logical_not": [152, 411], "NOT": [152, 191], "recommend": [152, 191, 192, 201, 399, 402], "logical_or": [152, 411], "logical_xor": 152, "threshold": [152, 194, 195], "exce": [152, 195], "multipli": [152, 212, 223], "product": [152, 196, 212, 223, 298, 309, 310, 311, 313, 319, 324, 333, 399, 400, 404, 429, 440], "unless": [152, 196, 212, 254], "not_equ": 152, "pow": 152, "expon": [152, 200, 212, 266], "unspecifi": [152, 200, 201, 311, 316, 340, 352], "versu": [152, 200], "odd": [152, 200], "remaind": [152, 212, 231, 340, 350], "modulu": [152, 201], "primarili": [152, 201], "backward": [152, 201, 311, 333, 408, 409, 410], "sinh": [152, 411], "sqrt": [152, 311, 334], "squar": [152, 206, 311, 312, 314, 316, 317, 318, 321, 327, 328, 329], "after": [152, 206, 275, 277, 278, 279, 281, 282, 283, 290, 291, 294, 377, 378, 445, 446, 447, 448, 449, 450], "indistinguish": [152, 206], "infinit": [152, 206], "subtract": 152, "trunc": 152, "decim": [152, 211], "all_equ": 212, "equality_matrix": [212, 213], "arg_nam": 212, "array_equ": 212, "j": [212, 215, 311, 332, 399, 400], "arrays_equ": 212, "assert_supports_inplac": 212, "cache_fn": 212, "later": [212, 218], "clip_matrix_norm": 212, "max_norm": [212, 219, 220], "norm": [212, 219, 220, 311, 320, 334, 378, 411, 444, 445, 447], "downscal": [212, 219, 220], "clip_vector_norm": 212, "container_typ": 212, "copy_arrai": 212, "cumsum": [212, 411], "current_framework_str": 212, "default_v": [212, 226], "catch_except": [212, 226], "rev": [212, 226], "with_cal": [212, 226], "catch": [212, 226], "einops_rearrang": 212, "axes_length": [212, 227, 228, 229], "rearrang": [212, 227, 229], "arrang": [212, 227], "einops_reduc": 212, "einops_repeat": 212, "floormod": [212, 411], "denomin": [212, 231, 237, 260, 265, 266, 377, 378, 443, 444], "mod": [212, 231], "fourier_encod": 212, "max_freq": [212, 232], "num_band": [212, 232], "flatten": [212, 232, 311, 324, 334, 340, 347, 349, 386, 387, 388, 391, 392, 393, 395], "pad": [212, 232, 298, 299, 300, 301, 302, 303, 304, 305, 340, 343, 355, 429, 430, 431, 432, 433, 434, 435, 436], "fourier": [212, 232], "frequenc": [212, 232], "band": [212, 232], "linearli": [212, 232, 311, 328], "oppos": [212, 232], "geometr": [212, 232], "seper": [212, 232], "expand": [212, 232, 340, 344], "gather": [212, 234], "slice": [212, 233, 234, 360, 369], "gather_nd": [212, 411], "get_all_arrays_in_memori": 212, "get_min_bas": 212, "get_min_denomin": 212, "get_num_dim": [212, 411], "as_arrai": [212, 238, 263], "get_referrers_recurs": 212, "seen_set": [212, 239], "local_set": [212, 239], "has_nan": 212, "include_inf": [212, 240, 274], "indices_wher": [212, 411], "inplace_arrays_support": 212, "inplace_decr": 212, "decrement": [212, 243], "inplace_incr": 212, "increment": [212, 244], "inplace_upd": [212, 421, 422], "inplace_variables_support": 212, "is_arrai": 212, "is_ivy_contain": 212, "match_kwarg": 212, "allow_dupl": [212, 251], "context": [212, 252, 298, 309, 429, 440], "forkserv": [212, 252], "spawn": [212, 252], "num_arrays_in_memori": 212, "hot": [212, 254], "scatter": [212, 254, 257, 258], "dim": [212, 254, 290, 291, 296, 429, 440], "overrid": [212, 254], "print_all_arrays_in_memori": 212, "queue_timeout": 212, "scatter_flat": 212, "flat": [212, 257, 340, 347], "set_min_bas": 212, "set_min_denomin": 212, "set_queue_timeout": 212, "set_tmp_dir": 212, "tmp_dr": [212, 262], "temporari": [212, 262], "shape_to_tupl": 212, "stable_divid": 212, "min_denomin": [212, 265], "stabil": [212, 265, 266, 396, 397, 398], "_min_denomin": [212, 265], "stable_pow": 212, "min_bas": [212, 266], "_min_bas": [212, 266, 377, 378, 443, 444], "supports_inplac": 212, "tmp_dir": 212, "to_list": [212, 411], "possibli": [212, 269], "to_scalar": 212, "try_else_non": 212, "keepdim": [212, 273, 311, 320, 334, 386, 387, 388, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "unpack": [212, 273], "r": [212, 273, 311, 326, 335], "value_is_nan": 212, "gradienttrack": 275, "with_grad": [275, 284], "adam_step": 275, "dcdw": [275, 276, 277, 279, 281, 282], "delta": [275, 276], "cost": [275, 276, 277, 279, 281, 282, 283, 356, 357, 358, 359], "en": [275, 276, 277], "wikipedia": [275, 276, 277], "wiki": [275, 276, 277], "stochastic_gradient_desc": [275, 276, 277], "dc": [275, 276, 277, 279, 281, 282, 283], "dw": [275, 276, 277, 279, 281, 282, 283], "averag": [275, 276, 277, 281, 356, 357, 358], "moment": [275, 276, 277, 281, 445, 446, 447], "forget": [275, 276, 277, 281, 445, 446, 447], "mw_tm1": [275, 277, 281], "vw_tm1": [275, 277, 281], "rate": [275, 277, 279, 281, 282, 283, 356, 357, 358, 359, 429, 440, 445, 446, 447, 448, 449, 450], "ws_new": [275, 277, 279, 281, 282, 283], "retain_grad": [275, 278], "dy": [275, 278, 290, 293], "dx": [275, 278, 290, 293], "retain": [275, 278], "gradient_descent_upd": [275, 356, 357, 358, 359, 411], "is_vari": 275, "lamb_upd": 275, "max_trust_ratio": [275, 281, 445, 447], "decay_lambda": [275, 281, 282, 445, 447, 448], "trust": [275, 281, 445, 447], "decai": [275, 281, 282, 445, 447, 448], "lars_upd": 275, "layerwis": [275, 282, 445, 448], "optimizer_upd": 275, "effective_grad": [275, 283], "set_with_grad": 275, "preserve_typ": [275, 285], "unset_with_grad": 275, "variable_data": 275, "bilinear_resampl": [290, 411], "bilinearli": [290, 291], "sampl": [290, 291, 294, 298, 306, 379, 380, 382, 383, 399, 405, 407, 429, 437], "h": [290, 291, 292, 293, 295, 297, 298, 301, 302, 303, 304, 305], "num_sampl": [290, 291, 294, 379, 380], "bilinear": [290, 291], "float_img_to_uint8_img": 290, "uint8": [290, 292, 297], "gradient_imag": [290, 411], "linear_resampl": 290, "interpol": [290, 294], "resampl": [290, 294], "random_crop": 290, "crop_siz": [290, 295], "image_dim": [290, 295], "crop": [290, 295], "2d": [290, 295, 311, 327, 429, 432, 433, 436], "nh": [290, 295], "nw": [290, 295], "stack_imag": [290, 411], "desired_aspect_ratio": [290, 296], "group": [290, 296], "width": [290, 296], "uint8_img_to_float_img": 290, "conv1d": [298, 429], "stride": [298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "data_format": [298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "nwc": [298, 299, 300, 429, 430, 431], "dilat": [298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "convolut": [298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "d_in": [298, 299, 300, 301, 302, 303, 304], "fw": [298, 299, 300, 301, 302, 303, 304, 305], "d_out": [298, 299, 300, 301, 302, 303, 304], "slide": [298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "algorithm": [298, 299, 300, 301, 302, 303, 304, 305, 429, 430, 431, 432, 433, 434, 435, 436], "ncw": [298, 299, 300, 429, 430, 431], "wio": [298, 299], "conv1d_transpos": 298, "output_shap": [298, 300, 302, 304, 429, 431, 433, 435], "conv2d": [298, 411, 429], "nhwc": [298, 301, 302, 305, 429, 432, 433, 436], "fh": [298, 301, 302, 303, 304, 305], "nchw": [298, 301, 302, 305, 429, 432, 433, 436], "conv2d_transpos": 298, "conv3d": [298, 429], "ndhwc": [298, 303, 304, 429, 434, 435], "volum": [298, 303], "fd": [298, 303, 304], "ncdhw": [298, 303, 304, 429, 434, 435], "dhwio": [298, 303], "conv3d_transpos": 298, "depthwise_conv2d": [298, 411], "depthwis": [298, 305, 429, 436], "prob": [298, 306, 379, 380, 429, 437], "bernoul": [298, 306, 429, 437], "out_featur": [298, 306, 307], "incom": [298, 307], "outer_batch_shap": [298, 307], "inner_batch_shap": [298, 307], "in_featur": [298, 307], "cell": [298, 308, 429, 438], "multi_head_attent": 298, "num_head": [298, 309, 429, 440], "mask": [298, 309, 310], "to_q_fn": [298, 309], "to_kv_fn": [298, 309], "to_out_fn": [298, 309], "to_q_v": [298, 309], "to_kv_v": [298, 309], "to_out_v": [298, 309], "head": [298, 309, 411, 429, 440], "num_queri": [298, 309, 310], "x_feat_dim": [298, 309], "measur": [298, 309, 429, 440], "num_kei": [298, 309, 310], "cont_feat_dim": [298, 309], "numhead": [298, 309], "feat_dim": [298, 309, 310], "dot": [298, 309, 310, 311, 333, 429, 440], "out_feat_dim": [298, 309], "scaled_dot_product_attent": 298, "q": [298, 310, 311, 316, 326], "choleski": 311, "decomposit": [311, 312, 326, 329], "symmetr": [311, 312, 316, 317, 335], "l": [311, 312, 316, 319, 332], "cross": [311, 336, 337, 338, 339, 411], "vif": [311, 313], "det": 311, "offset": [311, 315, 332, 377, 378], "axis1": [311, 315, 340, 353], "axis2": [311, 315], "eigh": 311, "eigendecomposit": [311, 316], "qlq\u1d40": [311, 316], "orthogon": [311, 316], "eig": [311, 316], "namedtupl": [311, 316, 326, 329, 391, 392, 393], "eigenvalu": [311, 316, 317], "eigenvector": [311, 316], "sort": [311, 316, 329, 330, 397], "eigvalsh": 311, "sever": [311, 318], "25": [311, 318, 336, 338], "75": [311, 318], "prepend": [311, 319], "matrix_norm": 311, "ord": [311, 320, 334], "fro": [311, 320], "matrix_pow": 311, "matrix_rank": 311, "rtol": [311, 322, 325], "singular": [311, 322, 325, 329, 330], "toler": [311, 322, 325], "largest_singular_valu": [311, 322, 325], "outer": [311, 356, 357, 358, 359], "array_lik": [311, 324], "pinv": [311, 411], "moor": [311, 325], "penros": [311, 325], "pseudo": [311, 325], "qr": 311, "orthonorm": [311, 326, 329], "slodget": 311, "logdet": [311, 327], "system": [311, 328], "equat": [311, 328, 399, 400], "coeffici": [311, 328], "svd": [311, 411], "full_matric": [311, 329], "usvh": [311, 329], "vh": [311, 329], "hermitian": [311, 329], "descend": [311, 329, 330, 396, 397, 398], "et": [311, 329], "cetera": [311, 329], "third": [311, 329, 391, 392], "adjoint": [311, 329], "svdval": 311, "tensordot": 311, "contract": [311, 331, 399, 400], "vecdot": 311, "invalid": [311, 333, 408, 409, 410], "vector_norm": 311, "singleton": [311, 334, 340, 351, 386, 388, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "liter": [311, 334], "manhattan": [311, 334], "l2": [311, 334], "euclidean": [311, 334], "vector_to_skew_symmetric_matrix": [311, 411], "mathbf": [311, 335], "mathbb": [311, 335], "skew": [311, 335], "binary_cross_entropi": 336, "pred": [336, 337, 338, 339], "entropi": [336, 337, 338, 339], "predict": [336, 337, 338, 339], "cross_entropi": 336, "discret": [336, 338], "smooth": [336, 338], "38629436": [336, 338], "35667497": [336, 338], "sparse_cross_entropi": 336, "spars": [336, 339], "logit": [336, 339], "join": [340, 342, 352, 411], "constant_pad": 340, "pad_width": [340, 343, 355], "before_1": [340, 343, 355], "after_1": [340, 343, 355], "before_n": [340, 343, 355], "after_n": [340, 343, 355], "insert": [340, 344, 360, 365, 386, 387], "reorder": [340, 345], "permute_dim": 340, "permut": [340, 346, 353], "repetit": [340, 347, 354], "beyond": [340, 349], "restor": [340, 349], "with_remaind": [340, 350], "squeez": [340, 411], "famili": [340, 352], "intxx": [340, 352], "floatxx": [340, 352], "swapax": 340, "axis0": [340, 353], "swap": [340, 353], "tile": [340, 411], "rep": [340, 354], "zero_pad": [340, 411], "fomaml_step": 356, "inner_cost_fn": [356, 357, 358], "outer_cost_fn": [356, 357, 358], "inner_grad_step": [356, 357, 358, 359], "inner_learning_r": [356, 357, 358, 359], "inner_optimization_step": [356, 357, 358, 359], "inner_batch_fn": [356, 357, 358], "outer_batch_fn": [356, 357, 358], "average_across_step": [356, 357, 358], "inner_v": [356, 357, 358], "keep_inner_v": [356, 357, 358], "outer_v": [356, 357, 358], "keep_outer_v": [356, 357, 358], "return_inner_v": [356, 357, 358, 359], "num_task": [356, 357, 358, 359], "maml": [356, 357, 358], "loop": [356, 357, 358, 359], "recev": [356, 357, 358], "maml_step": 356, "rece": [356, 358], "reptile_step": 356, "cost_fn": [356, 359], "reptil": [356, 359], "receivng": [356, 359], "meta": [357, 358, 359], "all_nested_indic": 360, "include_nest": [360, 361], "_index": [360, 361, 371], "_base": [360, 361, 370, 371], "begin": [360, 361, 371], "copy_nest": 360, "include_deriv": [360, 362, 372], "to_mut": [360, 362, 372], "deepli": [360, 362], "mutabl": [360, 362, 372], "index_nest": 360, "insert_into_nest_at_index": 360, "insert_into_nest_at_indic": 360, "map_nest_at_index": 360, "map_nest_at_indic": 360, "multi_index_nest": 360, "repeatedli": [360, 369], "nested_ani": 360, "check_nest": [360, 370, 371], "conditon": [360, 370, 371], "nested_indices_wher": 360, "to_ignor": [360, 371], "nested_map": 360, "_depth": [360, 372], "_tuple_check_fn": [360, 372], "_list_check_fn": [360, 372], "_dict_check_fn": [360, 372], "wherebi": [360, 372], "lowest": [360, 372, 379, 381], "prune_nest_at_index": 360, "prune": [360, 373, 374], "prune_nest_at_indic": 360, "set_nest_at_index": 360, "set_nest_at_indic": 360, "layer_norm": 377, "normalized_idx": [377, 378], "new_std": [377, 378, 443, 444], "mini": [377, 378, 443, 444], "gamma": [377, 378], "beta": [377, 378], "multinomi": 379, "population_s": [379, 380], "draw": [379, 380, 382, 383], "specifc": [379, 380], "locat": [379, 380], "unnorm": [379, 380], "elemtn": [379, 380], "drawn": [379, 380, 381, 382, 383], "randint": [379, 411], "uniformli": [379, 381, 383], "highest": [379, 381], "random_norm": 379, "home": [379, 382, 383], "parameter": [379, 382, 383], "6444774682897879": [379, 382], "boundari": [379, 383], "89150229": [379, 383], "seed": [379, 411], "seed_valu": [379, 384], "shuffl": [379, 411], "argmax": [386, 411], "occurr": [386, 387, 388, 391, 392], "argmin": [386, 411], "style": [386, 389], "yield": [386, 390], "unique_al": 391, "reconstruct": [391, 392, 394], "henc": [391, 392, 395], "difficult": [391, 392, 395], "omit": [391, 392, 395], "x_j": [391, 392, 395], "impli": [391, 392, 395], "inverse_indic": [391, 392, 394], "aggreg": [391, 392], "fourth": [391, 392], "unique_count": 391, "unique_invers": 391, "unique_valu": 391, "argsort": 396, "ascend": [396, 397], "einsum": 399, "einstein": [399, 400], "summat": [399, 400], "seq": [399, 400], "sentinel": [399, 401, 403], "uint64": [399, 404, 406], "int16": [399, 404, 406], "unsign": [399, 404, 406], "uint16": [399, 404, 406], "uint32": [399, 404, 406], "resolv": [399, 404, 406], "degre": [399, 405, 407], "freedom": [399, 405, 407], "adjust": [399, 405, 407], "commonli": [399, 405, 407], "bessel": [399, 405, 407], "8164966": [399, 405], "89": [399, 406], "varianc": [399, 407], "unbias": [399, 407], "statist": [400, 401, 402, 403, 404, 405, 406, 407], "autom": 411, "grow": 411, "ai": 411, "got": 411, "click": 411, "colab": 411, "interact": 411, "immedi": 411, "favourit": 411, "mx": 411, "jax_concat": 411, "tf_concat": 411, "np_concat": 411, "mx_concat": 411, "torch_concat": 411, "prompt": 411, "get_devic": 411, "reduce_prod": 411, "linalg": 411, "neural_net": 411, "ecosystem": [411, 417], "popular": [411, 417], "acceler": 411, "articl": 411, "lenton2021ivi": 411, "inter": 411, "portabl": 411, "author": 411, "lenton": 411, "daniel": 411, "pardo": 411, "fabio": 411, "falck": 411, "fabian": 411, "jame": 411, "stephen": 411, "clark": 411, "ronald": 411, "journal": 411, "arxiv": 411, "preprint": 411, "2102": 411, "02886": 411, "2021": 411, "add_array_spec": 414, "fn_array_spec": 414, "inspect": [415, 416], "geglu": 418, "native_modul": [421, 422], "native_module_class": [421, 422], "firstlayersiren": 423, "kaimingnorm": 423, "negative_slop": 423, "Ones": 423, "siren": 423, "w0": [423, 427], "30": [423, 427], "filter_s": [429, 430, 431], "1d": [429, 430, 431], "conv1dtranspos": 429, "filter_shap": [429, 432, 433, 434, 435, 436], "conv2dtranspos": 429, "conv3dtranspos": 429, "depthwiseconv2d": 429, "num_channel": [429, 436], "num_lay": [429, 438], "return_sequ": [429, 438], "return_st": [429, 438], "get_initial_st": [429, 438], "dens": [429, 439], "multiheadattent": 429, "query_dim": [429, 440], "head_dim": [429, 440], "dropout_r": [429, 440], "context_dim": [429, 440], "with_to_q_fn": [429, 440], "with_to_kv_fn": [429, 440], "with_to_out_fn": [429, 440], "build_mod": [429, 440, 441, 442], "on_init": [429, 440, 441, 442], "__call__": [429, 440, 441, 442], "store_var": [441, 442], "arg_stateful_idx": [441, 442], "kwarg_stateful_idx": [441, 442], "fallback_to_non_compil": [441, 442, 445, 449], "with_partial_v": [441, 442], "initialz": [441, 442], "id": [441, 442], "from_cal": [441, 442], "check_submod_ret": [441, 442], "get_mod_kei": [441, 442], "top_mod": [441, 442], "mod_depth": [441, 442], "mod_height": [441, 442], "mod_with_top_mod_key_chain": [441, 442], "save_weight": [441, 442], "weights_path": [441, 442], "show_mod_in_top_mod": [441, 442], "upper_depth": [441, 442], "lower_depth": [441, 442], "show_structur": [441, 442], "show_v_in_top_v": [441, 442], "sub_mod": [441, 442], "show_v": [441, 442], "track_submod_call_ord": [441, 442], "track_submod_ret": [441, 442], "v_with_top_v_key_chain": [441, 442], "layernorm": 443, "normalized_shap": [443, 444], "elementwise_affin": [443, 444], "trail": [443, 444], "affin": [443, 444], "0001": [445, 446, 447], "init_on_first_step": [445, 449], "ignore_miss": [445, 449], "overriden": [445, 449], "sgd": 445, "stochast": [445, 450], "sub_modul": [451, 452], "color": [454, 455], "green": [454, 455]}, "objects": {"ivy": [[11, 0, 0, "-", "debugger"], [35, 0, 0, "-", "framework_handler"], [47, 0, 0, "-", "func_wrapper"], [414, 0, 0, "-", "inspection"], [454, 0, 0, "-", "verbosity"]], "ivy.debugger": [[12, 1, 1, "", "debug_mode"], [13, 1, 1, "", "set_breakpoint_debug_mode"], [14, 1, 1, "", "set_debug_mode"], [15, 1, 1, "", "set_exception_debug_mode"], [16, 1, 1, "", "unset_debug_mode"]], "ivy.framework_handler": [[35, 2, 1, "", "ContextManager"], [36, 1, 1, "", "choose_random_framework"], [37, 1, 1, "", "clear_framework_stack"], [38, 1, 1, "", "current_framework"], [39, 1, 1, "", "get_framework"], [40, 1, 1, "", "set_framework"], [41, 1, 1, "", "try_import_ivy_jax"], [42, 1, 1, "", "try_import_ivy_mxnet"], [43, 1, 1, "", "try_import_ivy_numpy"], [44, 1, 1, "", "try_import_ivy_tf"], [45, 1, 1, "", "try_import_ivy_torch"], [46, 1, 1, "", "unset_framework"]], "ivy.framework_handler.ContextManager": [[35, 3, 1, "", "__init__"]], "ivy.functional.ivy": [[49, 0, 0, "-", "activations"], [57, 0, 0, "-", "compilation"], [59, 0, 0, "-", "constants"], [60, 0, 0, "-", "creation"], [78, 0, 0, "-", "data_type"], [105, 0, 0, "-", "device"], [152, 0, 0, "-", "elementwise"], [212, 0, 0, "-", "general"], [275, 0, 0, "-", "gradients"], [290, 0, 0, "-", "image"], [298, 0, 0, "-", "layers"], [311, 0, 0, "-", "linear_algebra"], [336, 0, 0, "-", "losses"], [340, 0, 0, "-", "manipulation"], [356, 0, 0, "-", "meta"], [360, 0, 0, "-", "nest"], [377, 0, 0, "-", "norms"], [379, 0, 0, "-", "random"], [386, 0, 0, "-", "searching"], [391, 0, 0, "-", "set"], [396, 0, 0, "-", "sorting"], [399, 0, 0, "-", "statistical"], [408, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[50, 1, 1, "", "gelu"], [51, 1, 1, "", "leaky_relu"], [52, 1, 1, "", "relu"], [53, 1, 1, "", "sigmoid"], [54, 1, 1, "", "softmax"], [55, 1, 1, "", "softplus"], [56, 1, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[58, 1, 1, "", "compile"]], "ivy.functional.ivy.constants": [[59, 4, 1, "", "e"], [59, 4, 1, "", "inf"], [59, 4, 1, "", "nan"], [59, 4, 1, "", "newaxis"], [59, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[61, 1, 1, "", "arange"], [60, 1, 1, "", "array"], [62, 1, 1, "", "asarray"], [63, 1, 1, "", "empty"], [64, 1, 1, "", "empty_like"], [65, 1, 1, "", "eye"], [66, 1, 1, "", "from_dlpack"], [67, 1, 1, "", "full"], [68, 1, 1, "", "full_like"], [69, 1, 1, "", "linspace"], [70, 1, 1, "", "logspace"], [71, 1, 1, "", "meshgrid"], [72, 1, 1, "", "ones"], [73, 1, 1, "", "ones_like"], [74, 1, 1, "", "tril"], [75, 1, 1, "", "triu"], [76, 1, 1, "", "zeros"], [77, 1, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[78, 2, 1, "", "DefaultDtype"], [78, 2, 1, "", "DefaultFloatDtype"], [78, 2, 1, "", "DefaultIntDtype"], [79, 1, 1, "", "astype"], [80, 1, 1, "", "broadcast_arrays"], [81, 1, 1, "", "broadcast_to"], [82, 1, 1, "", "can_cast"], [83, 1, 1, "", "closest_valid_dtype"], [84, 1, 1, "", "convert_dtype"], [85, 1, 1, "", "default_dtype"], [86, 1, 1, "", "default_float_dtype"], [87, 1, 1, "", "default_int_dtype"], [88, 1, 1, "", "dtype"], [89, 1, 1, "", "dtype_bits"], [90, 1, 1, "", "dtype_from_str"], [91, 1, 1, "", "dtype_to_str"], [92, 1, 1, "", "finfo"], [93, 1, 1, "", "iinfo"], [94, 1, 1, "", "invalid_dtype"], [95, 1, 1, "", "is_float_dtype"], [96, 1, 1, "", "is_int_dtype"], [97, 1, 1, "", "result_type"], [98, 1, 1, "", "set_default_dtype"], [99, 1, 1, "", "set_default_float_dtype"], [100, 1, 1, "", "set_default_int_dtype"], [101, 1, 1, "", "unset_default_dtype"], [102, 1, 1, "", "unset_default_float_dtype"], [103, 1, 1, "", "unset_default_int_dtype"], [104, 1, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[78, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[78, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[78, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[105, 2, 1, "", "DefaultDevice"], [106, 2, 1, "", "DevClonedItem"], [107, 2, 1, "", "DevClonedIter"], [108, 2, 1, "", "DevClonedNest"], [109, 2, 1, "", "DevDistItem"], [110, 2, 1, "", "DevDistIter"], [111, 2, 1, "", "DevDistNest"], [105, 2, 1, "", "DevManager"], [112, 2, 1, "", "DevMapper"], [113, 2, 1, "", "DevMapperMultiProc"], [105, 2, 1, "", "MultiDev"], [114, 2, 1, "", "MultiDevItem"], [115, 2, 1, "", "MultiDevIter"], [116, 2, 1, "", "MultiDevNest"], [117, 2, 1, "", "Profiler"], [118, 1, 1, "", "clear_mem_on_dev"], [119, 1, 1, "", "default_device"], [120, 1, 1, "", "dev"], [121, 1, 1, "", "dev_clone"], [122, 1, 1, "", "dev_clone_array"], [123, 1, 1, "", "dev_clone_iter"], [124, 1, 1, "", "dev_clone_nest"], [125, 1, 1, "", "dev_dist"], [126, 1, 1, "", "dev_dist_array"], [127, 1, 1, "", "dev_dist_iter"], [128, 1, 1, "", "dev_dist_nest"], [129, 1, 1, "", "dev_from_str"], [130, 1, 1, "", "dev_to_str"], [131, 1, 1, "", "dev_unify"], [132, 1, 1, "", "dev_unify_array"], [133, 1, 1, "", "dev_unify_iter"], [134, 1, 1, "", "dev_unify_nest"], [135, 1, 1, "", "dev_util"], [136, 1, 1, "", "get_all_arrays_on_dev"], [137, 1, 1, "", "gpu_is_available"], [138, 1, 1, "", "num_arrays_on_dev"], [139, 1, 1, "", "num_cpu_cores"], [140, 1, 1, "", "num_gpus"], [141, 1, 1, "", "percent_used_mem_on_dev"], [142, 1, 1, "", "print_all_arrays_on_dev"], [143, 1, 1, "", "set_default_device"], [144, 1, 1, "", "set_split_factor"], [145, 1, 1, "", "split_factor"], [146, 1, 1, "", "split_func_call"], [147, 1, 1, "", "to_dev"], [148, 1, 1, "", "total_mem_on_dev"], [149, 1, 1, "", "tpu_is_available"], [150, 1, 1, "", "unset_default_device"], [151, 1, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[105, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[105, 3, 1, "", "__init__"], [105, 3, 1, "", "da_tune_step"], [105, 5, 1, "", "dim_size"], [105, 3, 1, "", "ds_tune_step"], [105, 3, 1, "", "map"], [105, 3, 1, "", "repeated_config_check"], [105, 5, 1, "", "tune_step"], [105, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[113, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[105, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "items"], [114, 3, 1, "", "keys"], [114, 5, 1, "", "shape"], [114, 3, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "at_dev"], [115, 3, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[117, 3, 1, "", "__init__"], [117, 3, 1, "", "start"], [117, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[153, 1, 1, "", "abs"], [154, 1, 1, "", "acos"], [155, 1, 1, "", "acosh"], [156, 1, 1, "", "add"], [157, 1, 1, "", "asin"], [158, 1, 1, "", "asinh"], [159, 1, 1, "", "atan"], [160, 1, 1, "", "atan2"], [161, 1, 1, "", "atanh"], [162, 1, 1, "", "bitwise_and"], [163, 1, 1, "", "bitwise_invert"], [164, 1, 1, "", "bitwise_left_shift"], [165, 1, 1, "", "bitwise_or"], [166, 1, 1, "", "bitwise_right_shift"], [167, 1, 1, "", "bitwise_xor"], [168, 1, 1, "", "ceil"], [169, 1, 1, "", "cos"], [170, 1, 1, "", "cosh"], [171, 1, 1, "", "divide"], [172, 1, 1, "", "equal"], [173, 1, 1, "", "erf"], [174, 1, 1, "", "exp"], [175, 1, 1, "", "expm1"], [176, 1, 1, "", "floor"], [177, 1, 1, "", "floor_divide"], [178, 1, 1, "", "greater"], [179, 1, 1, "", "greater_equal"], [180, 1, 1, "", "isfinite"], [181, 1, 1, "", "isinf"], [182, 1, 1, "", "isnan"], [183, 1, 1, "", "less"], [184, 1, 1, "", "less_equal"], [185, 1, 1, "", "log"], [186, 1, 1, "", "log10"], [187, 1, 1, "", "log1p"], [188, 1, 1, "", "log2"], [189, 1, 1, "", "logaddexp"], [190, 1, 1, "", "logical_and"], [191, 1, 1, "", "logical_not"], [192, 1, 1, "", "logical_or"], [193, 1, 1, "", "logical_xor"], [194, 1, 1, "", "maximum"], [195, 1, 1, "", "minimum"], [196, 1, 1, "", "multiply"], [197, 1, 1, "", "negative"], [198, 1, 1, "", "not_equal"], [199, 1, 1, "", "positive"], [200, 1, 1, "", "pow"], [201, 1, 1, "", "remainder"], [202, 1, 1, "", "round"], [203, 1, 1, "", "sign"], [204, 1, 1, "", "sin"], [205, 1, 1, "", "sinh"], [206, 1, 1, "", "sqrt"], [207, 1, 1, "", "square"], [208, 1, 1, "", "subtract"], [209, 1, 1, "", "tan"], [210, 1, 1, "", "tanh"], [211, 1, 1, "", "trunc"]], "ivy.functional.ivy.general": [[213, 1, 1, "", "all_equal"], [214, 1, 1, "", "arg_names"], [215, 1, 1, "", "array_equal"], [216, 1, 1, "", "arrays_equal"], [217, 1, 1, "", "assert_supports_inplace"], [218, 1, 1, "", "cache_fn"], [219, 1, 1, "", "clip_matrix_norm"], [220, 1, 1, "", "clip_vector_norm"], [221, 1, 1, "", "container_types"], [222, 1, 1, "", "copy_array"], [223, 1, 1, "", "cumprod"], [224, 1, 1, "", "cumsum"], [225, 1, 1, "", "current_framework_str"], [226, 1, 1, "", "default"], [227, 1, 1, "", "einops_rearrange"], [228, 1, 1, "", "einops_reduce"], [229, 1, 1, "", "einops_repeat"], [230, 1, 1, "", "exists"], [231, 1, 1, "", "floormod"], [232, 1, 1, "", "fourier_encode"], [233, 1, 1, "", "gather"], [234, 1, 1, "", "gather_nd"], [235, 1, 1, "", "get_all_arrays_in_memory"], [236, 1, 1, "", "get_min_base"], [237, 1, 1, "", "get_min_denominator"], [238, 1, 1, "", "get_num_dims"], [239, 1, 1, "", "get_referrers_recursive"], [240, 1, 1, "", "has_nans"], [241, 1, 1, "", "indices_where"], [242, 1, 1, "", "inplace_arrays_supported"], [243, 1, 1, "", "inplace_decrement"], [244, 1, 1, "", "inplace_increment"], [245, 1, 1, "", "inplace_update"], [246, 1, 1, "", "inplace_variables_supported"], [247, 1, 1, "", "is_array"], [248, 1, 1, "", "is_ivy_array"], [249, 1, 1, "", "is_ivy_container"], [250, 1, 1, "", "is_native_array"], [251, 1, 1, "", "match_kwargs"], [252, 1, 1, "", "multiprocessing"], [253, 1, 1, "", "num_arrays_in_memory"], [254, 1, 1, "", "one_hot"], [255, 1, 1, "", "print_all_arrays_in_memory"], [256, 1, 1, "", "queue_timeout"], [257, 1, 1, "", "scatter_flat"], [258, 1, 1, "", "scatter_nd"], [259, 1, 1, "", "set_min_base"], [260, 1, 1, "", "set_min_denominator"], [261, 1, 1, "", "set_queue_timeout"], [262, 1, 1, "", "set_tmp_dir"], [263, 1, 1, "", "shape"], [264, 1, 1, "", "shape_to_tuple"], [265, 1, 1, "", "stable_divide"], [266, 1, 1, "", "stable_pow"], [267, 1, 1, "", "supports_inplace"], [268, 1, 1, "", "tmp_dir"], [269, 1, 1, "", "to_list"], [270, 1, 1, "", "to_numpy"], [271, 1, 1, "", "to_scalar"], [272, 1, 1, "", "try_else_none"], [273, 1, 1, "", "unstack"], [274, 1, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[275, 2, 1, "", "GradientTracking"], [276, 1, 1, "", "adam_step"], [277, 1, 1, "", "adam_update"], [278, 1, 1, "", "execute_with_gradients"], [279, 1, 1, "", "gradient_descent_update"], [280, 1, 1, "", "is_variable"], [281, 1, 1, "", "lamb_update"], [282, 1, 1, "", "lars_update"], [283, 1, 1, "", "optimizer_update"], [284, 1, 1, "", "set_with_grads"], [285, 1, 1, "", "stop_gradient"], [286, 1, 1, "", "unset_with_grads"], [287, 1, 1, "", "variable"], [288, 1, 1, "", "variable_data"], [289, 1, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[275, 3, 1, "", "__init__"]], "ivy.functional.ivy.image": [[291, 1, 1, "", "bilinear_resample"], [292, 1, 1, "", "float_img_to_uint8_img"], [293, 1, 1, "", "gradient_image"], [294, 1, 1, "", "linear_resample"], [295, 1, 1, "", "random_crop"], [296, 1, 1, "", "stack_images"], [297, 1, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[299, 1, 1, "", "conv1d"], [300, 1, 1, "", "conv1d_transpose"], [301, 1, 1, "", "conv2d"], [302, 1, 1, "", "conv2d_transpose"], [303, 1, 1, "", "conv3d"], [304, 1, 1, "", "conv3d_transpose"], [305, 1, 1, "", "depthwise_conv2d"], [306, 1, 1, "", "dropout"], [307, 1, 1, "", "linear"], [308, 1, 1, "", "lstm_update"], [309, 1, 1, "", "multi_head_attention"], [310, 1, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[312, 1, 1, "", "cholesky"], [313, 1, 1, "", "cross"], [314, 1, 1, "", "det"], [315, 1, 1, "", "diagonal"], [316, 1, 1, "", "eigh"], [317, 1, 1, "", "eigvalsh"], [318, 1, 1, "", "inv"], [319, 1, 1, "", "matmul"], [320, 1, 1, "", "matrix_norm"], [321, 1, 1, "", "matrix_power"], [322, 1, 1, "", "matrix_rank"], [323, 1, 1, "", "matrix_transpose"], [324, 1, 1, "", "outer"], [325, 1, 1, "", "pinv"], [326, 1, 1, "", "qr"], [327, 1, 1, "", "slodget"], [328, 1, 1, "", "solve"], [329, 1, 1, "", "svd"], [330, 1, 1, "", "svdvals"], [331, 1, 1, "", "tensordot"], [332, 1, 1, "", "trace"], [333, 1, 1, "", "vecdot"], [334, 1, 1, "", "vector_norm"], [335, 1, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[337, 1, 1, "", "binary_cross_entropy"], [338, 1, 1, "", "cross_entropy"], [339, 1, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[341, 1, 1, "", "clip"], [342, 1, 1, "", "concat"], [343, 1, 1, "", "constant_pad"], [344, 1, 1, "", "expand_dims"], [345, 1, 1, "", "flip"], [346, 1, 1, "", "permute_dims"], [347, 1, 1, "", "repeat"], [348, 1, 1, "", "reshape"], [349, 1, 1, "", "roll"], [350, 1, 1, "", "split"], [351, 1, 1, "", "squeeze"], [352, 1, 1, "", "stack"], [353, 1, 1, "", "swapaxes"], [354, 1, 1, "", "tile"], [355, 1, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[357, 1, 1, "", "fomaml_step"], [358, 1, 1, "", "maml_step"], [359, 1, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[361, 1, 1, "", "all_nested_indices"], [362, 1, 1, "", "copy_nest"], [363, 1, 1, "", "index_nest"], [364, 1, 1, "", "insert_into_nest_at_index"], [365, 1, 1, "", "insert_into_nest_at_indices"], [366, 1, 1, "", "map"], [367, 1, 1, "", "map_nest_at_index"], [368, 1, 1, "", "map_nest_at_indices"], [369, 1, 1, "", "multi_index_nest"], [370, 1, 1, "", "nested_any"], [371, 1, 1, "", "nested_indices_where"], [372, 1, 1, "", "nested_map"], [373, 1, 1, "", "prune_nest_at_index"], [374, 1, 1, "", "prune_nest_at_indices"], [375, 1, 1, "", "set_nest_at_index"], [376, 1, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[378, 1, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[380, 1, 1, "", "multinomial"], [381, 1, 1, "", "randint"], [382, 1, 1, "", "random_normal"], [383, 1, 1, "", "random_uniform"], [384, 1, 1, "", "seed"], [385, 1, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[387, 1, 1, "", "argmax"], [388, 1, 1, "", "argmin"], [389, 1, 1, "", "nonzero"], [390, 1, 1, "", "where"]], "ivy.functional.ivy.set": [[392, 1, 1, "", "unique_all"], [393, 1, 1, "", "unique_counts"], [394, 1, 1, "", "unique_inverse"], [395, 1, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[397, 1, 1, "", "argsort"], [398, 1, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[400, 1, 1, "", "einsum"], [401, 1, 1, "", "max"], [402, 1, 1, "", "mean"], [403, 1, 1, "", "min"], [404, 1, 1, "", "prod"], [405, 1, 1, "", "std"], [406, 1, 1, "", "sum"], [407, 1, 1, "", "var"]], "ivy.functional.ivy.utility": [[409, 1, 1, "", "all"], [410, 1, 1, "", "any"]], "ivy.inspection": [[415, 1, 1, "", "add_array_specs"], [416, 1, 1, "", "fn_array_spec"]], "ivy.stateful": [[418, 0, 0, "-", "activations"], [421, 0, 0, "-", "converters"], [423, 0, 0, "-", "initializers"], [429, 0, 0, "-", "layers"], [441, 0, 0, "-", "module"], [443, 0, 0, "-", "norms"], [445, 0, 0, "-", "optimizers"], [451, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[419, 2, 1, "", "GEGLU"], [420, 2, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[419, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[420, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[422, 1, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[423, 2, 1, "", "Constant"], [424, 2, 1, "", "FirstLayerSiren"], [425, 2, 1, "", "GlorotUniform"], [423, 2, 1, "", "KaimingNormal"], [426, 2, 1, "", "Ones"], [427, 2, 1, "", "Siren"], [423, 2, 1, "", "Uniform"], [428, 2, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[423, 3, 1, "", "__init__"], [423, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[424, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[425, 3, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[423, 3, 1, "", "__init__"], [423, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[426, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[427, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[423, 3, 1, "", "__init__"], [423, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[428, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[430, 2, 1, "", "Conv1D"], [431, 2, 1, "", "Conv1DTranspose"], [432, 2, 1, "", "Conv2D"], [433, 2, 1, "", "Conv2DTranspose"], [434, 2, 1, "", "Conv3D"], [435, 2, 1, "", "Conv3DTranspose"], [436, 2, 1, "", "DepthwiseConv2D"], [437, 2, 1, "", "Dropout"], [438, 2, 1, "", "LSTM"], [439, 2, 1, "", "Linear"], [440, 2, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[430, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[431, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[432, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[433, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[434, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[435, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[436, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[437, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[438, 3, 1, "", "__init__"], [438, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[439, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[440, 3, 1, "", "__init__"]], "ivy.stateful.module": [[442, 2, 1, "", "Module"]], "ivy.stateful.module.Module": [[442, 3, 1, "", "__init__"], [442, 3, 1, "", "build"], [442, 5, 1, "", "build_mode"], [442, 5, 1, "", "built"], [442, 3, 1, "", "check_submod_rets"], [442, 3, 1, "", "get_mod_key"], [442, 3, 1, "", "mod_depth"], [442, 3, 1, "", "mod_height"], [442, 3, 1, "", "mod_with_top_mod_key_chain"], [442, 3, 1, "", "save_weights"], [442, 3, 1, "", "show_mod_in_top_mod"], [442, 3, 1, "", "show_structure"], [442, 3, 1, "", "show_v_in_top_v"], [442, 3, 1, "", "sub_mods"], [442, 3, 1, "", "track_submod_call_order"], [442, 3, 1, "", "track_submod_rets"], [442, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[444, 2, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[444, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[446, 2, 1, "", "Adam"], [447, 2, 1, "", "LAMB"], [448, 2, 1, "", "LARS"], [449, 2, 1, "", "Optimizer"], [450, 2, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[446, 3, 1, "", "__init__"], [446, 3, 1, "", "set_state"], [446, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[447, 3, 1, "", "__init__"], [447, 3, 1, "", "set_state"], [447, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[448, 3, 1, "", "__init__"], [448, 3, 1, "", "set_state"], [448, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[449, 3, 1, "", "__init__"], [449, 3, 1, "", "set_state"], [449, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[450, 3, 1, "", "__init__"], [450, 3, 1, "", "set_state"], [450, 5, 1, "", "state"]], "ivy.stateful.sequential": [[452, 2, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[452, 3, 1, "", "__init__"]], "ivy.verbosity": [[455, 1, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"background": [0, 411], "ml": 1, "explos": 1, "standard": 2, "skeptic": 2, "complimentari": 2, "v": 2, "competit": 2, "do": 2, "work": [2, 10], "The": [2, 5, 20], "arrai": [2, 20], "api": [2, 6, 18, 20, 22, 23], "why": 3, "unifi": [3, 20], "No": 3, "more": 3, "re": 3, "implement": 3, "infinit": 3, "shelf": 3, "life": 3, "contribut": [4, 411], "basic": 5, "manag": 5, "your": 5, "fork": 5, "todo": 5, "list": 5, "issu": 5, "creat": 5, "pull": 5, "request": 5, "navig": 6, "code": 6, "submodul": 6, "design": [6, 17, 411], "ivi": [6, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "backend": [6, 18], "type": [7, 78], "hint": 7, "docstr": [8, 9], "exampl": 9, "tan": [9, 209], "roll": [9, 349], "add": [9, 156], "build": [10, 18], "doc": 10, "docker": 10, "dockerless": 10, "us": [10, 21], "miniconda": 10, "venv": 10, "document": 10, "pipelin": 10, "make_doc": 10, "sh": 10, "entrypoint": 10, "_make_doc": 10, "generate_src_rst_fil": 10, "py": 10, "sphinx": 10, "correct_built_html_fil": 10, "remove_fil": 10, "debugg": 11, "debug_mod": 12, "set_breakpoint_debug_mod": 13, "set_debug_mod": 14, "set_exception_debug_mod": 15, "unset_debug_mod": 16, "block": 18, "function": [18, 23], "framework": [18, 19, 35], "handler": [18, 35], "graph": [18, 23], "compil": [18, 23, 57, 58], "class": 20, "oper": 20, "monkei": 20, "patch": 20, "instanc": 20, "method": [20, 21], "contain": 21, "construct": 21, "represent": 21, "recurs": 21, "built": 21, "ins": 21, "access": 21, "save": 21, "load": 21, "comparison": 21, "custom": 21, "case": 21, "compartment": 21, "configur": 21, "data": [21, 78, 391, 392, 395], "network": [21, 23], "weight": 21, "state": 22, "modul": [22, 441, 442], "initi": [22, 423], "optim": [22, 445, 449], "transpil": 23, "frontend": 23, "role": 23, "convert": [23, 421], "model": [23, 30], "builder": 25, "ecosystem": 26, "gym": [27, 34], "mech": 28, "memori": [29, 34], "robot": [31, 34], "vision": [32, 34], "extens": [33, 411], "appli": 34, "librari": 34, "mechan": 34, "choose_random_framework": 36, "clear_framework_stack": 37, "current_framework": 38, "get_framework": 39, "set_framework": 40, "try_import_ivy_jax": 41, "try_import_ivy_mxnet": 42, "try_import_ivy_numpi": 43, "try_import_ivy_tf": 44, "try_import_ivy_torch": 45, "unset_framework": 46, "func": 47, "wrapper": 47, "activ": [49, 418], "gelu": [50, 420], "leaky_relu": 51, "relu": 52, "sigmoid": 53, "softmax": 54, "softplu": 55, "tanh": [56, 210], "constant": 59, "creation": 60, "note": [60, 66], "arang": 61, "asarrai": 62, "empti": 63, "empty_lik": 64, "ey": 65, "from_dlpack": 66, "full": 67, "full_lik": 68, "linspac": 69, "logspac": 70, "meshgrid": 71, "ones": 72, "ones_lik": 73, "tril": 74, "triu": 75, "zero": [76, 428], "zeros_lik": 77, "astyp": 79, "broadcast_arrai": 80, "broadcast_to": 81, "can_cast": 82, "closest_valid_dtyp": 83, "convert_dtyp": 84, "default_dtyp": 85, "default_float_dtyp": 86, "default_int_dtyp": 87, "dtype": 88, "dtype_bit": 89, "dtype_from_str": 90, "dtype_to_str": 91, "finfo": 92, "iinfo": 93, "invalid_dtyp": 94, "is_float_dtyp": 95, "is_int_dtyp": 96, "result_typ": 97, "set_default_dtyp": 98, "set_default_float_dtyp": 99, "set_default_int_dtyp": 100, "unset_default_dtyp": 101, "unset_default_float_dtyp": 102, "unset_default_int_dtyp": 103, "valid_dtyp": 104, "devic": 105, "devcloneditem": 106, "devclonedit": 107, "devclonednest": 108, "devdistitem": 109, "devdistit": 110, "devdistnest": 111, "devmapp": 112, "devmappermultiproc": 113, "multidevitem": 114, "multidevit": 115, "multidevnest": 116, "profil": 117, "clear_mem_on_dev": 118, "default_devic": 119, "dev": 120, "dev_clon": 121, "dev_clone_arrai": 122, "dev_clone_it": 123, "dev_clone_nest": 124, "dev_dist": 125, "dev_dist_arrai": 126, "dev_dist_it": 127, "dev_dist_nest": 128, "dev_from_str": 129, "dev_to_str": 130, "dev_unifi": 131, "dev_unify_arrai": 132, "dev_unify_it": 133, "dev_unify_nest": 134, "dev_util": 135, "get_all_arrays_on_dev": 136, "gpu_is_avail": 137, "num_arrays_on_dev": 138, "num_cpu_cor": 139, "num_gpu": 140, "percent_used_mem_on_dev": 141, "print_all_arrays_on_dev": 142, "set_default_devic": 143, "set_split_factor": 144, "split_factor": 145, "split_func_cal": 146, "to_dev": 147, "total_mem_on_dev": 148, "tpu_is_avail": 149, "unset_default_devic": 150, "used_mem_on_dev": 151, "elementwis": 152, "ab": 153, "aco": 154, "acosh": 155, "asin": 157, "asinh": 158, "atan": 159, "atan2": 160, "atanh": 161, "bitwise_and": 162, "bitwise_invert": 163, "bitwise_left_shift": 164, "bitwise_or": 165, "bitwise_right_shift": 166, "bitwise_xor": 167, "ceil": 168, "co": 169, "cosh": 170, "divid": 171, "equal": 172, "erf": 173, "exp": 174, "expm1": 175, "floor": 176, "floor_divid": 177, "greater": 178, "greater_equ": 179, "isfinit": 180, "isinf": 181, "isnan": 182, "less": 183, "less_equ": 184, "log": 185, "log10": 186, "log1p": 187, "log2": 188, "logaddexp": 189, "logical_and": 190, "logical_not": 191, "logical_or": 192, "logical_xor": 193, "maximum": 194, "minimum": 195, "multipli": 196, "neg": 197, "not_equ": 198, "posit": 199, "pow": 200, "remaind": 201, "round": 202, "sign": 203, "sin": 204, "sinh": 205, "sqrt": 206, "squar": 207, "subtract": 208, "trunc": 211, "gener": 212, "all_equ": 213, "arg_nam": 214, "array_equ": 215, "arrays_equ": 216, "assert_supports_inplac": 217, "cache_fn": 218, "clip_matrix_norm": 219, "clip_vector_norm": 220, "container_typ": 221, "copy_arrai": 222, "cumprod": 223, "cumsum": 224, "current_framework_str": 225, "default": 226, "einops_rearrang": 227, "einops_reduc": 228, "einops_repeat": 229, "exist": 230, "floormod": 231, "fourier_encod": 232, "gather": 233, "gather_nd": 234, "get_all_arrays_in_memori": 235, "get_min_bas": 236, "get_min_denomin": 237, "get_num_dim": 238, "get_referrers_recurs": 239, "has_nan": 240, "indices_wher": 241, "inplace_arrays_support": 242, "inplace_decr": 243, "inplace_incr": 244, "inplace_upd": 245, "inplace_variables_support": 246, "is_arrai": 247, "is_ivy_arrai": 248, "is_ivy_contain": 249, "is_native_arrai": 250, "match_kwarg": 251, "multiprocess": 252, "num_arrays_in_memori": 253, "one_hot": 254, "print_all_arrays_in_memori": 255, "queue_timeout": 256, "scatter_flat": 257, "scatter_nd": 258, "set_min_bas": 259, "set_min_denomin": 260, "set_queue_timeout": 261, "set_tmp_dir": 262, "shape": [263, 391, 392, 395], "shape_to_tupl": 264, "stable_divid": 265, "stable_pow": 266, "supports_inplac": 267, "tmp_dir": 268, "to_list": 269, "to_numpi": 270, "to_scalar": 271, "try_else_non": 272, "unstack": 273, "value_is_nan": 274, "gradient": 275, "adam_step": 276, "adam_upd": 277, "execute_with_gradi": 278, "gradient_descent_upd": 279, "is_vari": 280, "lamb_upd": 281, "lars_upd": 282, "optimizer_upd": 283, "set_with_grad": 284, "stop_gradi": 285, "unset_with_grad": 286, "variabl": 287, "variable_data": 288, "with_grad": 289, "imag": 290, "bilinear_resampl": 291, "float_img_to_uint8_img": 292, "gradient_imag": 293, "linear_resampl": 294, "random_crop": 295, "stack_imag": 296, "uint8_img_to_float_img": 297, "layer": [298, 429], "conv1d": [299, 430], "conv1d_transpos": 300, "conv2d": [301, 432], "conv2d_transpos": 302, "conv3d": [303, 434], "conv3d_transpos": 304, "depthwise_conv2d": 305, "dropout": [306, 437], "linear": [307, 311, 439], "lstm_updat": 308, "multi_head_attent": 309, "scaled_dot_product_attent": 310, "algebra": 311, "choleski": 312, "cross": 313, "det": 314, "diagon": 315, "eigh": 316, "eigvalsh": 317, "inv": 318, "matmul": 319, "matrix_norm": 320, "matrix_pow": 321, "matrix_rank": 322, "matrix_transpos": 323, "outer": 324, "pinv": 325, "qr": 326, "slodget": 327, "solv": 328, "svd": 329, "svdval": 330, "tensordot": 331, "trace": 332, "vecdot": 333, "vector_norm": 334, "vector_to_skew_symmetric_matrix": 335, "loss": 336, "binary_cross_entropi": 337, "cross_entropi": 338, "sparse_cross_entropi": 339, "manipul": 340, "clip": 341, "concat": 342, "constant_pad": 343, "expand_dim": 344, "flip": 345, "permute_dim": 346, "repeat": 347, "reshap": 348, "split": 350, "squeez": 351, "stack": 352, "swapax": 353, "tile": 354, "zero_pad": 355, "meta": 356, "fomaml_step": 357, "maml_step": 358, "reptile_step": 359, "nest": 360, "all_nested_indic": 361, "copy_nest": 362, "index_nest": 363, "insert_into_nest_at_index": 364, "insert_into_nest_at_indic": 365, "map": 366, "map_nest_at_index": 367, "map_nest_at_indic": 368, "multi_index_nest": 369, "nested_ani": 370, "nested_indices_wher": 371, "nested_map": 372, "prune_nest_at_index": 373, "prune_nest_at_indic": 374, "set_nest_at_index": 375, "set_nest_at_indic": 376, "norm": [377, 443], "layer_norm": 378, "random": 379, "multinomi": 380, "randint": 381, "random_norm": 382, "random_uniform": 383, "seed": 384, "shuffl": 385, "search": 386, "argmax": 387, "argmin": 388, "nonzero": 389, "where": 390, "set": 391, "depend": [391, 392, 395], "output": [391, 392, 395], "unique_al": 392, "unique_count": 393, "unique_invers": 394, "unique_valu": 395, "sort": [396, 398], "argsort": 397, "statist": 399, "einsum": 400, "max": 401, "mean": 402, "min": 403, "prod": 404, "std": 405, "sum": 406, "var": 407, "util": 408, "all": 409, "ani": 410, "content": 411, "overview": 411, "quick": 411, "start": 411, "roadmap": [411, 417], "citat": 411, "inspect": 414, "add_array_spec": 415, "fn_array_spec": 416, "geglu": 419, "to_ivy_modul": 422, "firstlayersiren": 424, "glorotuniform": 425, "Ones": 426, "siren": 427, "conv1dtranspos": 431, "conv2dtranspos": 433, "conv3dtranspos": 435, "depthwiseconv2d": 436, "lstm": 438, "multiheadattent": 440, "layernorm": 444, "adam": 446, "lamb": 447, "lar": 448, "sgd": 450, "sequenti": [451, 452], "verbos": 454, "cprint": 455}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})