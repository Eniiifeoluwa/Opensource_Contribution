Search.setIndex({"docnames": ["backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/jax", "functional/frontends/jax/lax", "functional/frontends/jax/lax/mathematical_functions", "functional/frontends/jax/lax/mathematical_functions/tan", "functional/frontends/numpy", "functional/frontends/numpy/mathematical_functions", "functional/frontends/numpy/mathematical_functions/add", "functional/frontends/numpy/mathematical_functions/tan", "functional/frontends/tensorflow", "functional/frontends/tensorflow/mathematical_functions", "functional/frontends/tensorflow/mathematical_functions/tan", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/add", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/jax.rst", "functional/frontends/jax/lax.rst", "functional/frontends/jax/lax/mathematical_functions.rst", "functional/frontends/jax/lax/mathematical_functions/tan.rst", "functional/frontends/numpy.rst", "functional/frontends/numpy/mathematical_functions.rst", "functional/frontends/numpy/mathematical_functions/add.rst", "functional/frontends/numpy/mathematical_functions/tan.rst", "functional/frontends/tensorflow.rst", "functional/frontends/tensorflow/mathematical_functions.rst", "functional/frontends/tensorflow/mathematical_functions/tan.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/add.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Jax", "Lax", "Mathematical functions", "tan", "Numpy", "Mathematical functions", "add", "tan", "Tensorflow", "Mathematical functions", "tan", "Torch", "Pointwise ops", "add", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "DevMapper", "DevMapperMultiProc", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 5, 11, 19, 20, 23, 24, 26, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 52, 53, 54, 111, 127, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 248, 251, 282, 288, 307, 312, 325, 397, 399, 409, 424, 427, 449, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493], "backend_handl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 449], "contextmanag": 0, "modul": [0, 3, 4, 15, 17, 20, 26, 27, 28, 34, 37, 38, 40, 42, 53, 54, 248, 289, 417, 418, 420, 421, 449, 456, 457, 458, 459, 460, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 489, 490], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 30, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493], "base": [0, 18, 26, 29, 31, 37, 53, 92, 102, 111, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 188, 210, 221, 222, 223, 224, 236, 248, 273, 296, 303, 312, 429, 430, 431, 433, 437, 438, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "object": [0, 39, 42, 92, 98, 111, 124, 141, 183, 312, 397, 400, 402, 404, 405, 406, 411, 412, 413, 414, 417, 423, 461, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480], "__init__": [0, 3, 4, 22, 28, 32, 37, 39, 40, 41, 42, 111, 141, 148, 149, 150, 151, 152, 153, 312, 417, 418, 420, 421, 449, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "choose_random_backend": 0, "exclud": [0, 1, 24, 37, 92, 93, 417, 421], "none": [0, 1, 4, 11, 22, 24, 27, 31, 32, 33, 34, 35, 37, 39, 41, 42, 70, 71, 72, 74, 75, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 119, 120, 121, 124, 127, 141, 148, 149, 156, 157, 180, 181, 182, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 276, 278, 279, 283, 289, 291, 294, 295, 296, 297, 302, 303, 309, 312, 314, 316, 318, 319, 320, 326, 327, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "clear_backend_stack": 0, "current_backend": [0, 22, 27], "arg": [0, 3, 20, 37, 39, 41, 141, 148, 162, 166, 170, 182, 248, 295, 459, 460, 479, 480], "kwarg": [0, 3, 37, 39, 41, 141, 148, 162, 166, 170, 248, 288, 459, 460, 479, 480], "return": [0, 3, 4, 11, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 140, 141, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 459, 460, 467, 476, 477, 483, 487], "current": [0, 3, 4, 11, 15, 17, 19, 20, 27, 33, 37, 42, 53, 54, 111, 125, 126, 128, 140, 141, 148, 171, 172, 176, 178, 248, 272, 279, 283, 290, 292, 397, 398, 407, 408, 449], "prioriti": [0, 3, 18, 34], "global_backend": [0, 3], "argument": [0, 3, 4, 13, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 37, 39, 40, 89, 90, 92, 93, 111, 132, 141, 148, 149, 162, 166, 170, 188, 192, 193, 212, 245, 248, 250, 251, 255, 263, 270, 288, 295, 335, 338, 347, 377, 386, 397, 403, 415, 416, 437, 439, 444, 452, 454, 459, 460, 479, 480], "": [0, 3, 4, 5, 11, 14, 15, 16, 17, 18, 20, 21, 23, 24, 26, 28, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 91, 92, 103, 107, 108, 111, 125, 126, 141, 157, 181, 188, 237, 248, 253, 312, 314, 316, 318, 320, 348, 366, 367, 397, 403, 409, 437, 443, 445, 449, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "paramet": [0, 3, 4, 22, 23, 26, 39, 40, 53, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 459, 460, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "from": [0, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 92, 93, 94, 96, 98, 99, 100, 103, 104, 106, 110, 111, 117, 132, 141, 148, 149, 157, 172, 176, 181, 182, 188, 214, 242, 248, 263, 270, 271, 306, 312, 314, 318, 327, 332, 335, 343, 346, 348, 352, 366, 370, 377, 382, 385, 388, 393, 394, 395, 396, 397, 399, 409, 410, 417, 418, 419, 420, 421, 424, 428, 429, 430, 432, 437, 442, 443, 444, 445, 446, 447, 448, 449, 455, 459, 460, 467, 475, 478, 483, 487], "which": [0, 3, 4, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 53, 54, 81, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 122, 124, 127, 128, 140, 141, 148, 149, 158, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 178, 180, 181, 182, 188, 237, 248, 250, 260, 261, 263, 270, 271, 272, 278, 282, 290, 291, 292, 294, 295, 310, 312, 314, 315, 316, 318, 319, 320, 322, 324, 325, 327, 329, 331, 335, 346, 348, 350, 352, 357, 365, 366, 370, 371, 373, 375, 376, 377, 379, 382, 384, 386, 387, 389, 397, 402, 403, 404, 405, 410, 411, 412, 413, 414, 417, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 459, 460, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "try": [0, 3, 12, 14, 15, 17, 18, 19, 20, 30, 31, 39, 54, 248, 309, 449], "infer": [0, 3, 21, 28, 32, 33, 37, 42, 89, 90, 92, 93, 94, 96, 99, 100, 104, 106, 110, 188, 214, 248, 275, 300, 327, 332, 377, 385], "when": [0, 3, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 54, 111, 114, 141, 188, 192, 211, 236, 248, 255, 282, 303, 373, 374, 375, 376, 397, 408, 424, 425, 426, 428, 437, 439, 441, 443, 445, 449, 479, 480], "i": [0, 3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 122, 128, 129, 130, 140, 141, 148, 149, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 177, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 203, 204, 205, 206, 210, 211, 212, 213, 216, 217, 218, 221, 222, 224, 225, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 249, 252, 253, 255, 256, 257, 260, 261, 263, 267, 269, 270, 277, 278, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 298, 310, 311, 312, 314, 316, 317, 318, 319, 320, 322, 327, 331, 335, 338, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 459, 460, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "global": [0, 3, 4, 5, 11, 27, 28, 32, 33, 37, 111, 119, 120, 121, 141, 148, 149, 180, 181, 182, 248, 273, 274, 293, 296, 297, 298, 302, 303, 415, 416, 481, 482], "set": [0, 3, 4, 5, 11, 13, 16, 21, 22, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 141, 157, 167, 168, 179, 180, 181, 182, 188, 196, 248, 249, 296, 297, 298, 299, 312, 314, 316, 317, 318, 319, 320, 348, 350, 357, 359, 362, 365, 397, 398, 407, 408, 409, 413, 414, 417, 422, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 443, 445, 467, 476, 483, 484, 485, 486, 487, 488], "ret": [0, 3, 4, 11, 22, 23, 37, 42, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 140, 141, 148, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 295, 300, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 459, 460, 483, 487], "exampl": [0, 3, 4, 5, 11, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 53, 54, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 99, 100, 103, 105, 106, 109, 110, 111, 114, 125, 126, 141, 157, 158, 160, 172, 173, 174, 175, 176, 181, 183, 185, 186, 188, 192, 193, 197, 198, 199, 202, 203, 204, 205, 206, 210, 212, 214, 215, 219, 230, 231, 233, 238, 245, 248, 252, 253, 259, 260, 267, 270, 274, 285, 300, 306, 307, 308, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 359, 361, 366, 368, 369, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 389, 390, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 443, 444, 446, 447, 449], "If": [0, 3, 4, 5, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 54, 92, 93, 95, 96, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 114, 116, 132, 141, 157, 181, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 210, 211, 212, 221, 222, 224, 225, 227, 228, 232, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 282, 312, 314, 316, 318, 319, 320, 348, 349, 350, 357, 359, 362, 363, 365, 366, 370, 371, 373, 374, 375, 376, 377, 381, 382, 386, 387, 388, 389, 393, 394, 395, 397, 409, 410, 417, 420, 421, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "import": [0, 3, 14, 19, 22, 23, 24, 28, 30, 31, 32, 33, 34, 37, 39, 40, 42, 54, 327, 333, 449, 455], "numpi": [0, 3, 4, 5, 13, 14, 19, 26, 28, 32, 33, 34, 35, 37, 39, 42, 70, 71, 72, 248, 307, 437, 438, 449], "np": [0, 3, 30, 32, 33, 34, 35, 39, 40, 42, 248, 307, 449], "x": [0, 3, 11, 20, 22, 23, 24, 27, 28, 31, 34, 35, 37, 39, 40, 41, 42, 67, 68, 70, 72, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 92, 94, 96, 98, 100, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 122, 141, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 172, 176, 181, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 230, 231, 233, 235, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 277, 278, 280, 281, 282, 284, 285, 286, 287, 291, 300, 304, 306, 307, 308, 310, 311, 312, 315, 317, 322, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 403, 407, 408, 409, 415, 416, 417, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 478], "arrai": [0, 3, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 54, 55, 63, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 122, 124, 127, 129, 130, 132, 136, 141, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 178, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 287, 290, 291, 292, 294, 295, 300, 304, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 324, 325, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 399, 409, 410, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 467, 475, 478], "2": [0, 3, 17, 20, 24, 28, 31, 35, 36, 37, 39, 40, 41, 42, 54, 81, 83, 84, 85, 86, 88, 91, 92, 99, 100, 103, 105, 106, 110, 111, 114, 141, 157, 158, 160, 172, 174, 176, 183, 188, 192, 193, 195, 196, 198, 199, 202, 203, 205, 206, 210, 212, 214, 215, 219, 224, 230, 231, 233, 238, 245, 248, 252, 253, 256, 257, 260, 267, 270, 285, 300, 306, 327, 328, 330, 331, 333, 334, 335, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 356, 357, 359, 361, 362, 363, 366, 368, 369, 371, 373, 374, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 390, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 449], "0": [0, 3, 18, 22, 23, 24, 37, 39, 40, 41, 42, 81, 83, 84, 85, 86, 87, 88, 92, 93, 97, 101, 102, 106, 107, 108, 109, 110, 111, 114, 124, 141, 142, 145, 148, 150, 154, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 181, 182, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 210, 211, 212, 215, 221, 222, 224, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 252, 253, 256, 257, 259, 260, 261, 267, 270, 271, 276, 285, 291, 294, 295, 300, 306, 307, 308, 312, 313, 314, 318, 319, 327, 330, 331, 333, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 366, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 397, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 447, 449, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490], "print": [0, 3, 4, 5, 11, 17, 24, 31, 37, 39, 40, 41, 81, 83, 84, 85, 86, 87, 88, 92, 99, 100, 103, 105, 106, 109, 110, 111, 114, 125, 126, 141, 158, 172, 173, 174, 175, 176, 178, 181, 185, 188, 192, 193, 197, 198, 199, 202, 203, 204, 205, 206, 210, 212, 214, 215, 219, 230, 231, 233, 238, 245, 248, 252, 253, 259, 260, 267, 270, 274, 292, 300, 306, 307, 308, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 361, 366, 368, 369, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 390, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 443, 444, 446, 447, 449], "function": [0, 3, 4, 5, 13, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 34, 36, 38, 39, 40, 41, 52, 53, 68, 71, 72, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 456, 457, 458, 483, 486, 488], "py": [0, 3, 4, 18, 22, 23, 27, 28, 32, 33, 35, 37, 39, 41, 42, 417, 418, 420, 421], "noqa": [0, 3, 4, 92, 103, 188, 192, 198, 203, 206, 238, 245, 348, 351, 377, 381, 382, 386, 437, 439], "The": [0, 3, 4, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 53, 81, 82, 83, 86, 88, 89, 90, 92, 93, 98, 102, 103, 107, 108, 111, 112, 113, 114, 118, 123, 125, 126, 128, 131, 136, 140, 141, 148, 149, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 234, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 250, 252, 255, 256, 262, 263, 269, 271, 280, 281, 282, 284, 285, 286, 287, 289, 294, 295, 296, 297, 298, 301, 302, 303, 311, 312, 313, 314, 316, 318, 319, 320, 322, 325, 327, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 459, 460, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487], "set_backend": [0, 3, 4, 11, 27, 28, 29, 32, 111, 125, 126, 449], "ha": [0, 3, 4, 13, 14, 15, 18, 23, 24, 27, 28, 29, 32, 33, 37, 39, 41, 42, 53, 54, 92, 103, 141, 157, 188, 189, 232, 236, 348, 356, 364, 365, 366, 369, 377, 381, 388, 429, 430, 431, 433, 437, 440, 442, 443, 444, 445], "over": [0, 3, 13, 15, 17, 23, 24, 28, 34, 39, 54, 348, 357, 368, 370, 371, 415, 416, 417, 421, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 481, 482], "ani": [0, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 89, 90, 92, 94, 104, 141, 183, 188, 192, 193, 208, 212, 215, 220, 245, 248, 249, 263, 264, 265, 266, 267, 270, 277, 284, 285, 286, 287, 302, 303, 312, 315, 335, 338, 347, 377, 386, 397, 403, 407, 415, 416, 417, 421, 437, 439, 446, 449], "pass": [0, 3, 19, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 39, 54, 111, 118, 141, 148, 182, 188, 196, 248, 255, 282, 312, 325, 393, 394, 395, 459, 460, 479, 480, 483, 487, 489, 490], "jax": [0, 3, 4, 5, 14, 15, 19, 28, 32, 33, 34, 35, 37, 39, 42, 54, 67, 68, 312, 317, 429, 430, 431, 433, 449], "get_backend": [0, 27, 28], "specifi": [0, 4, 21, 26, 27, 32, 33, 34, 35, 37, 40, 41, 42, 92, 93, 95, 99, 101, 102, 105, 107, 108, 109, 111, 114, 116, 141, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 176, 178, 181, 182, 183, 188, 237, 248, 250, 260, 270, 271, 277, 310, 327, 333, 348, 352, 357, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 386, 388, 389, 392, 397, 402, 404, 405, 411, 412, 413, 414, 424, 425, 426, 429, 430, 431, 433, 434, 435, 437, 438, 442, 444, 446, 447, 448], "isn": [0, 4, 18, 40, 54], "t": [0, 4, 14, 15, 17, 18, 19, 20, 24, 32, 37, 39, 40, 41, 42, 54, 248, 253, 335, 344, 345], "associ": [0, 4, 18, 27, 29, 54, 188, 192, 232, 348, 359, 362, 372], "option": [0, 4, 17, 22, 23, 24, 27, 31, 32, 33, 34, 35, 37, 42, 54, 81, 83, 84, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 118, 119, 120, 121, 128, 140, 141, 157, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 250, 257, 260, 261, 262, 268, 270, 271, 289, 291, 294, 295, 302, 303, 312, 322, 335, 338, 341, 342, 347, 348, 357, 359, 362, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 397, 398, 403, 408, 409, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "str": [0, 4, 32, 33, 92, 103, 111, 112, 118, 119, 120, 123, 124, 127, 128, 129, 130, 133, 134, 135, 140, 141, 154, 157, 158, 160, 163, 164, 165, 166, 182, 248, 250, 262, 264, 265, 266, 289, 294, 295, 335, 336, 338, 340, 341, 342, 348, 363, 397, 403, 437, 438], "we": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 53, 54, 312, 315, 449, 455], "want": [0, 4, 14, 16, 17, 18, 26, 40, 41, 42, 54], "retriev": [0, 4, 248, 250], "e": [0, 4, 14, 15, 16, 18, 20, 21, 31, 40, 54, 91, 92, 103, 111, 113, 132, 141, 154, 188, 189, 196, 200, 202, 204, 210, 212, 213, 216, 221, 223, 230, 231, 233, 236, 237, 312, 314, 316, 318, 319, 320, 348, 350, 356, 359, 362, 365, 366, 371, 377, 389, 417, 420, 421, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445], "one": [0, 4, 14, 15, 17, 18, 24, 27, 30, 31, 32, 34, 35, 36, 39, 40, 42, 54, 92, 93, 103, 111, 115, 117, 141, 167, 168, 169, 170, 182, 188, 192, 248, 288, 291, 294, 295, 348, 356, 357, 361, 363, 370, 371, 377, 381, 382, 386, 388, 424, 425, 427, 429, 430, 431, 432, 433, 437, 438, 449], "default": [0, 4, 23, 24, 27, 28, 31, 32, 33, 35, 41, 81, 82, 83, 84, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 119, 120, 121, 122, 141, 148, 149, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 256, 257, 260, 261, 268, 269, 270, 271, 275, 276, 277, 279, 282, 283, 284, 285, 287, 288, 289, 291, 293, 294, 295, 298, 300, 302, 303, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 357, 359, 362, 363, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 459, 460, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "torch": [0, 4, 11, 22, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 54, 77, 78, 79, 89, 90, 111, 125, 126, 449], "tensorflow": [0, 4, 11, 14, 15, 19, 32, 33, 34, 35, 37, 42, 54, 74, 75, 449], "mxnet": [0, 4, 14, 19, 32, 33, 34, 37, 42, 449], "either": [0, 4, 11, 17, 18, 20, 23, 24, 27, 28, 31, 32, 33, 37, 39, 40, 54, 92, 98, 188, 192, 196, 217, 221, 222, 224, 225, 232, 237, 239, 240, 245, 248, 263, 284, 288, 289, 348, 356, 393, 394, 395, 396, 437, 442, 444, 467, 478, 479, 480], "doesn": [0, 4, 17, 20, 24, 32, 37, 54], "matter": [0, 4, 13, 24], "been": [0, 4, 18, 23, 27, 28, 31, 32, 33, 35, 37, 53, 54, 141, 157, 248, 264, 265, 266, 417, 418], "ivy_np": [0, 4], "us": [0, 4, 11, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 53, 54, 81, 83, 84, 85, 86, 87, 88, 91, 111, 123, 141, 148, 149, 173, 177, 180, 181, 182, 183, 185, 187, 188, 193, 198, 203, 206, 212, 215, 230, 231, 233, 238, 248, 270, 273, 274, 288, 294, 295, 296, 297, 302, 303, 312, 313, 314, 318, 319, 335, 341, 343, 344, 346, 347, 348, 351, 352, 357, 373, 374, 377, 381, 382, 384, 386, 390, 393, 394, 395, 396, 397, 398, 400, 406, 407, 408, 410, 415, 416, 424, 425, 426, 427, 429, 430, 431, 437, 438, 446, 447, 449, 467, 475, 478, 479, 480, 481, 482, 483, 485, 486], "ivy_jax": [0, 4], "subsequ": [0, 5, 17, 24, 26, 27, 30, 34, 35, 41], "call": [0, 5, 11, 14, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 54, 141, 182, 248, 293, 298, 309, 312, 315, 397, 398, 403, 407, 408, 467, 478, 479, 480, 483, 487], "nativ": [0, 5, 32, 34, 39, 40, 92, 104, 111, 112, 113, 118, 141, 154, 155, 156, 157, 158, 177, 184, 187, 248, 282, 284, 287, 459, 460], "native_arrai": [0, 5, 11, 81, 83, 84, 85, 86, 87, 88, 92, 103, 141, 160, 176, 188, 193, 198, 203, 212, 215, 230, 231, 233, 248, 253, 259, 260, 267, 270, 306, 307, 308, 335, 338, 341, 342, 347, 348, 350, 351, 352, 368, 373, 374, 376, 377, 378, 381, 382, 387, 390, 415, 416, 417, 418, 424, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 446, 447], "1": [0, 5, 11, 14, 15, 20, 24, 27, 31, 34, 35, 36, 37, 39, 40, 41, 42, 54, 77, 78, 81, 83, 84, 85, 86, 88, 92, 93, 100, 101, 102, 103, 105, 106, 110, 111, 114, 124, 141, 144, 147, 148, 152, 157, 158, 160, 162, 166, 170, 172, 175, 176, 181, 183, 188, 190, 191, 192, 193, 196, 198, 199, 202, 203, 204, 205, 206, 210, 211, 212, 214, 215, 219, 221, 222, 223, 224, 230, 231, 233, 236, 238, 239, 240, 245, 248, 252, 253, 259, 260, 267, 270, 271, 285, 291, 294, 295, 300, 303, 306, 307, 308, 310, 327, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 355, 359, 361, 365, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 397, 409, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "type": [0, 5, 11, 17, 19, 21, 22, 23, 24, 29, 30, 31, 33, 34, 35, 37, 39, 40, 42, 55, 56, 57, 58, 59, 60, 61, 62, 63, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 140, 141, 154, 155, 156, 157, 158, 160, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 282, 284, 285, 286, 287, 291, 294, 295, 296, 297, 300, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 324, 327, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 399, 403, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "ndarrai": [0, 5, 30, 32, 33, 34, 35, 39, 92, 94, 104, 248, 307], "Or": [0, 5, 40], "jaxlib": [0, 5, 17, 32, 33, 35, 39], "xla_extens": [0, 5, 32, 33, 35, 39], "devicearrai": [0, 5, 39], "try_import_ivy_jax": 0, "warn": [0, 6, 7, 8, 9, 10], "fals": [0, 6, 7, 8, 9, 10, 24, 31, 34, 40, 41, 42, 111, 114, 117, 122, 141, 157, 158, 169, 173, 177, 182, 185, 187, 188, 198, 214, 215, 216, 217, 218, 219, 227, 228, 248, 249, 252, 253, 260, 263, 267, 269, 275, 282, 284, 285, 287, 288, 300, 310, 312, 314, 315, 316, 317, 318, 319, 320, 348, 349, 357, 366, 371, 377, 387, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 417, 418, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 459, 460, 479, 480, 483, 484, 485, 486, 487, 488], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 28], "unset": [0, 11, 28, 37, 39], "adjust": [0, 11, 437, 443, 445], "dict": [0, 11, 31, 40, 41, 141, 148, 149, 157, 160, 163, 164, 165, 166, 248, 250, 264, 265, 266, 397, 399, 400, 403, 406, 409, 410], "previous": [0, 11, 17, 20, 26, 27, 37, 248, 255], "otherwis": [0, 11, 30, 32, 33, 35, 37, 39, 92, 93, 111, 114, 117, 119, 120, 121, 141, 157, 188, 216, 217, 218, 248, 254, 309, 312, 317, 322, 348, 349, 351, 370, 371, 393, 394, 395, 397, 410, 424, 425, 426, 428, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "implement": [0, 11, 19, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 111, 114, 132, 141, 183, 188, 189, 190, 191, 193, 194, 195, 196, 205, 206, 210, 211, 221, 222, 223, 224, 232, 236, 237, 240, 241, 245, 348, 353, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 449], "wa": [0, 11, 14, 24, 37, 39, 248, 309, 397, 410, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "last": [0, 11, 15, 24, 28, 54, 81, 86, 141, 157, 327, 331, 335, 345, 348, 350, 352, 357, 369, 370, 373, 375, 376, 377, 382, 386, 387, 389, 434, 435, 436, 446, 447, 448, 467, 477], "henc": [0, 11, 429, 430, 431, 433], "here": [0, 11, 17, 19, 22, 24, 31, 35, 37, 38, 39, 40, 41, 42, 53, 54], "tensor": [0, 11, 13, 22, 27, 28, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 54, 92, 101, 102, 111, 122, 188, 230, 231, 248, 291, 294, 295, 335, 343, 345, 348, 368, 377, 385, 387, 417, 418, 449, 467, 475, 477], "howev": [0, 11, 14, 17, 19, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 54], "befor": [0, 11, 17, 18, 19, 23, 26, 30, 32, 33, 34, 37, 40, 54, 141, 182, 188, 247, 335, 346, 347, 393, 394, 395, 397, 409, 429, 430, 431, 433, 437, 442, 444], "becom": [0, 11, 13, 15, 18, 24, 31, 37, 42, 54, 377, 378], "swap": [0, 11, 377, 390], "python": [0, 11, 12, 13, 14, 17, 18, 20, 37, 39, 40, 54, 92, 93, 141, 177, 187, 188, 237, 449, 455], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 21, 25, 27, 28, 29, 30, 33, 35, 36, 39, 42, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 71, 72, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493], "op": [0, 11, 22, 37, 54], "eagertensor": [0, 11], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 56, 57, 58, 59, 60, 61, 62, 63, 68, 71, 72, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 453, 454, 455, 457, 458, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493], "backend": [3, 4, 5, 11, 13, 19, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 111, 125, 126, 128, 140, 141, 173, 175, 185, 248, 279, 282, 283, 289, 312, 314, 316, 318, 319, 320, 325, 449, 455, 459, 460, 483, 484, 485, 486, 487, 488], "ml": [12, 14, 15, 16, 36, 37, 38, 40, 41, 42, 53, 449, 455], "explos": [12, 14, 449], "A": [12, 13, 14, 15, 20, 21, 26, 27, 31, 32, 33, 37, 40, 54, 92, 97, 104, 141, 148, 149, 182, 188, 235, 246, 248, 274, 306, 348, 361, 364, 365, 366, 377, 387, 389, 397, 398, 400, 402, 404, 405, 406, 407, 408, 411, 412, 413, 414, 437, 438, 446, 447, 448, 449, 489, 490], "huge": [12, 14, 40, 449], "number": [12, 13, 17, 24, 31, 33, 34, 37, 40, 42, 89, 90, 91, 92, 93, 94, 97, 101, 102, 103, 104, 111, 115, 123, 124, 127, 129, 130, 132, 141, 174, 175, 176, 188, 192, 196, 204, 212, 213, 230, 231, 232, 236, 237, 238, 239, 247, 248, 269, 274, 275, 290, 308, 311, 327, 331, 335, 346, 348, 353, 359, 364, 366, 370, 377, 378, 380, 383, 384, 386, 387, 389, 391, 392, 393, 394, 395, 396, 417, 418, 422, 424, 427, 429, 430, 431, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478], "tool": [12, 15, 38, 42, 53, 54, 449], "have": [12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 53, 54, 81, 84, 92, 93, 95, 96, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 124, 141, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 257, 264, 265, 266, 268, 312, 317, 325, 335, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "explod": [12, 13, 449], "onto": [12, 13, 141, 167, 168, 397, 403, 409, 449], "scene": [12, 13, 21, 36, 38, 312, 314, 316, 318, 319, 320, 449], "b": [12, 15, 16, 21, 24, 27, 28, 31, 36, 37, 38, 40, 41, 42, 52, 141, 160, 188, 192, 193, 198, 203, 206, 212, 215, 233, 238, 245, 248, 252, 253, 259, 260, 267, 270, 308, 335, 338, 341, 342, 347, 348, 349, 350, 351, 361, 365, 368, 372, 373, 374, 377, 378, 381, 382, 384, 386, 389, 390, 415, 416, 417, 420, 421, 424, 426, 427, 428, 434, 435, 437, 438, 439, 446, 447, 449, 455], "why": [12, 14, 18, 31, 34, 35, 39, 449], "unifi": [12, 14, 30, 37, 54, 141, 167, 168, 169, 170, 182, 449], "should": [12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 89, 90, 92, 103, 107, 108, 111, 116, 141, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 234, 236, 237, 239, 240, 241, 242, 244, 245, 247, 248, 255, 282, 291, 312, 314, 316, 318, 319, 320, 335, 347, 348, 349, 350, 351, 352, 355, 356, 359, 361, 362, 363, 365, 366, 368, 369, 370, 371, 377, 385, 417, 423, 424, 425, 426, 429, 430, 431, 433, 437, 438, 439, 440, 442, 443, 444, 445, 449], "them": [12, 13, 14, 15, 26, 28, 30, 31, 37, 39, 40, 41, 54, 449], "c": [12, 14, 15, 16, 17, 21, 24, 27, 31, 36, 37, 38, 40, 54, 248, 252, 253, 259, 308, 312, 313, 314, 316, 318, 319, 320, 335, 341, 377, 389, 424, 427, 437, 438, 443, 445, 449, 455], "standard": [12, 21, 22, 23, 25, 26, 30, 34, 35, 54, 92, 103, 111, 124, 188, 192, 193, 198, 203, 206, 212, 238, 245, 348, 351, 377, 381, 382, 386, 415, 416, 417, 420, 429, 430, 431, 434, 435, 437, 439, 443, 445, 449, 455, 481, 482], "re": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 54, 141, 182, 248, 264, 327, 328, 331, 348, 368, 377, 386, 424, 428, 449], "collabor": [12, 13, 14, 449], "consortium": [12, 14, 449, 455], "data": [12, 14, 21, 22, 23, 27, 29, 31, 33, 34, 35, 39, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 234, 236, 237, 239, 240, 241, 242, 244, 245, 247, 248, 252, 253, 284, 285, 287, 304, 312, 317, 325, 327, 331, 333, 335, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 377, 381, 382, 383, 385, 386, 388, 389, 417, 423, 424, 425, 426, 427, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "api": [12, 13, 17, 18, 21, 23, 24, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 40, 54, 92, 103, 188, 192, 193, 198, 203, 206, 212, 238, 245, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439, 449, 455], "open": [13, 14, 15, 16, 17, 20, 23, 53, 92, 93, 417, 419, 421, 449], "project": [13, 14, 15, 17, 18, 20, 22, 28, 39, 41, 53, 54, 417, 418, 420, 421], "grown": 13, "consider": [13, 24, 35], "recent": [13, 14, 17, 18], "year": [13, 15, 54, 449], "especi": [13, 17], "deep": [13, 16, 18, 19, 36, 40, 449], "learn": [13, 14, 17, 19, 21, 27, 36, 42, 53, 188, 214, 312, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 483, 484, 485, 486, 487, 488], "can": [13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 53, 54, 92, 94, 104, 111, 117, 141, 180, 181, 182, 327, 329, 348, 355, 377, 385, 417, 419, 449, 455], "seen": [13, 14, 24, 39, 40], "rapidli": 13, "increas": [13, 141, 162, 166, 170, 377, 380, 392, 397, 409], "github": [13, 18, 19, 23, 26], "repo": [13, 14, 15, 17, 18, 25, 37, 39, 40, 41, 42, 53, 449, 455], "contain": [13, 17, 18, 19, 20, 21, 23, 24, 26, 27, 32, 34, 35, 36, 37, 38, 41, 42, 54, 81, 84, 85, 87, 92, 93, 96, 98, 105, 107, 108, 109, 141, 159, 160, 163, 172, 176, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 253, 256, 257, 259, 260, 267, 270, 277, 286, 306, 307, 308, 327, 333, 335, 338, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 387, 390, 397, 410, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 483, 487, 489, 490], "term": [13, 18, 335, 345, 467, 477], "time": [13, 14, 15, 17, 18, 19, 26, 27, 31, 32, 35, 37, 40, 42, 54, 312, 314, 318, 335, 345, 377, 391, 393, 394, 395, 396, 424, 425, 426, 429, 430, 431, 467, 478, 479, 480], "These": [13, 14, 15, 18, 23, 24, 26, 27, 31, 32, 34, 35, 37, 38, 40, 41, 42, 54, 348, 353, 449, 455], "ar": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 55, 63, 92, 93, 141, 148, 149, 172, 176, 178, 182, 188, 205, 227, 228, 238, 240, 245, 248, 249, 252, 253, 254, 272, 278, 279, 283, 290, 292, 304, 335, 344, 348, 350, 356, 357, 359, 362, 366, 367, 370, 377, 378, 382, 386, 397, 399, 403, 409, 417, 420, 421, 424, 425, 426, 427, 429, 430, 449, 489, 490], "written": [13, 17, 22, 23, 30, 34, 35, 37, 39, 42, 54], "mani": [13, 14, 15, 17, 18, 19, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 54, 377, 387], "differ": [13, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 54, 111, 124, 141, 159, 160, 163, 164, 188, 192, 232, 244, 335, 344, 377, 389, 437, 442, 444, 449], "while": [13, 14, 17, 18, 24, 28, 34, 41, 42, 54, 188, 227, 228, 429, 430, 437, 440], "thi": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 92, 93, 94, 103, 104, 141, 162, 166, 170, 177, 182, 187, 188, 189, 192, 193, 198, 202, 203, 206, 211, 212, 227, 228, 237, 238, 245, 248, 269, 270, 282, 293, 298, 312, 314, 316, 317, 318, 319, 320, 325, 335, 338, 344, 347, 348, 351, 357, 364, 377, 381, 382, 385, 386, 389, 397, 403, 409, 410, 415, 416, 424, 425, 429, 430, 431, 433, 434, 435, 437, 439, 440, 443, 445, 449, 455, 479, 480, 483, 484, 485, 486, 487, 488], "wonder": [13, 15, 39], "thing": [13, 14, 15, 17, 18, 19, 28, 39, 40], "research": [13, 53], "develop": [13, 14, 15, 16, 17, 18, 19, 53, 54, 449], "also": [13, 14, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 92, 103, 188, 192, 193, 198, 203, 206, 212, 238, 245, 248, 270, 282, 312, 314, 335, 338, 344, 347, 348, 351, 377, 381, 382, 386, 393, 394, 395, 396, 397, 398, 399, 407, 408, 409, 415, 416, 429, 430, 431, 434, 435, 437, 439, 467, 477], "consid": [13, 14, 22, 27, 38, 39, 40, 188, 227, 228, 429, 430, 431, 433], "speed": 13, "evolv": 13, "sharabl": 13, "code": [13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 54, 81, 83, 84, 85, 86, 87, 88, 141, 160, 183, 188, 203, 335, 341, 342, 429, 430, 431, 434, 435, 437, 438, 449, 455], "significantli": 13, "hinder": [13, 35], "librari": [13, 14, 15, 37, 42, 52, 54, 141, 183, 188, 211, 227, 228, 348, 353, 429, 430, 431, 433, 437, 439, 440, 441, 449], "outdat": 13, "month": 13, "rigor": 13, "maintain": [13, 18, 54, 434, 435, 436], "against": [13, 26, 54, 111, 115, 348, 356, 357, 359, 362, 424, 425], "newest": 13, "version": [13, 14, 15, 17, 23, 37, 39, 348, 353, 449], "For": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 92, 93, 103, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 210, 211, 212, 221, 222, 224, 225, 232, 236, 237, 238, 240, 241, 242, 245, 247, 312, 317, 325, 348, 366, 369, 377, 378, 389, 429, 430, 431, 433, 437, 439, 441, 444, 459, 460], "softwar": [13, 14, 17, 18], "pipelin": [13, 30, 42], "where": [13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 28, 30, 31, 32, 33, 34, 37, 40, 41, 42, 54, 70, 71, 72, 92, 99, 100, 103, 188, 196, 210, 223, 232, 236, 248, 278, 282, 291, 348, 353, 359, 362, 363, 366, 367, 369, 370, 377, 378, 380, 381, 383, 389, 392, 397, 398, 408, 417, 418, 424, 427, 437, 443, 445, 446, 447, 448, 449], "rapid": [13, 14, 17], "prototyp": 13, "vital": [13, 42], "signific": [13, 14, 54], "bottleneck": 13, "As": [13, 18, 26, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 54, 429, 430, 431, 433], "new": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 34, 36, 39, 42, 53, 92, 95, 98, 99, 100, 105, 106, 109, 110, 111, 136, 188, 197, 223, 235, 246, 248, 264, 265, 266, 269, 270, 271, 294, 295, 296, 297, 302, 303, 312, 314, 316, 318, 319, 320, 327, 329, 332, 334, 377, 381, 385, 389, 397, 402, 413, 414, 415, 416, 449, 459, 460, 467, 477, 481, 482, 483, 484, 485, 486, 487, 488], "futur": [13, 15, 17, 18, 39, 54, 348, 353], "avail": [13, 17, 18, 23, 33, 54, 141, 157, 173, 174, 175, 185, 248, 265], "specif": [13, 19, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 53, 54, 111, 132, 141, 180, 183, 188, 227, 228, 248, 264, 265, 266, 289, 348, 353, 368, 377, 389, 393, 394, 395, 396, 417, 418, 437, 439, 440, 441, 449, 452, 454, 455, 479, 480], "quickli": [13, 15, 17, 18, 40, 41], "obsolet": [13, 15], "user": [13, 14, 17, 18, 20, 21, 26, 28, 31, 34, 36, 54, 467, 478, 479, 480], "constantli": 13, "invent": 13, "wheel": 13, "our": [13, 14, 16, 17, 18, 24, 31, 36, 39, 40, 41, 42, 54, 449], "desir": [13, 111, 114, 117, 141, 183, 248, 278, 327, 333, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "provid": [13, 17, 18, 23, 24, 27, 30, 31, 32, 33, 34, 35, 37, 41, 53, 54, 89, 90, 92, 103, 111, 119, 120, 121, 128, 132, 140, 141, 157, 248, 263, 291, 295, 312, 314, 316, 318, 319, 320, 348, 370, 377, 382, 389, 424, 425, 437, 443, 445, 446, 447, 448, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 483, 484, 485, 486, 487, 488], "simultan": [13, 15], "all": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 53, 54, 55, 63, 89, 90, 92, 93, 107, 108, 141, 148, 172, 178, 248, 249, 252, 253, 272, 292, 307, 335, 345, 348, 365, 368, 371, 377, 382, 386, 393, 394, 395, 396, 397, 398, 399, 408, 409, 410, 417, 418, 421, 446, 449, 452, 454], "modern": [13, 14], "simpl": [13, 17, 18, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 37, 39, 41, 42, 54, 248, 267], "scalabl": [13, 37], "manner": [13, 22, 23, 33, 40, 53, 54, 397, 409], "must": [13, 15, 17, 18, 19, 22, 23, 24, 27, 30, 31, 32, 33, 35, 37, 41, 42, 81, 84, 92, 93, 95, 96, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 141, 167, 168, 169, 170, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 257, 268, 295, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 422, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 483, 487], "determin": [13, 23, 27, 31, 32, 33, 111, 117, 118, 123, 128, 129, 130, 140, 141, 173, 174, 175, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 210, 211, 216, 217, 218, 221, 222, 224, 225, 229, 232, 236, 237, 240, 241, 242, 245, 248, 249, 252, 253, 277, 279, 283, 284, 285, 286, 287, 304, 311, 312, 317, 335, 346, 348, 349, 350, 351, 352, 355, 356, 359, 361, 362, 364, 365, 369, 370, 371, 393, 394, 395, 396, 429, 430, 431, 433, 446, 447, 448], "exactli": [13, 15, 24, 33, 449, 455], "common": [13, 19, 24, 27, 29, 31, 33, 54], "ground": [13, 26], "li": 13, "between": [13, 24, 26, 27, 30, 31, 35, 36, 38, 39, 40, 42, 53, 92, 93, 111, 124, 188, 196, 236, 373, 374, 375, 376, 377, 381, 389, 397, 403, 417, 419, 429, 430, 431, 433, 449, 483, 485], "find": [13, 17, 18, 37, 40, 429, 430, 431, 433, 449], "exist": [13, 14, 17, 19, 20, 23, 24, 25, 26, 27, 28, 29, 34, 37, 54, 248, 263, 483, 487], "essenti": [13, 14, 19, 24, 27, 33], "order": [13, 17, 18, 20, 23, 24, 28, 30, 31, 32, 33, 35, 39, 40, 42, 54, 70, 71, 72, 188, 196, 312, 314, 316, 318, 319, 320, 348, 353, 357, 366, 367, 371, 377, 382, 393, 394, 395, 424, 427, 429, 430, 431, 433, 434, 435, 436, 489, 490], "design": [13, 14, 21, 34, 37, 39, 54], "univers": 13, "abstract": [13, 31, 41, 54, 141, 153, 483, 487], "In": [13, 15, 17, 18, 22, 23, 24, 27, 28, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 141, 177, 183, 184, 187, 188, 192, 232, 237, 248, 250, 282, 377, 385, 417, 421, 449], "search": [13, 17, 22, 24, 26, 425, 426, 427, 428], "languag": [13, 15, 37], "first": [13, 14, 17, 18, 20, 24, 27, 30, 31, 35, 37, 39, 40, 42, 89, 90, 92, 101, 102, 111, 131, 136, 141, 157, 169, 188, 192, 198, 200, 201, 202, 203, 208, 213, 215, 219, 220, 225, 226, 228, 229, 232, 234, 236, 244, 248, 252, 312, 315, 348, 350, 352, 353, 356, 361, 363, 366, 368, 370, 377, 379, 386, 389, 390, 393, 394, 395, 396, 397, 398, 407, 408, 417, 423, 424, 425, 426, 429, 430, 431, 467, 478, 479, 480, 483, 487], "see": [13, 16, 17, 18, 19, 25, 27, 31, 33, 35, 39, 40, 53, 54, 92, 93, 98, 101, 102, 111, 116, 132, 188, 192, 198, 200, 201, 202, 203, 207, 211, 219, 225, 228, 229, 232, 234, 236, 237, 244, 348, 359, 362, 365, 370, 371, 424, 426, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "clear": [13, 14, 15, 18, 19, 24, 26, 32, 33, 37, 39, 141, 156], "front": [13, 36, 37, 40, 449, 455], "runner": 13, "look": [13, 17, 18, 20, 22, 24, 27, 28, 31, 32, 33, 35, 37, 39, 41, 42, 449], "littl": [13, 30, 39], "deeper": [13, 21, 36, 141, 162, 166, 170, 397, 408, 409], "follow": [13, 14, 17, 18, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 54, 111, 127, 141, 182, 188, 237, 248, 280, 281, 282, 302, 303, 312, 314, 316, 318, 319, 320, 335, 346, 347, 348, 363, 371, 397, 403, 409, 429, 430, 431, 433, 449, 467, 477, 483, 487], "same": [13, 15, 17, 18, 20, 22, 24, 26, 27, 30, 31, 33, 34, 35, 37, 39, 41, 42, 92, 93, 96, 100, 103, 106, 107, 108, 110, 111, 114, 115, 116, 141, 148, 149, 182, 188, 189, 192, 199, 204, 212, 232, 237, 238, 239, 247, 248, 268, 270, 271, 291, 294, 295, 312, 317, 322, 335, 336, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 362, 363, 365, 366, 369, 370, 377, 379, 382, 383, 386, 388, 389, 393, 394, 395, 397, 410, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 449, 467, 468, 469, 470, 471, 472, 473, 474], "core": [13, 17, 19, 33, 37, 42, 141, 174, 449], "principl": 13, "oper": [13, 17, 19, 23, 24, 27, 30, 31, 33, 34, 40, 41, 92, 101, 102, 111, 132, 188, 192, 202, 203, 215, 233, 237, 248, 254, 264, 265, 266, 304, 312, 314, 316, 318, 319, 320, 335, 336, 337, 338, 339, 340, 341, 342, 344], "expos": [13, 37, 41, 248, 258], "almost": [13, 18, 31, 38, 40], "ident": [13, 15, 27, 29, 31, 39, 40, 54, 141, 172, 397, 410, 449], "uniqu": [13, 27, 31, 54, 141, 148, 149, 393, 394, 395, 396, 397, 403, 429, 430, 431, 432, 433], "syntax": [13, 14], "There": [13, 17, 18, 24, 27, 30, 31, 32, 37, 40, 54], "onli": [13, 16, 17, 18, 22, 24, 26, 27, 28, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 52, 54, 141, 178, 188, 227, 228, 348, 356, 363, 377, 382, 397, 398, 399, 407, 408, 424, 425, 426, 437, 440, 449, 483, 484, 485, 486, 487, 488], "so": [13, 14, 17, 18, 22, 23, 24, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 63, 397, 398, 408, 449], "wai": [13, 14, 17, 28, 34, 39, 40, 41, 42, 54], "manipul": [13, 22, 42, 53, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "unsurprisingli": [13, 24], "fundament": [13, 31, 37], "consist": [13, 30, 34, 141, 170, 348, 353, 437, 438, 479, 480], "each": [13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 42, 53, 54, 81, 84, 85, 87, 92, 103, 111, 115, 141, 148, 149, 159, 160, 161, 162, 163, 164, 165, 169, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 312, 314, 316, 318, 319, 320, 327, 330, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 356, 359, 360, 362, 365, 366, 377, 380, 384, 386, 387, 389, 391, 392, 397, 403, 410, 417, 418, 424, 427, 429, 430, 431, 437, 438, 449, 455, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "veri": [13, 14, 17, 18, 22, 24, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 54, 449], "similar": [13, 22, 31, 32, 33, 40, 54, 188, 237, 335, 346, 467, 478], "convent": [13, 53, 348, 356, 437, 438], "those": [13, 17, 18, 19, 31, 37, 42, 92, 93, 312, 325, 348, 363, 366, 377, 378], "introduc": [13, 31, 40, 377, 386, 429, 430], "2006": 13, "layer": [13, 22, 23, 37, 38, 41, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 415, 416, 449, 461, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "therefor": [13, 18, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 37, 39, 41, 54, 188, 192, 193, 212, 245, 248, 270, 335, 338, 347, 377, 386, 415, 416, 437, 439], "present": [13, 18, 25, 31, 32, 33, 34, 35, 37], "itself": [13, 17, 18, 31, 34, 35, 41, 53, 54, 248, 250, 397, 409], "cut": 13, "cloth": 13, "adher": [13, 14, 23, 25, 37, 42], "semant": [13, 37, 42, 188, 237], "round": [13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 188, 192, 204, 212, 213, 232, 242, 247, 449], "up": [13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 53, 54], "hopefulli": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53], "paint": [13, 37], "pictur": [13, 37], "how": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 53, 54, 449, 455, 467, 478, 479, 480], "pleas": [13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 449], "check": [13, 14, 15, 17, 18, 31, 36, 37, 39, 40, 41, 42, 53, 111, 118, 125, 126, 128, 140, 141, 177, 187, 248, 254, 267, 277, 284, 285, 286, 287, 304, 311, 312, 317, 348, 353, 397, 398, 407, 408, 409, 449], "out": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 53, 70, 71, 72, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 92, 93, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 114, 116, 141, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 256, 257, 259, 260, 261, 264, 265, 266, 268, 270, 271, 278, 291, 327, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 475], "discuss": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 449], "faq": [13, 14, 15, 37, 39, 40, 41, 42, 53], "reach": [13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 141, 162, 166, 170, 397, 409], "discord": [13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 449], "you": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 53, 54, 449, 455], "question": [13, 14, 15, 17, 18, 24, 26, 37, 39, 40, 41, 42, 53, 54, 449], "With": [14, 15, 17, 24, 26, 37, 81, 83, 84, 85, 86, 87, 88, 92, 103, 141, 160, 176, 188, 192, 193, 198, 203, 206, 212, 215, 230, 231, 233, 238, 245, 248, 253, 259, 260, 267, 270, 306, 307, 308, 335, 338, 341, 342, 347, 348, 349, 350, 351, 352, 357, 368, 373, 374, 376, 377, 378, 381, 382, 384, 386, 387, 390, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 446, 447], "central": 14, "goal": [14, 19], "being": [14, 15, 17, 18, 24, 26, 29, 30, 31, 32, 33, 34, 35, 37, 40, 53, 54, 92, 93, 248, 293, 298, 429, 432, 449], "would": [14, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 34, 35, 36, 37, 39, 41, 42, 54, 81, 86, 141, 183, 449], "entir": [14, 15, 18, 24, 25, 26, 30, 31, 34, 39, 40, 41, 42, 54, 141, 182, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 467, 476], "forgiven": 14, "rais": [14, 18, 34, 37, 39, 111, 116, 188, 210, 236, 248, 254, 273, 282, 296, 303, 309, 348, 356, 358, 370, 377, 388, 389, 424, 427, 437, 439, 441, 446, 447, 448, 479, 480, 483, 487], "an": [14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 81, 84, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 124, 129, 130, 132, 141, 160, 164, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 255, 256, 257, 259, 268, 269, 270, 278, 282, 284, 285, 286, 287, 307, 308, 309, 312, 317, 322, 324, 325, 327, 329, 333, 334, 335, 338, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 369, 370, 371, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 397, 403, 415, 416, 417, 419, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 459, 460, 479, 480, 483, 484, 485, 487], "eyebrow": 14, "somehow": 14, "pytorch": [14, 15, 19, 27, 32, 33, 34, 35, 37, 39, 42, 54, 312, 314, 316, 318, 319, 320, 449, 483, 484, 485, 486, 487, 488], "other": [14, 17, 18, 22, 23, 24, 26, 27, 30, 31, 34, 37, 39, 41, 42, 52, 53, 54, 77, 78, 89, 90, 92, 93, 188, 211, 248, 249, 250, 312, 315, 417, 421, 429, 432, 437, 443, 445, 449], "strong": [14, 54], "industri": 14, "back": [14, 30, 36, 37, 39, 54, 449, 455, 479, 480, 483, 487], "momentum": 14, "won": [14, 15, 18, 42], "ad": [14, 17, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 35, 37, 41, 54, 248, 302, 303, 348, 353, 377, 381, 489, 490], "just": [14, 15, 17, 18, 23, 24, 26, 27, 34, 37, 39, 40, 54, 437, 438, 467, 476], "make": [14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 141], "problem": [14, 18, 30, 39], "even": [14, 15, 17, 18, 23, 27, 32, 33, 35, 39, 40, 41, 42, 54, 188, 236, 238], "wors": 14, "rather": [14, 22, 23, 26, 31, 42, 54, 92, 93, 141, 182, 248, 284, 285, 287, 312, 317], "funni": 14, "comic": 14, "strip": 14, "easi": [14, 17, 18, 27, 31], "feasibl": 14, "space": [14, 92, 93, 101, 102, 248, 269], "case": [14, 17, 18, 19, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 54, 92, 103, 141, 177, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 205, 206, 210, 211, 212, 221, 222, 224, 225, 232, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 282, 294, 295, 348, 357, 377, 385, 397, 400, 406, 437, 439, 440, 441, 443, 444, 445, 467, 478, 479, 480, 483, 487], "unlik": [14, 24, 31, 141], "charger": 14, "charact": 14, "encod": [14, 40, 248, 269, 327, 329], "instant": [14, 449], "messag": [14, 18, 37, 39, 492, 493], "much": [14, 18, 22, 30, 31, 34, 37, 39, 40], "doe": [14, 18, 20, 21, 22, 23, 24, 26, 27, 28, 32, 34, 35, 37, 39, 40, 54, 188, 203, 248, 282, 377, 387], "mandat": [14, 26, 34], "adopt": [14, 18, 30], "continu": [14, 15, 25, 26, 54], "own": [14, 15, 17, 23, 37, 54], "signatur": [14, 22, 23, 24, 31, 32, 33, 34, 35, 188, 193, 203, 206, 212, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "replac": [14, 20, 24, 26, 29, 32, 33, 37, 39, 42, 54, 248, 294, 295, 377, 378, 417, 418], "your": [14, 15, 16, 17, 19, 20, 22, 23, 40, 41, 54, 449], "10": [14, 17, 20, 24, 31, 37, 39, 40, 92, 99, 102, 141, 188, 198, 199, 206, 215, 222, 248, 260, 270, 293, 298, 312, 318, 335, 341, 348, 351, 352, 361, 368, 377, 382, 384, 387, 415, 416, 417, 418, 419, 424, 427, 429, 430, 437, 438, 439, 483, 485], "100": [14, 15, 40, 41, 42, 54, 449], "despit": [14, 31, 33], "distinct": [14, 23, 31, 34, 36, 429, 430, 431, 433, 449], "still": [14, 23, 26, 32, 39, 41, 54, 449], "believ": [14, 18], "share": [14, 24, 26, 27, 28, 31, 37, 111, 136], "bring": [14, 37, 38], "benefit": [14, 15, 17, 18, 30, 31, 34, 39, 40, 54], "unrel": [14, 18], "what": [14, 15, 21, 23, 24, 29, 31, 35, 36, 37, 39, 40, 41, 42, 53, 54, 449], "again": [14, 15, 18, 22, 24, 31, 34, 40, 42, 54], "contrari": 14, "bumpi": 14, "road": 14, "allud": [14, 40], "most": [14, 17, 18, 22, 26, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 54, 348, 353], "technologi": 14, "sector": [14, 188, 191, 194, 197], "full": [14, 15, 18, 23, 32, 35, 37, 54, 92, 111, 124, 188, 215, 335, 341, 348, 363, 365, 366, 415, 416], "success": 14, "reason": [14, 18, 22, 24, 27, 30, 31, 32, 34, 37, 39, 188, 237], "build": [14, 16, 17, 27, 36, 38, 41, 42, 54, 429, 430, 431, 433, 449, 467, 478, 479, 480], "custom": [14, 41], "comput": [14, 15, 17, 27, 31, 37, 40, 54, 141, 182, 188, 192, 198, 201, 203, 208, 209, 214, 215, 219, 220, 226, 227, 228, 229, 232, 233, 234, 248, 256, 257, 260, 261, 312, 313, 314, 315, 316, 318, 319, 320, 322, 324, 327, 330, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 353, 354, 355, 356, 357, 363, 364, 365, 366, 370, 371, 373, 374, 375, 376, 397, 403, 429, 430, 431, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445], "thank": [14, 40], "interoper": 14, "compon": [14, 37], "bio": [14, 17], "hardwar": [14, 17], "initi": [14, 18, 28, 32, 33, 141, 335, 345, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 483, 487], "pcie": 14, "interfac": [14, 42, 54], "motherboard": 14, "raid": 14, "storag": [14, 40], "virtual": [14, 18, 20], "bluetooth": 14, "wireless": 14, "exchang": 14, "btx": 14, "form": [14, 16, 27, 41, 42, 92, 94, 104, 107, 108, 248, 250, 312, 314, 316, 318, 319, 320, 335, 348, 349, 351, 352, 353, 354, 355, 359, 360, 362, 363, 365, 366, 367, 369, 397, 399, 409], "factor": [14, 141, 148, 180, 181, 182, 312, 313, 314, 318, 319, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 467, 468, 469, 470, 471, 472, 473, 474, 483, 484, 485, 486], "sata": 14, "connect": [14, 17, 41, 42, 467, 477, 478], "host": [14, 54], "bu": 14, "adapt": [14, 312, 319, 483, 486], "devic": [14, 21, 22, 27, 29, 32, 39, 40, 54, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 248, 270, 271, 291, 294, 295, 417, 418, 419, 420, 421, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "html": [14, 20, 23, 188, 193, 203, 206, 212, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "enabl": [14, 17, 18, 26, 27, 30, 31, 34, 36, 37, 38, 40, 42, 54], "anyon": [14, 16, 54], "websit": 14, "tcp": 14, "ip": 14, "node": [14, 31, 397, 398, 407, 408], "commun": [14, 16, 18, 19, 54, 449, 455], "network": [14, 27, 31, 37, 41, 53, 335, 344, 449, 456, 467, 479, 480], "smtp": 14, "possibl": [14, 16, 17, 18, 19, 23, 24, 26, 31, 32, 34, 37, 40, 53, 54, 248, 288, 327, 333, 437, 439, 441], "send": 14, "gmail": 14, "outlook": 14, "pop": 14, "u": [14, 16, 17, 18, 26, 31, 34, 41, 54, 348, 349, 366, 449], "email": 14, "ieee": [14, 91, 111, 124, 188, 192, 211, 232, 237, 242], "754": [14, 91, 111, 124, 188, 192, 211, 232, 237, 242], "allow": [14, 37, 54, 92, 101, 102, 248, 288, 479, 480], "calcul": [14, 23, 188, 189, 190, 191, 192, 193, 194, 195, 196, 205, 206, 207, 210, 211, 221, 222, 223, 224, 225, 232, 236, 240, 241, 242, 244, 245, 373, 374, 375, 376, 437, 439, 440, 441, 442, 443, 444, 445], "live": [14, 15], "depend": [14, 17, 18, 23, 29, 31, 32, 37, 54, 111, 114, 188, 189, 190, 191, 193, 194, 195, 196, 205, 206, 210, 211, 221, 222, 223, 224, 236, 240, 241, 245, 348, 353, 363, 365, 366, 424, 428, 434, 435, 436], "did": [14, 19, 42], "aris": [14, 54], "until": [14, 18, 54, 449], "substanti": [14, 18, 26, 30], "innov": 14, "growth": 14, "usag": [14, 37, 141, 182], "relev": [14, 17, 19, 24, 31, 32, 40, 483, 484, 485, 486, 487, 488], "area": [14, 34, 52, 188, 191, 194, 197, 449], "necess": 14, "parti": [14, 54], "could": [14, 15, 17, 24, 26, 31, 32, 34, 37, 39, 40, 41, 429, 430, 431, 433], "easili": [14, 18, 40, 41, 42, 54, 449], "engag": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "regard": [14, 31, 141], "effect": [14, 23, 30, 31, 35, 54, 92, 103, 312, 320, 437, 443, 445], "2015": 14, "sinc": [14, 17, 54], "alongsid": 14, "machin": [14, 17, 27, 53, 111, 124, 127, 188, 214, 348, 359, 362], "given": [14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 41, 42, 53, 92, 93, 95, 101, 102, 141, 171, 177, 179, 180, 181, 182, 184, 187, 248, 260, 261, 271, 294, 295, 310, 312, 313, 314, 316, 318, 319, 320, 335, 336, 337, 338, 339, 340, 341, 342, 348, 372, 373, 374, 375, 376, 377, 378, 381, 382, 384, 386, 387, 391, 397, 404, 405, 417, 419, 420, 421, 423, 434, 436, 459, 460], "frame": [14, 53], "less": [14, 18, 24, 31, 35, 36, 37, 188, 190, 191, 193, 196, 204, 221, 222, 224, 236, 237, 239, 242, 348, 359, 362, 371, 417, 421, 437, 445], "matur": [14, 54], "state": [14, 23, 35, 36, 37, 38, 40, 53, 188, 232, 335, 345, 449, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "than": [14, 18, 22, 24, 26, 31, 34, 37, 40, 41, 42, 54, 92, 93, 111, 124, 141, 182, 188, 190, 191, 193, 196, 200, 202, 204, 212, 213, 221, 222, 224, 230, 236, 237, 239, 242, 247, 248, 284, 285, 287, 312, 317, 348, 350, 356, 359, 362, 371, 377, 378, 382, 388, 417, 421, 429, 430, 431, 433, 437, 442, 443, 444, 445], "preced": [14, 41], "mention": [14, 17, 18, 24, 27, 34, 35], "aros": 14, "70": [14, 348, 349, 361, 437, 438], "80": [14, 348, 361, 437, 438], "90": [14, 188, 203, 238, 348, 361, 437, 438], "effort": [14, 16, 54], "stage": [14, 16, 18, 20, 21, 449], "complet": [14, 18, 19, 30, 31, 39, 40, 348, 363], "natur": [14, 24, 30, 31, 53, 188, 210, 221, 223, 348, 364], "like": [14, 17, 18, 20, 21, 22, 23, 24, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 53, 54, 312, 317, 417, 421, 449], "certainli": 14, "mission": [14, 449], "creat": [14, 16, 17, 18, 20, 32, 33, 34, 37, 38, 41, 52, 53, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 141, 148, 149, 248, 270, 271, 291, 294, 295, 306, 312, 324, 417, 418, 419, 421, 449, 455, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "At": [14, 19], "process": [14, 15, 16, 17, 18, 20, 27, 31, 37, 42, 141, 148, 149, 177, 187], "ourselv": 14, "lead": [14, 15, 54, 348, 363, 366], "quansight": 14, "compani": 14, "made": [14, 18, 19, 31, 34, 37, 39], "organ": [14, 22, 27, 30, 31], "panda": 14, "scipi": 14, "conda": [14, 17, 20], "dask": [14, 429, 430, 431, 433], "apach": 14, "onnx": 14, "scikit": 14, "jupyt": 14, "aw": 14, "cupi": 14, "net": [14, 15, 37, 42], "sympi": 14, "rai": [14, 188, 196], "modin": 14, "spyder": 14, "includ": [14, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 53, 54, 92, 93, 94, 104, 248, 277, 311, 348, 371, 397, 398, 417, 421, 424, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 467, 477, 478, 481, 482], "member": [14, 18], "googl": [14, 449], "octoml": 14, "einop": [14, 248, 264, 265, 266], "further": [14, 15, 18, 20, 24, 30, 36, 40, 41, 449], "sponsor": 14, "lg": 14, "electron": 14, "microsoft": 14, "d": [14, 15, 16, 17, 21, 31, 40, 248, 253, 259, 327, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 352, 361, 449, 455], "shaw": 14, "co": [14, 37, 53, 188, 248, 269, 449], "intel": 14, "togeth": [14, 30, 31, 41, 42, 54, 489, 490], "major": [14, 32, 33, 54, 424, 427], "involv": [14, 16, 20, 21, 32, 42, 111, 132, 188, 192, 232, 449, 455], "anoth": [14, 17, 18, 27, 31, 32, 39, 42, 92, 98, 111, 115, 117], "promis": 14, "sign": [14, 17, 38, 42, 92, 93, 188, 189, 192, 196, 202, 232, 237, 348, 364, 429, 430, 431, 433, 437, 442, 444], "pursuit": 14, "unif": [14, 16, 39, 449, 455], "clearli": [14, 19, 24], "lot": [14, 15, 29, 39, 54], "thought": [14, 17, 18, 35], "care": [14, 18, 42], "attent": [14, 18, 30, 31, 335, 346, 347, 467, 478], "gone": [14, 36], "simplifi": [14, 37, 38, 39, 41], "compat": [14, 35, 54, 111, 116, 188, 192, 196, 198, 200, 201, 202, 203, 207, 208, 213, 215, 219, 220, 225, 226, 228, 229, 232, 234, 236, 237, 244, 348, 359, 362, 365, 368, 370, 371, 377, 385, 424, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "excit": [14, 16, 21, 449], "complianc": 14, "hope": [14, 54], "due": [14, 17, 31, 34, 188, 232], "suit": [14, 17, 21, 25, 26, 40, 53], "some": [14, 15, 17, 18, 19, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 53, 54, 188, 211, 312, 313, 314, 316, 318, 319, 320, 325, 335, 343, 449, 467, 475], "motiv": [14, 39], "great": [14, 15, 26, 37, 39], "convinc": 14, "celebr": 14, "encourag": [14, 53, 54, 449, 455], "foundat": 14, "point": [15, 18, 23, 24, 30, 34, 35, 37, 39, 40, 53, 91, 92, 93, 95, 97, 99, 105, 109, 111, 114, 124, 129, 132, 188, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 210, 211, 212, 221, 222, 224, 225, 232, 236, 237, 238, 240, 241, 242, 245, 247, 348, 349, 351, 353, 354, 355, 359, 362, 363, 365, 366, 371, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445], "mai": [15, 17, 18, 31, 39, 41, 92, 93, 98, 141, 183, 188, 208, 215, 220, 227, 228, 248, 263, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441], "ask": [15, 18, 37, 39, 54, 449], "perfectli": 15, "happi": [15, 17, 54], "abund": 15, "better": [15, 21, 36, 39, 40, 41], "ll": [15, 16, 18, 24, 31, 34, 40], "give": [15, 17, 18, 21, 23, 24, 28, 35, 39, 377, 385], "two": [15, 23, 24, 26, 30, 31, 36, 40, 42, 92, 93, 97, 103, 107, 108, 111, 131, 136, 188, 202, 238, 248, 252, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 377, 390, 429, 430, 431, 432, 433, 449], "streamlin": 15, "workflow": [15, 40, 52, 449], "save": [15, 54, 248, 299, 327, 329, 479, 480], "week": [15, 19, 449], "let": [15, 23, 24, 31, 32, 33, 37, 39, 40, 41, 42, 437, 440, 443, 444, 445, 449], "sai": [15, 17, 29, 39], "deepmind": 15, "releas": [15, 17, 19, 449], "awesom": 15, "paper": 15, "love": 15, "choic": [15, 17, 34, 40, 437, 443, 445], "perceiverio": 15, "happen": [15, 17, 18, 40], "slew": 15, "rush": 15, "f": [15, 20, 21, 31, 37, 40, 42, 188, 214, 248, 279, 283, 327, 332], "g": [15, 21, 31, 54, 111, 113, 132, 141, 154, 417, 420, 421, 429, 430, 431, 433, 437, 439, 441, 442, 444], "inevit": 15, "deviat": [15, 415, 416, 417, 420, 437, 443, 481, 482], "origin": [15, 28, 29, 32, 37, 39, 188, 196, 348, 357, 377, 385, 386], "often": [15, 27, 54], "erron": 15, "train": [15, 27, 31, 33, 40, 41, 42, 52, 53, 54, 312, 313, 314, 318, 449], "poor": 15, "converg": 15, "perform": [15, 22, 24, 26, 27, 28, 30, 31, 33, 34, 35, 37, 40, 54, 81, 86, 92, 101, 102, 141, 248, 260, 264, 265, 266, 280, 281, 282, 312, 314, 316, 318, 319, 320, 327, 328, 331, 335, 343, 345, 348, 366, 393, 394, 395, 396, 397, 404, 405, 446, 447, 448], "issu": [15, 16, 19, 37, 39, 41, 54], "etc": [15, 17, 18, 19, 22, 24, 26, 30, 31, 32, 35, 37, 39, 40, 54, 92, 101, 102, 248, 270, 271, 291, 294, 295, 417, 418, 419, 421, 429, 430, 431, 433, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "publish": [15, 54], "manag": [15, 16, 34, 54, 141], "get": [15, 16, 17, 19, 21, 27, 32, 33, 34, 37, 38, 39, 40, 41, 111, 122, 123, 124, 127, 141, 148, 149, 157, 158, 171, 172, 177, 181, 184, 187, 248, 251, 272, 273, 274, 293, 449, 455, 467, 476], "work": [15, 17, 18, 19, 21, 26, 31, 32, 33, 36, 37, 38, 39, 41, 42, 449, 455], "repositori": [15, 17, 18, 20, 25], "pull": [15, 16, 17, 20, 22, 54], "request": [15, 16, 22], "confus": [15, 34], "do": [15, 17, 18, 19, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 54, 188, 237, 248, 282, 312, 317, 325, 397, 398, 407, 408, 409], "don": [15, 17, 18, 19, 32, 41, 54], "expect": [15, 54, 248, 251, 449], "codebas": [15, 16, 21, 22, 34, 36, 141, 180, 181, 449], "total": [15, 16, 18, 24, 26, 33, 40, 41, 54, 141, 184, 424, 427, 437, 443, 445], "hour": 15, "spent": 15, "spin": 15, "off": [15, 36, 348, 352, 369], "test": [15, 17, 19, 21, 24, 54, 111, 129, 130, 188, 216, 217, 218, 446, 447, 448], "error": [15, 17, 26, 30, 33, 35, 39, 54, 81, 82, 141, 188, 209, 437, 439, 441, 479, 480, 483, 487], "iter": [15, 31, 37, 40, 89, 90, 141, 160, 161, 163, 164, 165, 166, 169, 182, 248, 249, 295, 300, 377, 380, 384, 387, 391, 392, 397, 398, 399, 403, 407, 408, 409], "address": [15, 18, 19, 30, 37], "sake": 15, "singl": [15, 18, 22, 24, 26, 27, 29, 31, 34, 35, 37, 40, 41, 42, 54, 141, 148, 149, 167, 168, 169, 170, 248, 308, 311, 417, 420, 421, 429, 430], "multipl": [15, 18, 24, 27, 31, 54, 188, 192, 232, 248, 288, 348, 355, 377, 378, 386, 387, 415, 416, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 467, 477], "line": [15, 17, 18, 24, 30, 38, 39, 40, 41, 52, 449, 455], "convert": [15, 30, 37, 54, 55, 63, 92, 94, 104, 111, 112, 113, 141, 154, 155, 156, 157, 177, 184, 187, 248, 301, 307, 308, 327, 329, 334, 348, 372, 397, 399, 409, 410, 460], "directli": [15, 18, 22, 23, 27, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 53, 54, 397, 409], "graph": [15, 27, 31, 38, 54, 312, 314, 316, 318, 319, 320, 429, 430, 431, 433, 479, 480], "guarante": [15, 30, 54, 429, 430], "turn": [15, 24, 31], "4": [15, 20, 24, 28, 31, 37, 39, 40, 41, 42, 81, 83, 84, 86, 92, 100, 103, 106, 110, 141, 160, 176, 188, 192, 193, 196, 198, 203, 206, 212, 215, 230, 231, 233, 238, 245, 248, 253, 260, 269, 270, 306, 327, 329, 330, 331, 334, 335, 338, 339, 340, 342, 345, 347, 348, 350, 351, 352, 355, 359, 361, 368, 369, 373, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 449, 483, 484, 485, 486, 488], "step": [15, 17, 18, 20, 24, 28, 30, 31, 32, 33, 37, 40, 41, 42, 53, 92, 93, 101, 102, 141, 312, 313, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 483, 484, 485, 486, 487, 488], "take": [15, 16, 17, 18, 23, 24, 26, 31, 32, 33, 37, 39, 41, 42, 54, 188, 203, 327, 331, 449, 455], "few": [15, 18, 19, 27, 31, 32, 33, 34, 38, 39, 40, 41, 52, 449, 455], "second": [15, 17, 24, 34, 39, 111, 131, 136, 141, 169, 188, 192, 198, 200, 201, 202, 203, 208, 213, 215, 219, 220, 225, 226, 228, 229, 232, 234, 236, 244, 248, 252, 293, 298, 312, 313, 314, 318, 348, 350, 352, 353, 356, 361, 363, 366, 368, 370, 377, 389, 390, 393, 395, 429, 430, 431, 483, 484, 485], "automat": [15, 17, 18, 27, 31, 35, 36, 37, 38, 41, 42, 449], "convers": [15, 36, 38, 42, 53, 54, 449, 455], "everyon": [15, 16, 18, 54], "regardless": [15, 16, 39, 42, 89, 90], "wouldn": 15, "nice": [15, 26], "write": [15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34, 37, 39, 42, 81, 84, 141, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 257, 261, 268, 270, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 415, 416, 417, 419, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "onc": [15, 17, 18, 31, 32, 33, 37, 40, 54, 141, 182, 348, 355, 366, 417, 418], "know": [15, 429, 430, 431, 433], "among": [15, 26], "frantic": 15, "port": 15, "lucid": 15, "honk": 15, "improv": [15, 18, 27, 37], "understand": [15, 17, 18, 19, 20, 21, 23, 24, 25, 35, 36], "pattern": [15, 23, 32, 248, 264, 265, 266], "hasn": 15, "chang": [15, 17, 18, 19, 20, 23, 25, 26, 31, 37, 41, 54, 141, 348, 350, 377, 385, 397, 399, 409, 449, 455], "now": [15, 17, 20, 22, 29, 31, 32, 35, 39, 40, 42, 53, 54, 467, 478, 479, 480], "spend": 15, "torchvis": 15, "probabl": [15, 335, 343, 417, 418, 467, 475], "sonnet": 15, "about": [15, 17, 18, 25, 36, 37, 41, 42, 54, 111, 124, 127], "next": [15, 17, 18, 19, 20, 23, 24, 28, 29, 39, 40, 111, 124, 449, 479, 480, 483, 484, 485, 486, 487, 488], "everyth": [15, 18, 19, 38, 54], "zero": [15, 24, 32, 33, 35, 37, 40, 41, 81, 83, 84, 92, 95, 97, 103, 107, 108, 110, 111, 114, 188, 192, 193, 200, 206, 211, 212, 227, 228, 230, 231, 232, 233, 236, 237, 238, 245, 248, 260, 291, 294, 295, 312, 313, 314, 318, 319, 335, 343, 348, 351, 356, 359, 362, 370, 371, 377, 381, 382, 384, 386, 392, 415, 416, 417, 419, 424, 425, 426, 427, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 483, 484, 485, 486], "need": [15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 30, 31, 34, 37, 39, 40, 53, 54, 248, 256, 257, 377, 378, 381], "said": 15, "high": [15, 19, 40, 417, 419, 421], "level": [15, 16, 19, 27, 36, 37, 40, 41, 42, 54], "optim": [15, 34, 38, 40, 42, 53, 141, 312, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 484, 485, 486, 488], "trainer": [15, 52, 54, 449], "statu": 15, "quo": 15, "kera": 15, "dopamin": 15, "ignit": 15, "catalyst": 15, "lightn": 15, "fastai": 15, "haiku": [15, 42], "flax": [15, 42, 54], "trax": [15, 42], "objax": [15, 42], "idea": [15, 53], "fulli": [15, 30, 31, 35, 37, 38, 39, 40, 41, 42, 54, 467, 477, 478], "offer": [15, 41], "strongli": [16, 17, 449, 455], "welcom": [16, 17, 449, 455], "absolut": [16, 188, 189, 348, 364], "skill": 16, "whether": [16, 17, 32, 34, 35, 81, 82, 89, 90, 111, 114, 122, 128, 129, 130, 140, 141, 157, 158, 169, 173, 177, 178, 182, 185, 187, 188, 218, 248, 249, 252, 253, 260, 263, 267, 269, 275, 277, 279, 282, 283, 284, 285, 286, 287, 288, 300, 304, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 335, 343, 348, 353, 393, 394, 395, 396, 397, 398, 399, 403, 407, 408, 409, 410, 417, 418, 446, 447, 448, 459, 460, 467, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "vetern": 16, "beginn": 16, "start": [16, 17, 18, 19, 20, 21, 23, 24, 32, 36, 37, 39, 40, 41, 53, 54, 92, 93, 101, 102, 141, 153], "aspect": [16, 40, 327, 333, 449], "guid": [16, 17, 18, 26, 449], "through": [16, 18, 19, 21, 24, 27, 28, 31, 36, 37, 39, 40, 41, 42, 53, 188, 196], "journei": [16, 449, 455], "inclusvi": 16, "big": [16, 54], "team": [16, 17, 18], "board": 16, "contributor": [16, 17, 18, 36, 449], "split": [16, 18, 36, 37, 54, 141, 148, 163, 164, 165, 166, 180, 181, 182, 248, 288, 377, 449], "section": [16, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 429, 430, 431, 433], "below": [16, 17, 19, 20, 21, 22, 24, 27, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 53, 92, 103, 107, 108, 188, 198, 203, 206, 238, 348, 351, 352, 369, 377, 381, 382, 429, 430, 431, 434, 435, 449], "best": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 248, 288], "go": [16, 17, 18, 19, 21, 22, 24, 31, 36, 40, 54, 397, 408], "finish": [16, 17, 21, 449], "dive": [16, 18, 19, 36, 39, 40, 54, 449], "right": [16, 17, 18, 21, 24, 40, 188, 200, 202, 348, 366], "environ": [16, 18, 20, 53], "basic": [16, 19, 20], "fork": [16, 17, 248, 289], "doc": [16, 19, 23, 35, 37, 40, 41, 449], "document": [16, 18, 38, 40, 42], "local": [16, 17, 20, 27], "task": [16, 18, 53, 393, 394, 395, 396, 449], "help": [16, 17, 24, 28, 30, 31, 39, 40, 41, 52, 248, 250, 437, 444, 449], "video": [16, 18, 23, 24, 35], "realli": [17, 31, 54], "contribut": [17, 18, 19, 37, 455], "toward": [17, 37, 377, 386, 449, 455], "page": [17, 18, 38, 42, 52, 449, 455], "explain": [17, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 449, 455], "main": [17, 20, 29, 31, 92, 97, 107, 108, 348, 352, 369], "prefer": [17, 31], "mode": [17, 24, 31, 54, 89, 90, 141, 167, 168, 169, 170, 182, 188, 192, 232, 348, 363], "git": [17, 18], "recurs": [17, 20, 27, 31, 41, 54, 397, 398, 399, 407, 408, 409], "submodul": [17, 18, 19, 20, 25, 26, 27, 33, 36, 37, 41, 449, 481, 482, 489, 490], "com": 17, "unifyai": [17, 18, 20], "http": [17, 23, 188, 193, 203, 206, 212, 312, 313, 314, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "gh": 17, "your_fold": 17, "id": [17, 30, 31, 141, 157, 479, 480], "cours": [17, 18, 24, 40, 54], "whatev": [17, 54], "integr": [17, 26, 111, 114], "familiar": [17, 19], "decid": [17, 397, 408], "sure": [17, 19, 25], "elig": 17, "free": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 53, 449], "student": 17, "licenc": 17, "peopl": [17, 18, 21], "seem": [17, 41, 54], "miss": [17, 24, 26, 30, 31, 483, 487], "add": [17, 18, 19, 21, 22, 23, 27, 28, 30, 31, 35, 37, 39, 54, 70, 77, 188, 415, 416, 449, 455, 481, 482], "explicit": [17, 20, 31, 32, 34, 37, 54], "remind": 17, "channel": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 248, 269, 327, 329, 330, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "pace": 17, "updat": [17, 18, 19, 20, 21, 24, 25, 29, 30, 31, 32, 35, 37, 39, 40, 42, 54, 141, 148, 248, 282, 294, 295, 312, 313, 314, 316, 318, 319, 320, 335, 345, 393, 394, 395, 397, 404, 405, 413, 414, 459, 460, 483, 484, 485, 486, 487, 488], "suggest": [17, 18, 22], "latest": [17, 19, 20, 23, 54, 188, 193, 203, 206, 212, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439, 467, 476], "packag": [17, 20, 54], "ensur": [17, 18, 26, 30, 32, 35, 248, 282], "align": [17, 37, 39, 449, 455], "accord": [17, 20, 27, 32, 111, 117, 124, 188, 192, 202, 232, 248, 270, 294, 295, 348, 370, 377, 380, 392, 437, 443, 445], "stabl": [17, 37, 54, 248, 273, 274, 296, 297, 302, 303, 434, 435, 436], "pypi": [17, 19, 54], "mayb": [17, 37, 39], "person": [17, 18], "experi": [17, 38, 40, 54], "avoid": [17, 18, 26, 28, 29, 31, 39, 141, 188, 211], "pip": [17, 53, 449], "instal": [17, 20, 53, 449], "abil": [17, 38, 54], "certain": [17, 54, 92, 93, 101, 102], "perhap": [17, 39, 40, 41, 54], "keep": [17, 18, 25, 31, 38, 40, 42, 248, 310], "track": [17, 18, 141, 397, 409, 479, 480], "termin": [17, 18, 20, 31, 37, 40], "run": [17, 20, 25, 26, 28, 35, 37, 38, 39, 40, 41, 42, 53, 54, 141, 148, 312, 313, 314, 318, 393, 394, 395, 396, 467, 478, 479, 480], "command": [17, 18, 20, 449], "ivy_dev": [17, 18, 20], "name": [17, 18, 20, 23, 26, 37, 39, 40, 42, 74, 75, 89, 90, 248, 250, 348, 353, 363, 366, 429, 430, 431], "3": [17, 20, 24, 28, 31, 37, 39, 40, 41, 42, 81, 83, 84, 85, 86, 91, 92, 100, 103, 106, 109, 110, 141, 157, 160, 176, 183, 188, 192, 193, 198, 202, 203, 206, 210, 212, 214, 215, 219, 230, 231, 233, 238, 245, 248, 252, 253, 260, 267, 270, 300, 306, 308, 327, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 359, 361, 366, 368, 369, 372, 373, 374, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 390, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 444, 446, 447, 449], "8": [17, 20, 24, 31, 36, 40, 81, 85, 141, 160, 188, 192, 198, 206, 215, 230, 231, 238, 248, 253, 270, 327, 330, 335, 342, 348, 350, 351, 352, 361, 368, 373, 374, 377, 378, 382, 384, 387, 417, 418, 419, 424, 428, 429, 430, 437, 438, 449, 467, 478], "activ": [17, 18, 20, 22, 41, 82, 83, 84, 85, 86, 87, 88, 449, 457, 458], "setup": 17, "click": [17, 23, 449], "icon": 17, "side": [17, 18], "choos": [17, 18, 42, 141, 183, 188, 227, 228, 424, 428, 429, 430, 431, 433, 437, 439, 440, 441], "left": [17, 24, 32, 188, 200, 348, 353, 357, 366, 424, 425, 449], "panel": 17, "select": [17, 18, 26, 37, 39, 42, 54], "drop": [17, 54], "down": [17, 39], "path": [17, 20], "manual": [17, 18, 26, 41, 397, 398, 407, 408], "builtin": [17, 20, 39, 41], "requir": [17, 20, 22, 23, 24, 26, 29, 30, 32, 33, 35, 39, 54, 89, 90, 188, 242, 348, 353, 377, 389, 459, 460], "cmd": [17, 20], "directori": [17, 18, 20, 248, 299], "folder": [17, 18, 20, 22, 25, 26, 27], "file": [17, 18, 20, 22, 23, 27, 28, 30, 31, 37, 40, 248, 299, 479, 480], "abov": [17, 20, 23, 24, 27, 28, 30, 31, 34, 35, 39, 40, 41, 42, 92, 103, 107, 108, 188, 192, 193, 198, 203, 206, 212, 232, 238, 245, 248, 270, 335, 338, 347, 348, 351, 352, 353, 369, 377, 381, 382, 386, 415, 416, 417, 419, 429, 430, 431, 434, 435, 437, 439, 442, 443, 444], "m": [17, 18, 20, 21, 37, 92, 103, 107, 108, 248, 253, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 369, 417, 420, 421], "python3": [17, 20], "script": [17, 18, 20, 24, 37, 54], "bat": [17, 18, 20], "OR": [17, 18, 20, 188, 201, 228, 446, 448], "bin": [17, 18, 20], "mac": [17, 18, 20], "linux": [17, 18, 20], "virtualenv": 17, "found": [17, 18, 23, 30, 31, 141, 172], "o": [17, 37, 248, 253], "note": [17, 18, 22, 23, 24, 31, 188, 237, 348, 353, 366, 377, 389, 429, 431, 437, 440], "tick": [17, 18], "abl": [17, 18, 27, 32, 34, 39, 42], "To": [17, 18, 24, 27, 31, 40, 41, 42, 449], "ivy_test": [17, 18], "test_array_api": [17, 18, 25, 26], "cd": [17, 18, 20], "r": [17, 248, 253, 310, 348, 363, 372], "txt": 17, "visual": [17, 54], "jetbrain": 17, "remot": 17, "mitig": 17, "potenti": [17, 36, 188, 211], "conflict": [17, 18, 40], "addit": [17, 18, 22, 23, 26, 31, 32, 39, 40, 42, 141, 183, 188, 192, 248, 264, 265, 266, 415, 416, 467, 477], "yet": [17, 19, 31], "particular": [17, 22, 34, 188, 189], "system": [17, 54, 348, 365], "instruct": [17, 19], "desktop": 17, "wsl": 17, "powershel": 17, "admin": 17, "visit": 17, "link": 17, "imag": [17, 20, 22, 37, 38, 40, 42, 53, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 449], "profession": 17, "execut": [17, 20, 31, 34, 37, 39, 42, 54, 248, 309], "deploy": 17, "top": [17, 18, 26, 40, 41, 449], "press": [17, 40, 449], "ok": 17, "correctli": [17, 26, 31, 32, 35, 41, 54, 348, 357, 424, 425], "caus": [17, 18, 24, 26, 31, 34, 54], "earlier": [17, 18], "might": [17, 18, 22, 26, 29, 37, 39, 40, 248, 263], "necessari": [17, 24, 28, 31, 34], "virtualis": 17, "detail": [17, 18, 19, 22, 25, 26, 27, 28, 29, 31, 35, 40, 41, 92, 98, 429, 430, 431, 433], "sudo": 17, "apt": 17, "ca": 17, "certif": 17, "curl": 17, "gnupg": 17, "lsb": 17, "mkdir": 17, "p": [17, 18, 92, 103, 248, 256, 257, 335, 343, 348, 357, 371, 467, 475], "keyr": 17, "fssl": 17, "download": [17, 26], "gpg": 17, "dearmor": 17, "echo": 17, "deb": 17, "arch": 17, "dpkg": 17, "architectur": [17, 42, 54], "lsb_releas": 17, "tee": 17, "list": [17, 19, 20, 22, 24, 32, 33, 35, 37, 40, 41, 42, 54, 92, 93, 94, 95, 103, 104, 105, 109, 111, 115, 141, 148, 149, 157, 159, 160, 163, 164, 167, 168, 182, 248, 253, 301, 306, 310, 327, 333, 335, 336, 337, 338, 339, 340, 341, 342, 348, 368, 377, 379, 382, 387, 389, 397, 398, 399, 403, 408, 409, 415, 416, 424, 427, 446, 447, 448, 449, 467, 468, 469, 470, 471, 472, 473, 474], "dev": [17, 27, 33, 37, 39, 41, 141, 148, 172], "null": 17, "ce": 17, "cli": 17, "containerd": 17, "io": 17, "compos": [17, 31, 54], "plugin": 17, "systemctl": 17, "permiss": 17, "relat": [17, 18, 53, 141], "post": [17, 42, 415, 416, 449, 455], "It": [17, 18, 20, 21, 22, 23, 24, 28, 30, 31, 34, 37, 39, 40, 41, 81, 84, 141, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 257, 268, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 424, 425, 434, 435, 436, 446, 447, 448], "headach": 17, "arm": 17, "m1": 17, "instead": [17, 18, 19, 23, 24, 26, 27, 31, 34, 35, 37, 39, 40, 54], "featur": [17, 22, 35, 40, 449], "vm": 17, "azur": 17, "cloud": [17, 53], "mean": [17, 18, 21, 24, 27, 31, 32, 33, 34, 37, 39, 40, 41, 42, 53, 54, 141, 167, 168, 169, 170, 182, 248, 265, 393, 394, 395, 396, 397, 403, 417, 420, 429, 430, 437, 449, 461], "configur": [17, 18, 20, 32, 141, 181, 397, 410], "defin": [17, 19, 22, 23, 32, 35, 39, 41, 54, 188, 232, 237, 248, 291, 348, 350, 353, 365, 417, 419, 437, 439, 440, 441], "dockerfil": [17, 20], "longer": [17, 32, 34], "worri": 17, "platform": 17, "agnost": [17, 30, 35, 37, 39, 42, 54, 449], "usual": 17, "studio": 17, "favourit": 17, "extens": [17, 18, 23, 92, 103, 188, 192, 193, 198, 203, 206, 212, 238, 245, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439], "theme": 17, "too": [17, 18, 54, 188, 192, 232], "done": [17, 18, 24, 26, 40], "unsupport": [17, 32, 111, 125, 126], "old": [17, 34], "slow": 17, "ipad": 17, "long": [17, 18, 24, 335, 345], "browser": [17, 18], "cool": [17, 22], "requisit": 17, "head": [17, 31, 335, 346, 449, 467, 478], "pane": [17, 18], "readi": [17, 19], "begin": [17, 397, 398, 408], "outlin": [17, 18, 19, 21, 23, 26, 27, 31, 34, 39], "green": [17, 18, 492, 493], "dropdown": 17, "tab": [17, 40, 449], "master": [17, 18, 31], "v": [17, 37, 40, 41, 42, 335, 347, 449, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 487, 489, 490], "view": [17, 92, 98, 335, 338, 342], "log": [17, 27, 31, 34, 37, 40, 92, 102, 188, 223, 225, 348, 364, 449], "built": [17, 38, 92, 93, 141, 467, 478, 479, 480], "bottom": 17, "box": 17, "patient": 17, "upto": 17, "15": [17, 24, 188, 198, 238, 335, 338, 348, 352, 361, 368, 377, 384, 386, 417, 419, 424, 427, 429, 430, 437, 438], "minut": 17, "launch": 17, "12": [17, 24, 31, 188, 198, 203, 206, 238, 248, 260, 274, 348, 352, 361, 368, 377, 382, 384, 386, 415, 416, 417, 419, 424, 428, 429, 430, 437, 438], "output": [17, 21, 22, 23, 24, 26, 27, 30, 31, 33, 34, 35, 37, 39, 41, 42, 54, 81, 84, 92, 93, 95, 96, 97, 99, 100, 103, 105, 106, 109, 110, 141, 148, 149, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 255, 257, 261, 268, 270, 312, 315, 335, 337, 339, 341, 343, 345, 346, 347, 348, 369, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 391, 397, 410, 415, 416, 417, 419, 420, 421, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478], "That": [17, 18, 39, 40, 41, 188, 237], "alreadi": [17, 18, 28, 31, 35, 39, 54, 141, 188, 204, 212, 232, 238, 247, 348, 361, 449], "refer": [17, 18, 26, 27, 32, 35, 54, 92, 97, 188, 211, 223, 312, 313, 314, 348, 370, 372, 437, 443, 445, 446, 447, 448, 467, 477], "approach": [17, 18, 26, 27, 31, 39, 40, 54], "colour": 17, "applic": [17, 32, 33, 41, 335, 346, 347, 397, 403, 409], "good": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41], "chanc": 17, "vscode": 17, "show": [17, 24, 34, 53, 54, 449], "explor": [17, 38, 42, 53], "troubleshoot": 17, "sometim": [17, 18], "ever": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "64": [17, 40, 41, 335, 341, 342, 348, 361, 437, 438, 449, 467, 478], "bit": [17, 24, 27, 30, 31, 39, 111, 123, 124, 127, 188, 199, 200, 202, 327, 329, 334, 437, 442, 444], "usr": 17, "more": [17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 92, 93, 111, 115, 188, 211, 348, 356, 377, 382, 429, 430, 431, 433, 449], "nutshel": [17, 35], "hook": 17, "lint": 17, "accept": [17, 18, 23, 24, 26, 27, 30, 31, 33, 34, 35, 39, 92, 103, 188, 192, 193, 198, 203, 206, 212, 227, 228, 237, 238, 245, 248, 270, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439, 440, 449], "fix": [17, 18], "fail": [17, 19, 25, 26, 37, 39], "attempt": [17, 54], "succe": 17, "problemat": 17, "appli": [17, 18, 19, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 52, 54, 81, 82, 83, 84, 85, 86, 87, 88, 111, 132, 248, 264, 265, 266, 312, 318, 319, 335, 344, 346, 347, 348, 359, 362, 373, 374, 375, 376, 377, 389, 393, 394, 395, 397, 403, 406, 409, 410, 415, 416, 449, 456, 457, 458, 481, 482], "proce": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "modifi": [17, 23, 27, 32, 33, 37], "properli": [17, 21], "enter": [17, 18, 30, 32, 33, 35, 141], "unsur": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "feel": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 449], "server": [18, 449], "appropri": [18, 29, 188, 192, 232, 424, 425], "context": [18, 24, 31, 32, 33, 141, 248, 289, 335, 346, 467, 478], "suitabl": [18, 22, 31], "quick": [18, 21, 41], "alwai": [18, 19, 22, 23, 27, 28, 30, 31, 34, 35, 37, 39, 54, 111, 114, 188, 192, 232, 248, 282, 312, 317, 322], "correct": [18, 19, 21, 27, 31, 32, 33, 35, 111, 136, 377, 378, 437, 443, 445, 449], "tendenc": 18, "gener": [18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 53, 54, 89, 92, 93, 101, 102, 188, 193, 203, 206, 212, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 377, 381, 386, 417, 418, 419, 421, 422, 429, 430, 431, 434, 435, 437, 439, 449, 483, 487], "land": 18, "end": [18, 31, 34, 36, 53, 54, 92, 93, 188, 196, 449, 455], "world": 18, "come": [18, 19, 41, 52, 449, 455], "fly": 18, "hard": [18, 39], "receiv": [18, 26, 32, 33, 141, 148, 149, 248, 251, 288, 467, 477], "respons": [18, 20], "internship": 18, "comment": 18, "trigger": 18, "unansw": 18, "label": [18, 37, 38, 42, 373, 374, 375, 376], "respond": 18, "remov": [18, 19, 20, 23, 26, 27, 32, 34, 42, 348, 352, 356, 369, 377, 388, 393, 394, 395], "someon": [18, 54], "els": [18, 19, 22, 27, 28, 34, 37, 39, 41, 42, 54, 248, 254, 263, 267, 397, 407], "strive": [18, 54], "repli": 18, "newli": [18, 34, 89, 90, 111, 114, 248, 255], "place": [18, 21, 22, 23, 24, 26, 27, 31, 33, 35, 42, 92, 93, 94, 95, 96, 97, 99, 100, 104, 105, 106, 109, 110, 141, 183, 188, 192, 193, 198, 203, 206, 212, 238, 245, 248, 270, 280, 281, 282, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439, 483, 484, 485, 486, 487, 488], "bug": [18, 26], "serv": [18, 26, 27, 30, 31, 35, 36, 449], "suspect": 18, "behaviour": [18, 23, 26, 30, 31, 34, 35, 39], "observ": 18, "confid": 18, "noth": 18, "wrong": 18, "someth": [18, 22, 40, 41, 54], "bet": 18, "act": [18, 24, 54], "placehold": [18, 30, 35, 397, 409], "sub": [18, 19, 21, 26, 31, 39, 40, 41, 141, 163, 164, 167, 168, 169, 170, 348, 352, 377, 387, 393, 394, 395, 396, 449], "mark": [18, 26], "ii": [18, 437, 438], "iii": 18, "titl": [18, 449], "issue_numb": 18, "delet": [18, 20], "No": [18, 37], "wait": 18, "progress": [18, 31, 38, 42], "pr": 18, "soon": [18, 31, 52, 54, 449, 455], "partial": [18, 479, 480], "solut": [18, 26, 31, 348, 365], "review": [18, 22], "merg": 18, "everi": [18, 19, 20, 24, 25, 26, 27, 28, 29, 31, 34, 35, 37, 39, 41, 92, 99, 100, 248, 249], "shape": [18, 22, 23, 24, 32, 33, 34, 35, 37, 39, 40, 41, 42, 81, 84, 92, 95, 96, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 141, 150, 178, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 257, 268, 271, 275, 291, 294, 295, 301, 327, 330, 332, 333, 335, 337, 338, 339, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 417, 419, 420, 421, 424, 425, 427, 434, 435, 436, 437, 438, 446, 447, 448, 449, 467, 469, 470, 471, 472, 473, 474, 481, 482], "move": [18, 22, 141, 183], "within": [18, 26, 41, 54, 92, 93, 417, 421], "7": [18, 20, 24, 27, 31, 34, 81, 83, 84, 141, 160, 188, 192, 198, 199, 203, 206, 210, 212, 215, 230, 231, 238, 245, 248, 253, 260, 270, 312, 313, 314, 318, 327, 330, 334, 335, 341, 342, 347, 348, 350, 351, 352, 361, 368, 373, 374, 375, 376, 377, 378, 381, 382, 384, 387, 390, 415, 416, 417, 418, 419, 420, 421, 424, 428, 429, 430, 437, 438, 439], "dai": 18, "close": [18, 23, 188, 211, 238, 327, 333, 348, 366], "likewis": [18, 23, 27, 31, 32, 35, 40], "freed": 18, "flag": [18, 34, 39, 141, 157, 312, 317], "purpos": [18, 20, 24, 26, 27, 29, 30, 31, 35, 36, 39, 188, 211, 449], "remain": [18, 24, 54, 188, 192, 232, 237, 377, 385, 397, 403], "access": [18, 20, 32], "who": [18, 21, 36, 54], "short": [18, 41, 335, 345], "basi": [18, 25, 40], "situat": [18, 42], "alloc": [18, 54, 92, 107, 108, 111, 114, 141], "upon": [18, 24, 26, 34, 54], "period": 18, "prevent": [18, 34, 39, 312, 313, 314, 318, 437, 444, 483, 484, 485], "unabl": 18, "obvious": 18, "never": [18, 31], "reflect": [18, 30], "qualiti": 18, "hypothet": 18, "frustrat": 18, "delai": 18, "busi": 18, "fine": [18, 39, 42], "becaus": [18, 23, 26, 27, 28, 30, 32, 33, 34, 35, 37, 41, 42, 54], "inact": 18, "limit": [18, 24, 26, 37, 40, 42, 54, 111, 124, 127, 248, 256, 257, 377, 378], "me": 18, "unfairli": 18, "definit": [18, 27, 32, 39, 348, 349, 350], "investig": 18, "Then": [18, 20, 39, 54], "practic": [18, 26], "separ": [18, 26, 30, 37, 39, 40], "branch": [18, 31, 54, 89, 90, 188, 196], "simpli": [18, 23, 24, 26, 27, 30, 31, 33, 34, 35, 37, 41, 42, 188, 211], "role": [18, 38], "kept": [18, 34, 393, 394, 395], "date": 18, "upstream": [18, 25], "complic": [18, 37], "root": [18, 20, 40, 188, 242, 417, 418, 420, 421], "merge_with_upstream": 18, "sh": 18, "name_of_your_branch": 18, "resolv": [18, 437, 442, 444], "clone": [18, 20, 141, 159, 160, 161, 162], "push": [18, 25], "both": [18, 23, 24, 27, 31, 33, 34, 35, 37, 39, 40, 41, 42, 53, 54, 111, 131, 188, 192, 193, 212, 236, 245, 248, 270, 335, 338, 347, 348, 350, 356, 370, 377, 386, 415, 416, 437, 439], "abort": 18, "tediou": 18, "resolut": 18, "stash": 18, "reinstat": 18, "correspond": [18, 23, 24, 25, 27, 30, 31, 32, 35, 111, 115, 188, 196, 236, 348, 350, 353, 365, 377, 379, 386, 417, 418, 424, 425, 426, 429, 430, 431, 433, 437, 442, 443, 444, 445], "fetch": 18, "uncommit": 18, "unstag": 18, "untrack": 18, "comprehens": 18, "explan": [18, 23, 31, 35, 39], "atlassian": 18, "tutori": 18, "quit": [18, 19, 23, 27, 29, 30], "repeat": [18, 23, 24, 28, 30, 31, 248, 266, 377, 391], "yourself": [18, 19, 53], "simpler": [18, 39], "cannot": [18, 28, 32, 42], "least": [18, 24, 27, 30, 348, 356], "final": [18, 23, 24, 27, 30, 32, 34, 37, 39, 40, 92, 101, 102, 248, 269, 467, 478], "tickbox": 18, "lower": [18, 24, 37, 54, 92, 97, 107, 188, 230, 348, 349, 417, 421], "corner": 18, "without": [18, 22, 27, 30, 31, 33, 35, 37, 39, 40, 41, 53, 54, 248, 293, 298, 377, 385, 397, 399, 429, 430, 431, 433], "span": 18, "intent": [18, 34], "larg": [18, 40, 188, 192, 232], "discourag": 18, "philosophi": 18, "increment": [18, 248, 281], "frequent": [18, 19], "valuabl": 18, "infrequ": 18, "earli": [18, 449], "wast": 18, "spot": [18, 27], "mistak": 18, "propos": 18, "mountain": 18, "around": [18, 27, 30, 35, 39, 54], "advoc": [18, 54], "individu": [18, 19, 27], "per": [18, 40, 141, 335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "style": [18, 424, 427], "ve": [18, 36, 39, 417, 418, 449], "were": [18, 22, 26, 31], "actual": [18, 21, 27, 34, 36, 39, 41, 54], "aim": [18, 36], "part": [18, 22, 25, 26, 27, 37, 38, 42, 53, 54, 92, 107, 108, 312, 314, 316, 318, 319, 320, 479, 480], "subsect": 18, "filepath": 18, "interact": [18, 449], "session": [18, 449], "block": [18, 27, 36, 38, 42, 54, 141, 449], "smaller": [18, 37, 42, 377, 378, 386, 437, 442, 444], "edit": 18, "exact": [18, 37, 429, 430], "beauti": 18, "histori": 18, "particularli": [18, 40, 54], "concern": [18, 21, 24, 31, 34, 36], "effici": [18, 26, 27, 31, 34, 35, 37, 40, 54], "difficult": [18, 26, 54, 429, 430, 431, 433], "undo": 18, "stress": 18, "frequenc": [18, 248, 269], "pycharm": 18, "pytest": [18, 26], "button": 18, "declar": 18, "insid": [18, 20, 22, 32], "rm": 18, "entrypoint": 18, "bash": [18, 20], "test_ivi": [18, 26], "test_funct": 18, "test_cor": 18, "test_imag": 18, "test_random_crop": 18, "header": 18, "summari": [18, 111, 119, 120, 121, 133, 134, 135, 141, 151, 152, 248, 258, 262, 276, 312, 321, 326], "q": [18, 54, 335, 347, 348, 353, 363], "array_api_test": 18, "test_creation_funct": 18, "test_arang": 18, "window": [18, 20, 327, 333, 335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "wherebi": [19, 31, 397, 409], "broad": 19, "distribut": [19, 33, 54, 141, 159, 163, 164, 165, 166, 335, 343, 373, 374, 375, 376, 417, 418, 419, 420, 421, 467, 475, 479, 480], "across": [19, 24, 26, 27, 31, 32, 35, 141, 148, 149, 159, 160, 162, 163, 164, 165, 166, 170, 180, 181, 248, 252, 253, 397, 403, 424, 426], "todo": [19, 26], "commit": [19, 26], "NOT": [19, 188, 227], "static": [19, 23, 24, 27, 54, 89, 90], "method": [19, 22, 23, 24, 26, 27, 30, 35, 37, 38, 41, 42, 54, 81, 83, 84, 85, 86, 87, 88, 92, 98, 103, 188, 193, 198, 203, 206, 212, 215, 230, 231, 233, 238, 248, 258, 259, 270, 294, 295, 306, 308, 312, 318, 319, 335, 341, 347, 348, 350, 351, 373, 374, 376, 377, 381, 382, 384, 387, 390, 397, 398, 408, 409, 410, 415, 416, 417, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 449, 467, 478, 479, 480], "instanc": [19, 23, 24, 26, 27, 30, 32, 34, 35, 40, 41, 42, 55, 63, 81, 83, 84, 85, 86, 87, 88, 92, 103, 141, 148, 179, 188, 192, 193, 198, 203, 206, 212, 215, 230, 231, 233, 238, 245, 248, 259, 270, 282, 306, 308, 335, 338, 341, 347, 348, 350, 351, 373, 374, 376, 377, 381, 382, 384, 386, 387, 390, 415, 416, 417, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 459, 460], "revers": [19, 23, 24, 42, 54, 248, 263, 377, 382], "resourc": 19, "content": [19, 20, 34, 37, 40], "thei": [19, 21, 22, 24, 27, 29, 31, 32, 33, 34, 39, 40, 41, 42, 54, 111, 131, 393, 394, 395, 417, 418, 449, 489, 490], "hypothesi": 19, "cover": [19, 23, 24, 27, 29, 36], "lambda": [19, 37, 40, 483, 486, 488], "direct": [19, 41, 42, 53, 434, 436], "bind": [19, 31], "def": [19, 22, 24, 27, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 449], "special": [19, 22, 23, 24, 30, 35, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204, 205, 206, 210, 211, 212, 221, 222, 224, 225, 232, 236, 237, 238, 239, 240, 241, 242, 245, 247, 437, 439, 440, 441, 443, 444, 445], "aforement": 19, "categori": [19, 22, 30, 31, 32, 36, 449], "parent": [19, 39], "arraywithelementwis": [19, 30], "containerwithmanipul": 19, "hint": [19, 22, 23, 27, 30, 34, 35, 92, 103, 188, 192, 193, 198, 203, 206, 212, 238, 245, 248, 270, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "its": [19, 20, 23, 111, 115, 141, 182, 348, 356, 377, 381, 385, 386, 390], "docstr": [19, 20, 21, 22, 27, 31, 35, 92, 103, 188, 192, 193, 198, 203, 206, 212, 238, 245, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439], "thorough": [19, 23, 26, 35], "transpil": [19, 36, 38, 449, 455], "builder": [20, 52, 54, 449], "maco": 20, "ubuntu": 20, "uid": 20, "make_docs_without_dock": 20, "rel": [20, 312, 314, 316, 318, 319, 320, 348, 352, 359, 362, 369, 377, 382, 386, 434, 435, 436, 449], "synchron": 20, "rest": [20, 38, 42], "remove_doc": 20, "_": [20, 23, 34, 39, 40, 188, 193, 203, 206, 212, 312, 313, 314, 348, 372, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "indic": [20, 38, 42, 81, 86, 188, 239, 248, 270, 271, 278, 291, 294, 295, 335, 336, 337, 338, 339, 340, 341, 342, 348, 371, 377, 386, 397, 398, 400, 402, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 427, 429, 430, 432, 434, 435, 436, 449, 452, 454, 467, 468, 469, 470, 471, 472, 473, 474, 479, 480], "privat": [20, 483, 487], "fulfil": [20, 36, 449], "autogenerated_sourc": 20, "format": [20, 23, 32, 33, 37, 39, 40, 111, 122, 141, 158, 437, 438, 449], "png": [20, 40], "_imag": 20, "lastli": 20, "structur": [20, 22, 27, 30, 31, 40, 41, 248, 258, 397, 410], "rst": 20, "skip": [20, 26, 397, 410], "read": [20, 449], "partial_sourc": 20, "conf": 20, "copi": [20, 23, 28, 32, 37, 39, 40, 53, 54, 92, 94, 98, 111, 114, 141, 183, 248, 259, 307, 308, 377, 385, 397, 399, 434, 436], "5": [20, 24, 28, 35, 39, 40, 41, 81, 83, 84, 86, 92, 100, 103, 106, 109, 110, 141, 160, 176, 181, 188, 192, 193, 197, 198, 202, 203, 206, 212, 215, 230, 231, 233, 238, 245, 248, 253, 260, 270, 306, 327, 330, 331, 335, 338, 340, 341, 347, 348, 349, 350, 351, 352, 355, 361, 368, 369, 373, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 415, 416, 417, 418, 419, 423, 424, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 446, 447, 467, 478], "create_rst_fil": 20, "filter": [20, 335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "repres": [20, 39, 92, 103, 111, 123, 188, 191, 192, 194, 197, 206, 232, 241, 335, 344, 348, 364, 365], "overal": [20, 23, 31, 32, 33, 42], "markup": 20, "6": [20, 24, 28, 31, 39, 40, 41, 81, 83, 84, 86, 92, 100, 141, 160, 176, 188, 192, 193, 198, 199, 203, 206, 212, 215, 230, 231, 233, 238, 245, 248, 253, 260, 270, 306, 327, 330, 335, 338, 341, 342, 347, 348, 350, 351, 352, 361, 366, 368, 373, 374, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 415, 416, 417, 418, 419, 424, 425, 428, 429, 430, 431, 437, 438, 439], "extract": [20, 22], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 54], "module_nam": 20, "copy_readme_to_rst": 20, "tabl": 20, "toc": 20, "tree": 20, "append": [20, 26, 37, 40, 188, 200, 348, 352, 356], "append_toctree_to_rst": 20, "9": [20, 24, 40, 41, 188, 192, 198, 199, 230, 231, 238, 248, 270, 312, 313, 314, 318, 335, 338, 341, 342, 348, 350, 351, 352, 361, 366, 368, 377, 378, 382, 386, 387, 417, 418, 419, 424, 428, 429, 430, 437, 438, 483, 484, 485], "index": [20, 27, 31, 39, 91, 92, 97, 103, 248, 250, 270, 271, 377, 389, 397, 400, 401, 404, 405, 406, 411, 413, 424, 425, 426, 427, 429, 430, 431, 434, 435, 452, 454], "create_index_rst": 20, "14": [20, 24, 31, 188, 203, 335, 347, 348, 352, 361, 377, 384, 429, 430, 437, 438], "\u03c0": [20, 188, 190, 193, 195, 196], "namespac": [20, 22, 32, 37, 42], "mainli": [21, 38, 40], "target": [21, 36, 40, 41, 42, 141, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 449], "under": [21, 23, 24, 25, 26, 27, 31, 36, 37, 40, 42], "hood": [21, 24, 26, 27, 31, 36, 37, 40, 42], "weed": [21, 36], "behind": [21, 36, 38, 312, 314, 316, 318, 319, 320], "navig": 21, "tour": 21, "primari": [21, 26, 28, 34, 54], "composit": [21, 26, 28, 30, 31, 34, 37, 41, 42, 54], "mix": [21, 24, 26, 37, 111, 132, 141, 176, 188, 198, 203, 215, 230, 231, 248, 259, 267, 270, 306, 307, 308, 335, 338, 341, 342, 347, 348, 368, 373, 374, 376, 377, 378, 415, 416, 424, 428, 437, 438, 440], "nestabl": [21, 23, 24, 26, 34, 188, 192, 193, 212, 245, 248, 270, 335, 338, 347, 377, 386, 415, 416, 437, 439], "wrap": [21, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 42, 54, 55, 63, 248, 255, 312, 325], "dynam": [21, 32, 33, 34, 37, 89, 90], "runtim": [21, 26, 141], "handl": [21, 26, 27, 29, 31, 32, 33, 34, 35, 41, 54, 89, 90, 141, 154, 155, 156, 157, 158, 172, 176, 177, 184, 187, 312, 314, 316, 318, 319, 320, 483, 484, 485, 486, 487, 488], "h": [21, 31, 327, 328, 329, 330, 332, 334, 335, 338, 339, 340, 341, 342], "inplac": [21, 24, 29, 30, 35, 39, 41, 248, 254, 279, 282, 283, 304, 312, 314, 316, 318, 319, 320, 459, 460, 483, 484, 485, 486, 487, 488], "j": [21, 248, 252, 253, 348, 369, 437, 438], "k": [21, 37, 70, 71, 72, 92, 97, 107, 108, 248, 252, 335, 347, 348, 356, 363, 365, 366, 367, 369, 417, 420, 421, 424, 427], "l": [21, 348, 349, 353, 356, 369], "borrow": 21, "n": [21, 92, 103, 107, 108, 248, 253, 335, 343, 348, 352, 356, 358, 359, 360, 361, 362, 363, 366, 367, 369, 370, 371, 372, 377, 380, 381, 383, 389, 392, 417, 420, 421, 424, 427, 437, 440, 443, 444, 445, 446, 447, 448], "taken": [22, 42, 348, 352], "constant": [22, 27, 41, 42, 54, 141, 148, 149, 377, 380, 397, 403, 415, 416, 461, 464, 466, 479, 480, 481, 482], "creation": [22, 32, 33, 37, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "data_typ": [22, 32, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "elementwis": [22, 27, 37, 42, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "linear_algebra": [22, 39, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "sort": [22, 348, 353, 366, 367, 435], "statist": [22, 32, 438, 439, 440, 441, 442, 443, 444, 445], "util": [22, 33, 141, 171, 447, 448], "compil": [22, 31, 36, 38, 54, 449, 479, 480, 483, 484, 485, 486, 487, 488], "gradient": [22, 31, 40, 41, 53, 54, 141, 182, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 393, 394, 395, 396, 449, 483, 484, 485, 486, 487, 488], "loss": [22, 27, 40, 41, 42, 374, 375, 376, 449], "meta": [22, 394, 395, 396], "nest": [22, 27, 31, 39, 40, 41, 54, 141, 162, 166, 170, 248, 306, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 479, 480, 483, 484, 485, 486, 487, 488], "norm": [22, 248, 256, 257, 348, 357, 371, 416, 449, 482, 483, 485], "random": [22, 33, 42, 53, 418, 419, 420, 421, 422, 423, 449], "overlap": 22, "sever": [22, 54, 348, 355], "judgement": 22, "locat": [22, 26, 28, 33, 417, 418], "matmul": [22, 28, 37, 348, 366, 449], "some_namespac": 22, "some_backend": 22, "another_backend": 22, "break": [22, 35, 39, 54, 449], "anyth": [22, 449], "refactor": 22, "ongo": 22, "subfold": [22, 26], "via": [22, 31, 32, 33, 34, 37, 39, 40, 53, 397, 398, 407, 408], "file_nam": 22, "my_func": [22, 24], "union": [22, 24, 27, 30, 31, 32, 33, 34, 35, 37, 42, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 171, 177, 179, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 256, 257, 260, 261, 264, 265, 266, 268, 269, 270, 271, 275, 277, 278, 282, 291, 294, 295, 300, 301, 306, 307, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 324, 327, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 399, 408, 409, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448], "nativearrai": [22, 24, 27, 30, 31, 34, 35, 37, 39, 42, 55, 63, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 114, 115, 116, 122, 124, 127, 129, 130, 132, 136, 141, 157, 158, 160, 176, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 256, 257, 259, 260, 261, 264, 265, 266, 268, 269, 270, 271, 275, 277, 278, 282, 291, 294, 295, 300, 306, 307, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 324, 327, 331, 333, 334, 335, 336, 338, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 399, 409, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448], "ax": [22, 24, 32, 39, 141, 182, 248, 260, 348, 357, 365, 368, 371, 377, 380, 382, 383, 386, 388, 390, 392, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "int": [22, 24, 27, 31, 32, 33, 34, 35, 42, 81, 86, 89, 90, 92, 95, 97, 99, 100, 101, 102, 105, 107, 108, 109, 111, 116, 121, 123, 124, 127, 130, 141, 160, 163, 164, 165, 166, 174, 175, 176, 182, 183, 188, 198, 199, 200, 201, 202, 203, 248, 250, 260, 261, 264, 265, 266, 269, 270, 275, 291, 294, 295, 300, 301, 310, 312, 313, 314, 318, 327, 331, 333, 335, 336, 338, 340, 341, 342, 348, 350, 352, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 397, 409, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 434, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448], "tupl": [22, 31, 32, 33, 35, 39, 40, 41, 54, 89, 90, 92, 94, 95, 99, 104, 105, 109, 111, 116, 126, 141, 157, 248, 269, 301, 327, 333, 335, 338, 341, 342, 348, 359, 362, 366, 368, 371, 377, 379, 380, 382, 383, 386, 388, 389, 392, 397, 399, 400, 402, 404, 405, 406, 408, 409, 411, 412, 413, 414, 417, 420, 421, 424, 427, 429, 430, 431, 432, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "dtype": [22, 24, 27, 32, 33, 39, 70, 71, 72, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 172, 178, 188, 193, 202, 206, 233, 238, 248, 252, 253, 291, 327, 330, 335, 343, 377, 381, 415, 416, 417, 421, 424, 425, 426, 434, 436, 437, 442, 443, 444, 446, 447, 449, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 489, 490], "nativedtyp": [22, 32, 33, 35, 92, 93, 94, 95, 96, 97, 99, 100, 104, 105, 106, 109, 110, 111, 113, 114, 120, 121, 122, 131, 437, 444], "nativedevic": [22, 32, 33, 35, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 141, 155, 156, 157, 171, 177, 179, 181, 183, 184, 187, 248, 270, 271, 291, 294, 295, 417, 418, 419, 420, 421], "my": 22, "nan": [22, 23, 91, 111, 114, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 205, 206, 210, 211, 212, 216, 218, 221, 222, 224, 225, 232, 236, 237, 238, 240, 241, 242, 245, 247, 248, 277, 311, 429, 430, 431, 433, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448], "y": [22, 24, 28, 31, 37, 39, 81, 83, 84, 85, 86, 87, 88, 92, 99, 100, 103, 105, 106, 110, 111, 114, 141, 158, 172, 176, 181, 188, 192, 193, 196, 198, 199, 202, 203, 204, 205, 206, 210, 212, 215, 230, 231, 233, 238, 245, 248, 252, 253, 259, 260, 267, 268, 270, 306, 307, 308, 312, 315, 327, 331, 334, 335, 341, 342, 344, 348, 349, 350, 351, 355, 361, 368, 369, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 434, 435, 437, 438, 439, 443, 444, 446, 447], "input": [22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 54, 55, 63, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 98, 100, 103, 104, 106, 107, 108, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 136, 141, 148, 149, 157, 158, 159, 160, 162, 163, 166, 170, 176, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 275, 277, 278, 280, 281, 282, 284, 285, 286, 287, 300, 301, 304, 306, 307, 308, 310, 311, 312, 315, 317, 322, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482], "numer": [22, 41, 92, 103, 111, 114, 188, 189, 192, 204, 207, 211, 212, 213, 216, 217, 218, 219, 227, 228, 232, 233, 234, 236, 237, 239, 244, 247, 248, 273, 274, 296, 297, 302, 303, 348, 350, 356, 361, 366, 368, 369, 370, 417, 423, 424, 425, 426, 437, 439, 442, 444, 461], "along": [22, 34, 92, 101, 102, 141, 163, 164, 165, 166, 167, 168, 169, 170, 182, 248, 260, 261, 270, 310, 327, 331, 348, 357, 369, 370, 371, 373, 375, 376, 377, 379, 382, 384, 386, 387, 389, 391, 393, 394, 395, 396, 417, 423, 424, 425, 426, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "result": [22, 23, 24, 26, 30, 31, 32, 34, 35, 40, 54, 81, 84, 92, 93, 111, 132, 141, 148, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 257, 261, 268, 270, 294, 295, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 352, 357, 366, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 397, 410, 415, 416, 417, 419, 424, 425, 426, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "broadcast": [22, 23, 24, 31, 32, 81, 84, 111, 115, 116, 141, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 257, 268, 348, 356, 357, 359, 362, 365, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 417, 419, 424, 425, 426, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "cooler": 22, "keyword": [22, 32, 33, 34, 35, 40, 92, 103, 141, 148, 149, 162, 166, 170, 248, 251, 288, 397, 403, 437, 444, 479, 480], "produc": [22, 141, 148, 149, 335, 347], "something_cool": 22, "category_nam": [23, 27, 32, 33, 35], "contrast": [23, 35], "backend_nam": [23, 27, 28, 29, 32, 33, 35], "account": 23, "instanti": 23, "tan": [23, 27, 31, 34, 35, 37, 67, 70, 74, 77, 188, 193, 429, 430, 431, 434, 435, 449], "firstli": [23, 24, 27, 30, 32, 34, 40], "templat": [23, 449], "spec": [23, 24], "api_specif": [23, 188, 193, 203, 206, 212, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "array_api": 23, "raw": 23, "preview": 23, "newlin": 23, "render": 23, "incorrectli": 23, "onlin": [23, 449], "approxim": [23, 81, 82, 188, 190, 191, 193, 194, 195, 196, 205, 206, 210, 211, 221, 222, 223, 224, 236, 240, 241, 245, 348, 359, 362], "tangent": [23, 81, 88, 188, 195, 196, 197, 245, 246], "domain": [23, 188, 190, 191, 193, 194, 195, 196, 205, 206, 210, 211, 221, 222, 224, 240, 241, 242, 245], "infin": [23, 91, 111, 114, 188, 189, 191, 192, 194, 195, 196, 204, 205, 206, 210, 211, 212, 213, 216, 217, 221, 222, 224, 225, 232, 236, 237, 238, 240, 241, 242, 245, 247, 348, 371, 437, 439, 441, 446, 447, 448], "codomain": [23, 188, 190, 191, 193, 194, 195, 196, 205, 206, 210, 211, 221, 222, 224, 240, 241, 242, 245], "element": [23, 37, 42, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 99, 100, 107, 108, 141, 161, 165, 169, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 256, 257, 260, 261, 268, 278, 307, 308, 335, 343, 348, 350, 353, 356, 363, 366, 377, 378, 382, 384, 386, 387, 388, 417, 418, 424, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 467, 475], "x_i": [23, 188, 189, 190, 191, 193, 194, 195, 199, 204, 205, 206, 210, 211, 212, 216, 217, 218, 221, 222, 224, 227, 233, 238, 239, 240, 241, 242, 243, 245, 247, 429, 430, 431, 433, 437, 439, 440, 441, 443, 444, 445], "assum": [23, 28, 32, 39, 40, 54, 92, 103, 188, 192, 193, 198, 203, 205, 206, 212, 238, 240, 245, 248, 270, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "express": [23, 37, 42, 188, 190, 193, 195, 196, 205, 240, 245], "radian": [23, 188, 190, 193, 195, 196, 205, 240, 245], "float": [23, 27, 31, 32, 34, 35, 39, 41, 81, 83, 91, 92, 93, 95, 97, 99, 100, 101, 102, 105, 109, 111, 114, 120, 124, 129, 132, 141, 171, 177, 181, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 224, 225, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 247, 248, 256, 257, 269, 273, 274, 296, 297, 302, 303, 312, 313, 314, 316, 318, 319, 320, 327, 329, 334, 335, 338, 342, 347, 348, 349, 351, 353, 354, 355, 359, 362, 363, 365, 366, 371, 373, 374, 375, 376, 415, 416, 417, 420, 421, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445], "operand": [23, 188, 190, 191, 192, 193, 194, 195, 196, 203, 204, 205, 206, 210, 211, 212, 221, 222, 224, 225, 232, 236, 237, 238, 240, 241, 242, 245, 247, 437, 438, 439, 441, 444], "whose": [23, 92, 107, 108, 188, 191, 194, 197, 205, 206, 236, 240, 241, 245, 248, 255, 348, 349, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 365, 366, 367, 369, 377, 382, 386, 429, 430, 431, 437, 438], "ref": [23, 188, 202, 219, 232, 234, 237, 244, 377, 389], "promot": [23, 27, 32, 111, 114, 117, 131, 132, 136, 188, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 205, 206, 207, 210, 211, 221, 222, 224, 225, 229, 232, 236, 237, 240, 241, 242, 245, 348, 349, 350, 355, 356, 359, 361, 362, 365, 370, 371, 377, 389, 437, 440], "But": [23, 31, 42], "needless": 23, "duplic": [23, 28, 29, 39, 41], "info": [23, 449], "subset": [23, 26, 35, 37], "extend": [23, 26, 28, 35], "renam": 23, "conform": [23, 92, 103, 188, 192, 193, 198, 203, 206, 211, 212, 238, 245, 348, 351, 377, 381, 382, 386, 429, 430, 431, 434, 435, 437, 439], "org": [23, 188, 193, 203, 206, 212, 312, 313, 314, 377, 381, 386, 429, 430, 431, 434, 435, 437, 439], "elementwise_funct": [23, 188, 193, 203, 206, 212, 377, 386, 429, 430, 431, 434, 435, 437, 439], "descript": [23, 31, 92, 103, 188, 192, 193, 198, 203, 206, 212, 238, 245, 248, 270, 335, 338, 347, 348, 351, 371, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "simplic": [23, 41, 53, 92, 103, 188, 192, 193, 198, 203, 206, 212, 238, 245, 248, 270, 335, 338, 347, 348, 351, 377, 381, 382, 386, 415, 416, 429, 430, 431, 434, 435, 437, 439], "judgment": 23, "beyond": [23, 377, 386], "text": 23, "variant": [23, 24], "func_nam": [23, 24, 27], "minim": [23, 34, 37], "except": [23, 34, 39, 54, 111, 116, 248, 254, 263, 282, 309, 348, 362, 377, 379, 389, 424, 427, 446, 447, 448], "pure": [23, 39, 42, 54], "themselv": [23, 27, 31, 32, 33, 41, 397, 398], "operator_nam": 23, "leav": [23, 24, 26, 27, 31, 32, 34, 35, 40, 41, 377, 389, 397, 398, 399, 407, 408, 409], "static_add": [23, 24, 31], "succinct": 23, "__add__": [23, 24, 30, 31, 35, 39], "__radd__": [23, 24], "variou": [23, 29, 35, 53], "contstructor": 23, "linear": [23, 37, 40, 41, 42, 81, 82, 83, 84, 248, 269, 327, 331, 335, 343, 365, 449, 467, 468, 469, 470, 471, 472, 473, 474], "variabl": [23, 28, 31, 32, 34, 35, 40, 41, 42, 54, 248, 254, 280, 281, 282, 283, 284, 285, 287, 304, 312, 314, 315, 316, 317, 318, 319, 320, 322, 325, 335, 346, 348, 365, 393, 394, 395, 396, 415, 416, 449, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "store": [23, 28, 30, 31, 37, 39, 40, 41, 248, 269, 312, 325, 348, 369, 377, 387, 479, 480], "intern": [23, 30, 31, 33, 34, 141, 312, 325, 397, 398, 407, 408, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 489, 490], "though": [23, 27, 32, 40, 54], "forward": [23, 42, 53, 54, 479, 480, 483, 487], "_forward": [23, 37, 40, 41, 449], "former": 23, "trainabl": [23, 38, 40, 41, 312, 317, 459, 460, 479, 480, 489], "explicitli": [23, 27, 28, 30, 31, 34, 37, 54, 348, 353, 467, 476, 478, 479, 480], "latter": [23, 28], "implicit": [23, 31, 37], "attribut": [23, 31, 32, 38, 39, 40, 41, 111, 124, 125, 126, 127, 141, 178], "docst": 23, "after": [24, 31, 32, 36, 111, 136, 188, 242, 312, 314, 315, 316, 318, 319, 320, 327, 328, 331, 415, 416, 483, 484, 485, 486, 487, 488], "eight": 24, "static_": 24, "__": [24, 40], "op_nam": 24, "__r": 24, "four": [24, 27, 32, 35, 40], "subtract": [24, 30, 188], "multipli": [24, 28, 30, 188, 248, 260], "divid": [24, 30, 188, 213, 248, 302, 377, 387], "__sub__": [24, 30, 31, 35, 39], "__mul__": [24, 30, 31, 35, 39], "__truediv__": [24, 30, 31], "respect": [24, 30, 31, 32, 35, 92, 103, 188, 189, 192, 196, 198, 200, 201, 202, 203, 207, 208, 213, 214, 215, 219, 220, 225, 226, 228, 229, 232, 234, 237, 244, 312, 313, 314, 315, 316, 318, 319, 320, 348, 363, 393, 394, 395, 396], "recap": [24, 31, 41], "independ": [24, 25, 29, 31, 37, 42, 348, 350, 365, 417, 418], "combinatorili": 24, "equal": [24, 31, 32, 92, 97, 99, 100, 111, 114, 188, 200, 202, 216, 217, 236, 238, 248, 249, 252, 253, 348, 352, 359, 362, 377, 378, 380, 387, 392, 417, 421, 429, 430, 431, 433, 434, 435, 436, 437, 440, 443, 444, 445], "maximum": [24, 37, 40, 42, 141, 162, 166, 170, 182, 188, 248, 256, 257, 269, 312, 318, 377, 378, 397, 409, 424, 425, 437, 439, 441, 449], "variat": [24, 26], "grid": [24, 26, 53, 92, 103], "vari": [24, 26, 31, 39, 429, 430, 431, 433], "valu": [24, 26, 27, 31, 32, 33, 34, 35, 37, 39, 42, 54, 92, 93, 97, 99, 100, 101, 102, 111, 114, 119, 120, 121, 141, 150, 181, 182, 188, 189, 190, 192, 193, 195, 204, 208, 209, 212, 213, 214, 215, 219, 220, 230, 231, 232, 234, 235, 236, 238, 247, 248, 256, 257, 258, 263, 269, 270, 271, 276, 279, 283, 293, 294, 295, 296, 297, 298, 311, 312, 313, 314, 315, 318, 322, 326, 327, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 359, 362, 363, 364, 365, 366, 367, 371, 377, 378, 380, 384, 385, 392, 393, 394, 395, 397, 401, 402, 403, 404, 405, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 487], "simplest": 24, "small": [24, 27, 37, 41, 54, 188, 232, 348, 359, 362, 415, 416, 481, 482], "dimens": [24, 37, 40, 81, 86, 92, 107, 108, 141, 169, 248, 264, 265, 266, 269, 275, 291, 310, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 365, 366, 367, 369, 370, 371, 373, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 396, 417, 423, 424, 425, 426, 427, 429, 430, 431, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478], "unus": [24, 34, 89, 90], "highlight": 24, "extra": [24, 29, 30, 37, 312, 315], "18": [24, 31, 188, 203, 348, 352, 361, 437, 438], "excess": [24, 28, 39], "properti": [24, 26, 27, 31, 39, 40, 41, 141, 150, 479, 480, 483, 484, 485, 486, 488], "showcas": [24, 53], "demonstr": [24, 39], "replic": [24, 32], "meant": 24, "imaginari": 24, "std": [24, 417, 420, 429, 430, 437], "prod": [24, 32, 248, 265, 437], "var": [24, 37, 393, 394, 395, 437], "some_flag": 24, "bool": [24, 31, 32, 34, 42, 89, 90, 92, 99, 111, 114, 117, 119, 120, 121, 122, 125, 128, 129, 130, 140, 141, 157, 158, 173, 182, 185, 188, 198, 199, 201, 203, 208, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 234, 248, 249, 252, 253, 260, 263, 267, 269, 275, 277, 282, 284, 285, 286, 287, 300, 310, 311, 312, 322, 348, 349, 357, 366, 371, 377, 387, 397, 398, 399, 403, 407, 408, 409, 417, 418, 424, 425, 426, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "another_flag": 24, "true": [24, 26, 27, 31, 32, 34, 37, 39, 40, 41, 42, 70, 71, 72, 81, 82, 89, 90, 92, 101, 111, 114, 117, 141, 157, 178, 188, 198, 214, 215, 216, 217, 218, 219, 227, 228, 248, 249, 252, 253, 254, 255, 260, 267, 269, 277, 278, 285, 300, 306, 308, 311, 312, 314, 316, 317, 318, 319, 320, 322, 335, 343, 348, 349, 357, 366, 371, 373, 374, 375, 376, 377, 387, 393, 394, 395, 396, 397, 398, 407, 408, 410, 417, 418, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 467, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "axi": [24, 27, 31, 32, 34, 35, 37, 39, 42, 53, 81, 86, 92, 101, 102, 141, 142, 145, 150, 163, 164, 165, 166, 167, 168, 169, 170, 182, 248, 260, 261, 270, 310, 327, 331, 348, 350, 352, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 417, 423, 424, 425, 426, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "54": [24, 188, 205, 335, 347, 348, 361, 417, 420, 437, 438], "jointli": 24, "three": [24, 31, 36, 92, 103, 449], "x0": [24, 248, 252], "x1": [24, 35, 70, 71, 111, 136, 141, 176, 188, 192, 196, 198, 200, 201, 202, 203, 207, 208, 213, 214, 215, 219, 220, 225, 226, 228, 229, 230, 231, 232, 234, 236, 237, 244, 248, 252, 335, 340, 348, 350, 356, 361, 365, 368, 370, 424, 428], "x2": [24, 35, 70, 71, 111, 136, 141, 176, 188, 192, 196, 198, 200, 201, 202, 203, 207, 208, 213, 214, 215, 219, 220, 225, 226, 228, 229, 230, 231, 232, 234, 236, 237, 244, 335, 340, 348, 350, 356, 361, 365, 368, 370, 424, 428], "combin": [24, 26, 27, 30, 31, 42, 327, 333, 348, 350], "procedur": 24, "think": 24, "sens": [24, 31, 39], "5574077": 24, "1850398": 24, "5463025": 24, "8422884": 24, "91601413": 24, "9647598": 24, "3738229": 24, "1597457": 24, "0963247": 24, "9955841": 24, "3278579": 24, "multi": [24, 31, 36, 54, 335, 346, 348, 350, 449, 455, 467, 478], "seper": [24, 248, 269], "pars": [24, 54], "satisfi": [24, 348, 372], "ignor": [24, 54, 92, 103, 397, 408, 483, 487], "far": [24, 33, 38, 39, 397, 398, 408], "asid": [24, 53], "irrelev": [24, 32], "increasingli": 24, "complex": [24, 40, 41, 42, 54, 348, 353, 366], "shown": [24, 35, 37, 39, 54, 92, 103, 188, 198, 203, 206, 238, 348, 351, 377, 381, 382, 429, 430, 431, 434, 435], "rule": [24, 26, 27, 30, 31, 32, 111, 114, 117, 132, 188, 197, 202, 207, 232, 237, 348, 349, 350, 361, 365], "count": [24, 40, 141, 176, 348, 370, 377, 382, 429, 430, 431, 446, 447, 448], "14254655": 24, "1578213": 24, "380515": 24, "static_tan": [24, 31], "56": [24, 188, 245, 348, 361, 437, 438], "19": [24, 188, 203, 245, 348, 352, 377, 384], "143": [24, 188, 245], "16": [24, 40, 188, 245, 335, 341, 348, 352, 361, 415, 416, 424, 428, 437, 438], "38": [24, 188, 245], "11": [24, 31, 188, 192, 198, 238, 248, 260, 270, 348, 352, 361, 377, 382, 384, 417, 419, 424, 428, 429, 430, 437, 438], "13": [24, 31, 188, 198, 203, 206, 248, 260, 335, 342, 347, 348, 352, 361, 377, 384, 415, 416, 424, 428, 429, 430, 437, 438], "17": [24, 31, 81, 83, 348, 352, 417, 420], "shift": [24, 35, 188, 200, 202, 377, 386], "sequenc": [24, 32, 53, 141, 148, 149, 248, 253, 288, 327, 333, 377, 387, 389, 417, 419, 437, 439, 467, 476, 481, 482, 489, 490], "trivial": 24, "By": [24, 27, 31, 34, 41, 42, 248, 260, 261, 348, 370, 377, 384, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "non": [24, 31, 32, 37, 89, 90, 111, 114, 128, 188, 227, 228, 335, 338, 348, 351, 359, 366, 368, 370, 371, 424, 425, 426, 427, 437, 439, 440, 441, 442, 445, 446, 447, 448, 479, 480, 483, 487], "static_rol": [24, 31], "float32": [24, 32, 111, 112, 113, 125, 188, 193, 206, 233, 238, 327, 330, 377, 381, 415, 416], "z": [24, 28, 31, 37, 39, 141, 172, 188, 192, 198, 203, 215, 230, 231, 248, 252, 253, 270, 348, 350, 373, 374, 375, 377, 378, 424, 425, 437, 438, 439], "dictat": [24, 30, 34, 35], "exlud": 24, "unit": [25, 26, 54, 81, 82, 83, 84, 141], "thoroughli": [25, 26], "ci": [25, 26, 54], "failur": 25, "On": [26, 38, 42], "map": [26, 27, 31, 35, 40, 53, 54, 141, 148, 397, 404, 405, 409, 410, 467, 478], "collect": [26, 53, 81, 89, 141, 248, 312, 327, 335, 373, 397, 410, 415, 417, 456, 467, 481, 483], "fixtur": 26, "ones": [26, 37, 39, 40, 92, 97, 106, 248, 291, 327, 333, 449], "consum": [26, 31, 35, 141], "300": [26, 188, 238], "ab": [26, 29, 188, 236, 348, 371, 449], "hit": [26, 37], "permit": [26, 30, 35], "action": 26, "eleg": 26, "intellig": 26, "sampl": [26, 327, 328, 331, 335, 343, 417, 418, 420, 421, 437, 443, 445, 467, 475], "rang": [26, 40, 41, 42, 92, 93, 101, 102, 429, 430, 437, 442, 444, 449], "previou": [26, 35, 42, 54, 312, 314, 318], "cach": [26, 27, 141, 156, 248, 255], "unexplor": 26, "known": 26, "repeatedli": [26, 31, 397, 406], "upload": 26, "artifact": 26, "parametr": 26, "strategi": 26, "statement": [26, 54], "plai": [26, 42], "helper": [26, 40], "arbitrari": [26, 27, 31, 34, 35, 41, 54, 92, 103, 111, 115, 132, 141, 167, 168, 170], "verifi": [26, 32, 33, 39, 449, 455], "truth": [26, 188, 208, 214, 215, 219, 220, 234], "opt": [26, 28, 34, 39], "defer": [26, 27, 30, 31, 32, 33, 34], "well": [26, 34, 41, 42, 53, 248, 277, 348, 365], "suffic": [26, 29], "catch": [26, 248, 263], "systemat": 26, "compar": [26, 40, 248, 249, 252, 253, 429, 430, 431, 433, 434, 435, 436], "safeguard": 26, "inabl": 26, "fact": [26, 40], "num_gpu": [26, 33, 141], "categor": [27, 33], "mutual": [27, 31], "exclus": [27, 31, 42, 92, 93, 248, 260, 284, 285, 287, 312, 317, 417, 419], "constitut": [27, 37, 437, 443, 445], "venn": 27, "diagram": 27, "lowest": [27, 54, 397, 409, 417, 419], "light": [27, 54], "wherea": [27, 30, 32, 33, 35, 42], "hand": [27, 54], "cross_entropi": [27, 31, 34, 373, 376], "pred": [27, 31, 34, 373, 374, 375, 376], "epsilon": [27, 31, 34, 41, 312, 313, 314, 318, 348, 359, 362, 373, 374, 375, 376, 415, 416, 481, 482, 483, 484, 485], "1e": [27, 31, 34, 41, 42, 248, 274, 312, 313, 314, 318, 348, 366, 373, 374, 375, 376, 415, 416, 449, 483, 484, 485, 486, 488], "clip": [27, 31, 34, 37, 40, 42, 188, 230, 231, 248, 256, 257, 377, 449], "log_pr": [27, 31, 34], "neg": [27, 31, 34, 81, 83, 92, 93, 97, 188, 216, 217, 232, 236, 237, 348, 366, 370, 371, 377, 382, 386, 446, 447, 448], "sum": [27, 31, 32, 34, 37, 141, 167, 168, 169, 170, 182, 188, 192, 225, 248, 261, 265, 294, 295, 335, 347, 348, 366, 369, 371, 437, 438, 443], "array_arg": 27, "typic": 27, "whatsoev": [27, 31], "commonli": [27, 437, 443, 445], "outsid": [27, 33, 37, 39, 42, 377, 378, 389], "cache_fn": [27, 248], "stable_divid": [27, 248], "denomin": [27, 54, 248, 268, 274, 297, 302, 303, 415, 416, 481, 482], "divis": [27, 188, 202, 207, 213, 237, 248, 268, 274, 297, 302, 303, 312, 313, 314, 318, 483, 484, 485], "leaf": [27, 31, 40, 397, 398, 407, 408], "piec": [27, 29, 30, 37], "deal": [27, 54], "batch": [27, 31, 40, 141, 180, 181, 248, 269, 327, 332, 335, 344, 348, 371, 393, 394, 395, 396, 415, 416, 481, 482], "concurr": [27, 31], "weight": [27, 31, 41, 42, 312, 313, 314, 316, 318, 319, 320, 335, 344, 345, 347, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 483, 485, 486], "modif": 27, "_wrap_funct": [27, 29], "dure": [27, 31, 32, 33, 34, 54, 89, 90, 141, 183, 248, 309, 312, 313, 314, 318, 348, 356, 393, 394, 395, 396, 437, 443, 445, 479, 480, 483, 484, 485, 487], "handle_nest": [27, 31, 55], "decor": [27, 29, 31, 32, 33, 34], "group": [27, 31, 327, 333], "briefli": [27, 40], "can_cast": [27, 32, 111], "cast": [27, 32, 70, 71, 72, 111, 114, 117, 327, 329, 334, 377, 379, 437, 442, 444, 449], "set_default_dtyp": [27, 32, 111], "default_dtyp": [27, 32, 111], "get_all_arrays_on_dev": 27, "nested_map": [27, 397], "index_nest": [27, 397], "implicit_backend": 28, "overwritten": [28, 30], "unless": [28, 33, 34, 54, 188, 232, 248, 291], "__dict__": [28, 37, 39], "ivy_original_dict": [28, 37], "string": [28, 32, 33, 37, 40, 111, 112, 113, 122, 128, 140, 141, 154, 155, 156, 157, 171, 177, 183, 184, 187, 248, 262], "unmodifi": [28, 32], "loop": [28, 54, 393, 394, 395, 396], "moment": [28, 54, 312, 313, 314, 318, 483, 484, 485], "fallback": 28, "freedom": [28, 437, 443, 445], "recommend": [28, 188, 227, 228, 237, 437, 440], "achiev": [29, 40, 42], "to_native_arrays_and_back": [29, 35, 55], "handle_out_argu": [29, 32, 33, 34, 35, 55], "wrapper": [29, 30, 31, 32, 34, 35, 39], "logic": [29, 30, 32, 33, 39, 188, 226, 227, 228, 446, 447, 448, 449], "topic": [29, 39], "tf": [30, 32, 33, 34, 35, 37, 42, 54, 449], "empti": [30, 32, 33, 92, 93, 437, 443, 444, 446, 447, 448], "self": [30, 37, 39, 40, 41, 42, 141, 449, 483, 487], "_data": [30, 39], "organiz": [30, 31], "inherit": [30, 31, 39], "underpin": [30, 31, 37], "programmat": [30, 31], "backup": [30, 31], "accident": [30, 31], "readabl": [30, 31, 35, 39, 40], "absent": [30, 31], "perk": [30, 31], "auto": [30, 31, 40], "__setitem__": [30, 31, 39], "sin": [30, 37, 188, 248, 269, 449], "throw": [30, 39], "imposs": 30, "chain": [30, 31, 41, 42, 54, 393, 394, 395, 397, 410, 489, 490], "inputs_to_native_arrai": [30, 55], "outputs_to_ivy_arrai": [30, 32, 33, 35, 55], "coupl": [30, 31, 39, 41], "anywai": 30, "secondli": [30, 32], "easier": 30, "five": [31, 40], "all_tru": [31, 40], "evalu": [31, 188, 210, 211, 221, 222, 223, 224, 233, 239, 243, 397, 398, 407, 408, 446, 447, 448], "boolean": [31, 92, 99, 111, 114, 128, 140, 141, 173, 185, 188, 198, 199, 201, 203, 226, 227, 228, 229, 248, 249, 252, 253, 277, 278, 279, 283, 284, 285, 286, 287, 304, 311, 312, 317, 393, 394, 395, 397, 407, 437, 441], "to_iter": 31, "travers": [31, 37, 39, 397, 409], "containerbas": 31, "decis": [31, 37, 39], "multi_map": 31, "diff": [31, 40], "displai": [31, 40], "common_key_chain": 31, "arbitrarili": [31, 40], "multi_map_in_static_method": 31, "roll": [31, 35, 377], "containerwithelementwis": 31, "__repr__": 31, "control": [31, 32, 34, 39, 40, 53], "__getattr__": 31, "kei": [31, 40, 141, 150, 248, 250, 258, 335, 346, 347, 393, 394, 395, 397, 400, 406, 410, 459, 460, 467, 478, 483, 487], "underli": [31, 188, 198, 201, 203, 229], "queri": [31, 32, 39, 141, 171, 181, 335, 346, 347, 467, 478], "__setattr__": 31, "__getitem__": 31, "__contains__": 31, "__getstate__": 31, "__setstate__": 31, "pickl": [31, 40], "unpickl": 31, "static_subtract": 31, "static_multipli": 31, "static_divid": 31, "expand": [31, 248, 269, 377, 381], "children": 31, "shallowest": 31, "deepest": 31, "67": [31, 188, 203], "integ": [31, 32, 39, 92, 93, 99, 111, 127, 130, 132, 188, 189, 198, 199, 200, 201, 202, 203, 204, 212, 213, 229, 236, 237, 238, 247, 348, 358, 370, 371, 377, 387, 417, 419, 422, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "22": [31, 188, 203, 348, 352, 361, 424, 428, 437, 438], "25": [31, 348, 352, 355, 373, 375, 415, 416, 437, 438], "execute_with_gradi": [31, 40, 41, 42, 54, 312, 449], "multi_head_attent": [31, 34, 335], "func": [31, 89, 90, 141, 182, 248, 255, 312, 315, 397, 410], "callabl": [31, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 89, 90, 111, 125, 126, 141, 182, 248, 250, 255, 263, 265, 393, 394, 395, 396, 397, 403, 407, 408, 409], "retain_grad": [31, 312, 315], "dy": [31, 312, 315, 327, 330], "dx": [31, 312, 315, 327, 330], "technic": [31, 34, 35, 54], "autograd": [31, 54], "grad": [31, 40, 41, 42, 449, 483, 487], "redund": 31, "scale": [31, 141, 180, 181, 312, 319, 335, 343, 346, 347, 415, 416, 467, 475, 478, 483, 486], "num_head": [31, 335, 346, 467, 478], "mask": [31, 335, 346, 347], "to_q_fn": [31, 335, 346], "to_kv_fn": [31, 335, 346], "to_out_fn": [31, 34, 335, 346], "to_q_v": [31, 335, 346], "to_kv_v": [31, 335, 346], "to_out_v": [31, 335, 346], "measur": [31, 335, 346, 467, 478], "dot": [31, 335, 346, 347, 348, 368, 370, 467, 478], "product": [31, 188, 232, 248, 260, 335, 346, 347, 348, 350, 356, 361, 368, 370, 437, 438, 442, 467, 478], "implicitli": 31, "intuit": [31, 40, 41], "debug": [31, 40], "chronolog": 31, "had": [31, 34], "sequenti": [31, 41], "flow": [31, 53], "implic": 31, "slightli": [31, 37, 41], "eager": [31, 54], "int8": [32, 111, 125], "int16": [32, 111, 125, 437, 442, 444], "int32": [32, 111, 125, 141, 172, 437, 442, 444], "int64": [32, 111, 125, 188, 202, 424, 425, 426, 437, 442, 444], "uint8": [32, 111, 125, 327, 329, 334], "uint16": [32, 111, 126, 437, 442, 444], "uint32": [32, 111, 126, 437, 442, 444], "uint64": [32, 111, 126, 437, 442, 444], "bfloat16": [32, 111, 125], "float16": [32, 111, 126], "float64": [32, 111, 114, 125], "deriv": [32, 33, 39, 41, 92, 96, 100, 106, 110, 312, 313, 314, 316, 318, 319, 320, 397, 399, 409, 479, 483, 487, 489], "constructor": [32, 33, 39, 248, 251, 489, 490], "all_dtyp": 32, "all_numeric_dtyp": 32, "all_int_dtyp": 32, "all_float_dtyp": 32, "fall": [32, 36, 449, 479, 480, 483, 487], "valid": [32, 37, 111, 118, 335, 336, 337, 338, 339, 340, 341, 342, 377, 389, 446, 447, 448, 467, 468, 469, 470, 471, 472, 473, 474], "invalid": [32, 348, 370, 446, 447, 448], "thirdli": 32, "native_float32": 32, "importantli": [32, 39, 42, 53], "varieti": [32, 33], "astyp": [32, 34, 111], "broadcast_to": [32, 111], "result_typ": [32, 111], "conveni": [32, 33, 35, 38, 40, 41], "arguabl": [32, 33], "compound": 32, "reduct": [32, 39, 248, 265, 294, 295, 446, 447, 448, 449], "overflow": [32, 188, 192, 437, 444], "infer_dtyp": [32, 33, 35, 55], "arr": [32, 33, 415, 416], "scalar": [32, 37, 42, 54, 92, 100, 248, 291, 308, 311, 348, 371], "default_int_dtyp": [32, 111], "default_float_dtyp": [32, 111], "settabl": [32, 33], "set_default_int_dtyp": [32, 111], "set_default_float_dtyp": [32, 111], "arang": [32, 92, 101, 102, 327, 330, 334, 437, 438, 449], "dim": [32, 248, 291, 327, 328, 333, 467, 478], "bear": 32, "popul": [32, 33, 37, 417, 418, 437, 443, 445], "infer_devic": [32, 33, 35, 55], "jnp": [32, 33, 34, 35, 42, 449], "jaxarrai": [32, 33, 34, 35], "mx": [32, 33, 34, 449], "nd": [32, 33, 34, 37, 42, 449], "One": [32, 37, 39, 40, 248, 265, 377, 385, 417, 419], "deleg": 32, "fill_valu": [32, 92, 99, 100, 188, 215], "shape_to_tupl": [32, 248], "item": [32, 37, 39, 40, 42, 111, 119, 141, 148, 149, 150, 157, 159, 161, 163, 165, 169, 248, 258, 276, 302, 303, 397, 402, 403, 404, 405, 409, 413, 414, 449, 479, 480], "as_n": [32, 111, 119, 120, 121, 122, 141, 157, 158], "cpu": [33, 54, 92, 101, 102, 141, 157, 158, 160, 174, 177, 183, 184, 186, 187, 248, 270, 271, 291, 294, 295, 417, 418, 419, 420, 421, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "gpu": [33, 39, 54, 141, 157, 160, 173, 175, 181, 186, 417, 419], "idx": [33, 39, 248, 250], "tpu": [33, 141, 160, 185], "get_all_ivy_arrays_on_dev": [33, 141], "aliv": [33, 141, 172, 176, 178, 248, 272, 290, 292], "total_mem_on_dev": [33, 141], "amount": [33, 141, 184, 373, 374, 375, 376], "memori": [33, 34, 52, 54, 141, 156, 177, 182, 184, 187, 335, 345, 449], "dev_util": [33, 141], "num_cpu_cor": [33, 141], "default_devic": [33, 37, 141, 176, 186], "random_uniform": [33, 41, 417, 449], "dual": 33, "thrown": [33, 54, 248, 282], "rare": [33, 54], "set_default_devic": [33, 141, 186], "overwrit": [34, 37, 141, 182], "program": 34, "strictli": 34, "inplace_upd": [34, 248, 459, 460], "ration": 34, "speak": 34, "subtli": 34, "ensure_in_backend": [34, 248, 282], "val": [34, 39, 248, 280, 281, 282, 296, 297], "x_nativ": 34, "val_n": 34, "args_to_n": [34, 39], "is_ivy_arrai": [34, 39, 248], "is_vari": [34, 312], "assign": [34, 39], "elif": 34, "irrespect": [34, 39, 111, 114], "inclus": [34, 92, 93, 417, 419], "omit": [34, 35, 429, 430, 431, 433], "unspecifi": [34, 188, 236, 237, 348, 353, 377, 389], "predominantli": [34, 53], "math": [34, 42, 449], "presenc": 34, "altern": [34, 40], "_wrap_fn": 34, "maxim": [34, 37], "inner": [34, 39, 348, 353, 356, 393, 394, 395, 396], "third": [34, 54, 348, 366, 429, 430], "addition": [34, 35], "leverag": 34, "reshap": [34, 37, 39, 42, 327, 330, 334, 377, 449], "asarrai": [34, 92, 335, 336, 429, 431], "equival": [34, 40, 42, 92, 93, 188, 202, 227, 228, 237, 348, 359, 362, 365, 371], "input_arrai": 34, "adress": 35, "revisit": [35, 42], "dedic": [35, 39, 41, 312, 325, 459, 460], "posit": [35, 40, 53, 91, 92, 97, 111, 124, 141, 162, 166, 170, 188, 189, 216, 217, 232, 237, 248, 269, 348, 349, 377, 381, 386, 417, 422, 424, 427, 446, 447, 448, 459, 460], "__div__": 35, "dicat": 35, "detect": [35, 40, 41, 397, 398, 408], "futher": 35, "absenc": 35, "pep": 35, "484": 35, "annot": 35, "brittl": 35, "intend": [35, 437, 444], "freeli": 35, "inde": [35, 54], "flexibl": 35, "original_typ": 35, "cumbersom": 35, "gain": [36, 41, 461], "sound": 36, "higher": [36, 37, 42, 54, 312, 314, 316, 318, 319, 320], "overview": [36, 53], "handler": [36, 38, 42, 449], "fledg": [37, 38], "cuda": [37, 40, 54, 92, 101, 102, 141, 148, 154, 248, 270, 271, 291, 294, 295, 417, 418, 419, 421, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "syntact": [37, 42], "x_min": [37, 42, 377, 378], "x_max": [37, 42, 377, 378], "clip_by_valu": [37, 42], "clamp": [37, 42], "behavior": [37, 54, 188, 236, 237, 429, 430, 431, 433], "fit": [37, 327, 333, 377, 384], "logspac": [37, 92], "construct": [37, 38, 41, 42, 377, 391, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "stop": [37, 54, 92, 93, 101, 102, 141, 153, 182, 312, 314, 316, 318, 319, 320, 322, 393, 394, 395, 396, 483, 484, 485, 486, 487, 488], "num": [37, 92, 101, 102, 327, 333], "power_seq": 37, "linspac": [37, 92, 93, 449], "okai": 37, "bound": 37, "set_framework": [37, 39, 40, 42], "resid": [37, 41], "interv": [37, 42, 92, 93, 101, 102, 348, 370, 377, 378, 389, 417, 419, 421, 446, 447, 448], "edg": [37, 42, 377, 378, 380, 392, 449], "wise": [37, 42, 81, 82, 83, 84, 85, 86, 87, 88, 188, 189, 190, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 207, 208, 209, 213, 214, 215, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 244, 248, 268, 377, 378], "larger": [37, 42, 111, 124, 377, 378, 386, 437, 443, 445], "param": [37, 42, 248, 250, 270, 271], "minimum": [37, 42, 141, 188, 189, 248, 273, 274, 296, 297, 302, 303, 377, 378, 424, 426, 437, 439, 441, 449], "ml_framework": [37, 42, 92, 93], "current_framework": [37, 42], "furthermor": 37, "concaten": [37, 40, 141, 167, 248, 269, 377, 379, 449], "framework_handl": 37, "face": 37, "verbos": [37, 449, 493], "cprint": [37, 492], "framework_stack": 37, "stack": [37, 92, 107, 108, 327, 333, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 366, 367, 369, 377, 397, 398, 407, 408, 449, 467, 476], "_determine_framework_from_arg": 37, "valueerror": [37, 377, 388], "get_framework": 37, "neither": [37, 188, 192, 232], "illustr": [37, 53], "un": [37, 111, 128], "lstm_updat": [37, 335], "nn": [37, 42, 92, 103, 449], "init_h": [37, 335, 345], "init_c": [37, 335, 345], "kernel": [37, 54, 335, 345], "recurrent_kernel": [37, 335, 345], "bia": [37, 41, 335, 344, 345, 467, 468, 469, 470, 471, 472, 473, 474, 477], "recurrent_bia": [37, 335, 345], "x_shape": 37, "batch_shap": [37, 39, 42, 248, 291, 327, 328, 329, 330, 332, 333, 334, 335, 345, 346, 347, 348, 372, 417, 418, 467, 476], "timestep": [37, 335, 345, 467, 476], "input_channel": [37, 41, 467, 468, 469, 470, 471, 472, 473, 476, 477], "x_flat": 37, "wi": 37, "wi_x": 37, "wii_x": 37, "wif_x": 37, "wig_x": 37, "wio_x": 37, "recurr": [37, 335, 345], "wh": 37, "lstm": [37, 335, 345, 467], "ht": 37, "ct": 37, "hts_list": 37, "unrol": [37, 40, 335, 345], "wii_xt": 37, "wif_xt": 37, "wig_xt": 37, "wio_xt": 37, "zip": 37, "unstack": [37, 40, 248, 449], "htm1": 37, "ctm1": 37, "wh_htm1": 37, "whi_htm1": 37, "whf_htm1": 37, "whg_htm1": 37, "who_htm1": 37, "num_or_size_split": [37, 377, 387], "sigmoid": [37, 40, 41, 81, 449], "ft": 37, "gt": 37, "tanh": [37, 81, 188, 449], "ot": 37, "expand_dim": [37, 40, 377, 449], "offici": 37, "reliabl": 37, "sacrific": 37, "hear": 37, "virtu": 37, "pure_ivi": 37, "reduce_mean": [37, 40, 41, 42, 449], "reduce_sum": [37, 449], "reduce_var": 37, "compile_graph": [37, 42], "pure_torch": 37, "cat": [37, 42], "backbon": [37, 40], "_layer": 37, "super": [37, 40, 41, 42], "clean": [37, 38, 40], "w": [37, 40, 41, 248, 253, 312, 313, 314, 316, 318, 319, 320, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342], "random_unifrom": 37, "unclean": 37, "wx": 37, "temp": 37, "trace": [37, 54, 248, 284, 285, 287, 348], "torchscript": 37, "fn": [37, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 111, 125, 126, 141, 148, 149, 248, 250, 309, 397, 398, 403, 404, 405, 407, 408, 409, 452, 454], "example_input": [37, 89, 90], "static_argnum": [37, 89, 90], "static_argnam": [37, 89, 90], "jit": [37, 54], "low": [37, 417, 419, 421], "frontend": [38, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79], "treat": [38, 42, 89, 90], "primit": [38, 54], "describ": [38, 42, 437, 438, 442, 443, 444], "hierarch": [38, 40, 41], "solv": [38, 53, 348], "straight": [39, 449], "arraywithdevic": 39, "arraywithgener": 39, "arraywithgradi": 39, "arraywithimag": 39, "arraywithlinalg": 39, "arraywithlog": 39, "arraywithmath": 39, "arraywithmeta": 39, "arraywithrandom": 39, "arraywithreduct": 39, "assert": [39, 40, 248, 254], "is_native_arrai": [39, 248], "_shape": 39, "_size": 39, "functool": 39, "reduc": [39, 141, 182, 248, 265, 348, 363, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "mul": 39, "len": [39, 42, 92, 103], "_dtype": 39, "_devic": 39, "_dev_str": 39, "as_ivy_dev": [39, 141], "_pre_repr": 39, "_post_repr": 39, "ndim": [39, 348, 363, 366], "size": [39, 40, 92, 101, 102, 141, 180, 181, 182, 248, 294, 327, 332, 335, 347, 348, 352, 357, 361, 363, 366, 370, 377, 381, 386, 387, 388, 417, 418, 420, 421, 424, 425, 427, 446, 447, 448, 467, 468, 469], "matrix_transpos": [39, 348], "mt": 39, "answer": [39, 54], "consol": 39, "typeerror": 39, "immut": 39, "behav": 39, "claim": 39, "truli": 39, "_native_wrapp": 39, "attributeerror": 39, "scatter_nd": [39, 248, 449], "genuin": 39, "some_method": 39, "similarli": [39, 92, 103], "rewritten": 39, "__pow__": 39, "strang": 39, "power": [39, 40, 41, 188, 202, 210, 236, 248, 273, 296, 303, 348, 358, 461], "enforc": 39, "notic": 39, "appear": [39, 377, 381], "inv": [39, 348, 449], "invers": [39, 53, 188, 190, 191, 193, 194, 195, 196, 197, 348, 355, 362], "_wrap_method": 39, "func_wrapp": [39, 55, 56, 57, 58, 59, 60, 61, 62, 63], "hasattr": 39, "__name__": 39, "non_wrapped_method": 39, "_method_wrap": 39, "native_arg": 39, "native_kwarg": 39, "to_ivi": [39, 397, 410], "inner_fn": 39, "whist": 39, "unwrap": 39, "transit": 39, "needlessli": 39, "randn": 39, "_unwrap_method": 39, "method_wrap": 39, "whenev": [39, 40], "compartment": 39, "public": [39, 248, 258], "abc": [39, 141, 148, 153, 248, 267, 479, 480, 483, 487], "newshap": [39, 377, 385], "new_shap": 39, "transpos": [39, 42, 141, 169, 335, 337, 339, 341, 348, 360, 362, 449, 467, 469, 471, 473], "flip": [39, 40, 42, 188, 199, 377, 449], "tidi": 39, "20": [39, 188, 203, 210, 238, 348, 352, 361, 368, 417, 419, 424, 427, 428, 437, 438], "shorter": 39, "crystal": 39, "41": [39, 188, 203, 348, 349, 437, 444], "enough": [39, 40, 41], "ton": 40, "ado": [40, 41], "dictionari": [40, 54, 141, 181], "incredibli": [40, 54], "hash": 40, "soup": 40, "walk": [40, 41], "dct": 40, "cnt": 40, "combo": [40, 449, 455], "hold": [40, 248, 294, 295], "1000": 40, "uda": 40, "3333": 40, "6667": 40, "178": 40, "lr": [40, 41, 312, 314, 316, 318, 319, 320, 483, 484, 485, 486, 487, 488], "new_weight": 40, "0600": 40, "3100": 40, "2400": 40, "6900": 40, "delimit": 40, "autocomplet": 40, "midwai": 40, "agent": 40, "total_spe": 40, "total_height": 40, "total_width": 40, "ag": 40, "tot": 40, "total_": 40, "total_h": 40, "disk": [40, 327, 329], "hdf5": [40, 479, 480], "to_disk_as_hdf5": 40, "from_disk_as_hdf5": 40, "same_arrai": 40, "to_disk_as_pickl": 40, "from_disk_as_pickl": 40, "config": [40, 397, 410], "batch_siz": [40, 327, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 417, 418], "dir": 40, "dataset": [40, 52, 449], "dropout": [40, 335, 467, 478], "adam": [40, 41, 42, 312, 313, 314, 318, 449, 483, 485], "json": 40, "to_disk_as_json": 40, "from_disk_as_json": 40, "cnt0": 40, "cnt1": 40, "deep_copi": 40, "diff_0": 40, "diff_1": 40, "config0": 40, "config1": 40, "Not": [40, 41, 54, 91], "hierarchi": 40, "screen": 40, "decod": 40, "l0": 40, "l1": [40, 348, 371], "depth": [40, 41, 42, 53, 141, 162, 166, 170, 248, 276, 291, 397, 409, 479, 480], "clearer": 40, "truncat": 40, "flatten_key_chain": [40, 479, 480], "above_height": 40, "decoder__l0": 40, "decoder__l1": 40, "encoder__l0": 40, "encoder__l1": 40, "height": [40, 327, 333], "below_depth": 40, "l0__b": 40, "l0__w": 40, "l1__b": 40, "l1__w": 40, "with_print_limit": 40, "printabl": 40, "with_key_length_limit": 40, "length": [40, 92, 93, 103, 348, 366, 367, 377, 385], "with_print_ind": 40, "indent": 40, "obviou": 40, "foresight": 40, "untidili": 40, "update_ag": 40, "normalize_img": 40, "img": 40, "img_max": 40, "reduce_max": [40, 449], "img_min": 40, "reduce_min": [40, 449], "img_rang": 40, "agent_posit": 40, "agent_veloc": 40, "agent_cam_front_rgb": 40, "agent_cam_front_depth": 40, "agent_cam_rear_rgb": 40, "agent_cam_rear_depth": 40, "agent_cam_lidar": 40, "normal": [40, 377, 389, 415, 416, 417, 420, 481, 482], "cleaner": 40, "camera": 40, "front_rgb": 40, "front_depth": 40, "rear_rgb": 40, "rear_depth": 40, "lidar": 40, "rgb": 40, "rear": 40, "veloc": 40, "cam": 40, "cam_max": 40, "cam_min": 40, "cam_rang": 40, "Of": 40, "ideal": 40, "perman": 40, "afterward": 40, "thread": 40, "incorpor": 40, "multiprocess": [40, 54, 141, 148, 248], "queue": [40, 141, 148, 149, 248, 293, 298], "pretti": 40, "straightforward": 40, "dataload": [40, 52, 449], "_cnt": 40, "img_": 40, "_dataset_s": 40, "_batch_siz": 40, "_count": [40, 41], "__next__": 40, "filenam": 40, "img_fnam": 40, "list_stack": 40, "fname": 40, "loaded_img": 40, "cv2": 40, "imread": 40, "from_numpi": 40, "loader": [40, 54], "32": [40, 81, 83, 188, 203, 327, 334, 335, 338, 341, 348, 361, 424, 428, 437, 438], "batch_slic": 40, "model": [40, 41, 449], "mymodel": [40, 449], "linear0": [40, 41, 449], "linear1": [40, 41, 449], "relu": [40, 41, 81, 82, 83, 449], "x_in": [40, 41, 42, 449], "001": [40, 41, 415, 416], "loss_fn": [40, 41, 42, 449], "to_numpi": [40, 248, 449], "0145": 40, "grad_fn": 40, "addbackward0": 40, "_create_vari": 41, "output_channel": [41, 467, 468, 469, 470, 471, 472, 473, 476, 477], "with_bia": [41, 467, 477], "_input_channel": 41, "_output_channel": 41, "_w_shape": 41, "_b_shape": 41, "_with_bia": 41, "8979": 41, "3198": 41, "0196": 41, "3126": 41, "3717": 41, "9687": 41, "6958": 41, "5122": 41, "3902": 41, "8800": 41, "5613": 41, "1982": 41, "nightmar": 41, "overcom": 41, "fc": 41, "9563": 41, "impact": 41, "v0": 41, "v1": 41, "6440": 41, "key0": 41, "key1": 41, "1823": 41, "8075": 41, "linear3": 41, "v2": 41, "2346": 41, "counter": 41, "hidden": [41, 335, 345, 467, 476], "fed": [41, 141, 182], "1300": 41, "decoupl": 41, "scheme": 41, "weight_initi": [41, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "glorotuniform": [41, 461, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "bias_initi": [41, 467, 468, 469, 470, 471, 472, 473, 474, 477], "_w_init": 41, "_b_init": 41, "create_vari": [41, 461], "var_shap": [41, 461], "fan_out": [41, 461], "fan_in": [41, 461], "uniform": [41, 417, 418, 419, 421, 461, 462, 463, 465], "fan_mod": [41, 461], "fan_sum": 41, "slight": 41, "misnom": 41, "belong": 41, "saw": 41, "vanilla": [41, 393, 395], "descent": [41, 312, 316, 483, 488], "lar": [41, 312, 318, 319, 483], "lamb": [41, 312, 318, 483], "beta1": [41, 312, 313, 314, 318, 483, 484, 485], "beta2": [41, 312, 313, 314, 318, 483, 484, 485], "999": [41, 312, 313, 314, 318, 483, 484, 485], "07": [41, 312, 313, 314, 318, 373, 374, 375, 376, 483, 484, 485], "stop_gradi": [41, 141, 182, 312, 314, 316, 318, 319, 320, 393, 394, 395, 396, 449, 483, 484, 485, 486, 487, 488], "compile_on_next_step": [41, 479, 480, 483, 484, 485, 486, 487, 488], "_beta1": 41, "_beta2": 41, "_epsilon": 41, "_mw": 41, "_vw": 41, "_first_pass": 41, "_should_compil": 41, "_step": [41, 483, 487], "new_v": 41, "adam_upd": [41, 312], "_lr": 41, "isinst": [41, 42, 248, 306], "_inplac": 41, "_stop_gradi": 41, "set_stat": [41, 483, 484, 485, 486, 487, 488], "mw": [41, 312, 313, 314], "vw": [41, 312, 313, 314], "pre": [42, 54, 141], "captur": 42, "one_hot": [42, 248, 449], "sparse_funct": 42, "num_class": [42, 417, 418], "ey": [42, 92, 335, 338, 342], "cumprod": [42, 248], "ones_lik": [42, 92, 449], "num_dim": 42, "new_axi": 42, "constitu": 42, "_linear": 42, "to_backend": 42, "jax_graph": 42, "learnabl": [42, 415, 416, 481, 482], "to_ivy_modul": [42, 459], "thinli": 42, "whilst": 42, "preserv": [42, 54, 312, 322, 377, 382], "to_haiku_modul": 42, "hk": 42, "loss_fn_t": 42, "transform": [42, 53, 335, 343, 344], "without_apply_rng": 42, "rng": 42, "prngkei": 42, "42": [42, 348, 361, 417, 422, 437, 438], "init": 42, "update_rul": 42, "01": [42, 188, 238], "tree_multimap": 42, "mechan": [52, 54, 449], "vision": [52, 449], "robot": [52, 449], "focus": 53, "field": [53, 348, 353, 363, 366, 429, 430, 431], "perfect": 53, "3d": [53, 467, 472, 473], "differenti": 53, "demo": [53, 449], "orient": 53, "pose": 53, "represent": [53, 91, 111, 112, 113, 124, 127, 141, 154, 155, 188, 189, 192, 198, 201, 203, 229, 232, 248, 250, 301, 306], "largest": [53, 111, 124, 127, 348, 366], "euler": [53, 91], "quaternion": 53, "rotat": 53, "matric": [53, 92, 103, 107, 108, 335, 344, 348, 349, 351, 352, 353, 354, 355, 358, 359, 360, 362, 363, 365, 366, 367, 369], "vector": [53, 92, 103, 248, 257, 335, 344, 348, 350, 353, 356, 361, 366, 367, 370, 371, 372, 467, 477], "angl": [53, 188, 196, 206, 241], "ivy_mech": 53, "target_facing_rotation_matrix": 53, "polar_to_cartesian_coord": 53, "ordin": [53, 348, 365], "warp": [53, 327, 328], "optic": 53, "voxel": 53, "ivy_vis": 53, "coords_to_voxel_grid": 53, "render_pixel_coord": 53, "neural": [53, 335, 449, 456, 467], "radianc": 53, "nerf": 53, "trajectori": 53, "motion": 53, "plan": [53, 449], "mobil": 53, "ivy_robot": 53, "sample_spline_path": 53, "rigidmobil": 53, "sample_bodi": 53, "drone": 53, "sample_link": 53, "openai": 53, "swimmer": 53, "cumul": [53, 248, 260, 261], "reward": 53, "supervis": 53, "reinforc": 53, "door": [53, 54], "intersect": 53, "cartpol": 53, "mountain_car": 53, "pendulum": 53, "reacher": 53, "polici": 53, "condit": [53, 89, 90, 397, 407, 408, 424, 428], "learnt": 53, "ture": 53, "ntm": 53, "egospher": 53, "spatial": 53, "esm": 53, "ivy_memori": 53, "egocentr": 53, "room": 53, "inspir": 53, "doubt": 54, "grate": 54, "put": 54, "probe": 54, "undergo": 54, "remark": 54, "surpris": 54, "backward": [54, 188, 237, 348, 370, 446, 447, 448], "lock": 54, "contunu": 54, "minor": 54, "xla": 54, "buffer": 54, "kind": [54, 111, 124, 127, 188, 236, 437, 442, 444], "gold": 54, "dex": 54, "phase": 54, "lax": [54, 67, 68], "scan": 54, "tricki": 54, "predictor": 54, "tight": 54, "driver": 54, "schedul": 54, "algorithm": [54, 335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "dispatch": 54, "Will": 54, "ast": 54, "dynamic": 54, "cond": 54, "jacobian": 54, "checkpoint": 54, "autodiff": 54, "shine": 54, "merci": 54, "superset": 54, "cluster": 54, "compet": 54, "paradigm": 54, "parallelis": [54, 141, 148, 149], "spmd": 54, "mixtur": 54, "expert": 54, "sophist": 54, "depart": 54, "routin": 54, "hundr": 54, "thousand": 54, "deepli": [54, 397, 399], "broadli": 54, "heavili": 54, "supplementari": 54, "reusabl": 54, "fanci": 54, "fusion": 54, "lose": 54, "vmap": 54, "pmap": 54, "overhead": 54, "possibli": [54, 248, 306], "ineffici": 54, "eventu": 54, "supplement": 54, "backdoor": 54, "callback": 54, "load": 54, "record": 54, "metric": 54, "somewhat": 54, "outsourc": 54, "inputs_to_ivy_arrai": 55, "mathematical_funct": [67, 68, 70, 71, 72, 74, 75], "same_kind": [70, 71, 72], "subok": [70, 71, 72], "pointwise_op": [77, 78, 79], "alpha": [77, 78, 81, 83], "gelu": [81, 456], "gaussian": [81, 82], "leaki": [81, 82, 83], "leaky_relu": [81, 449], "rectifi": [81, 83, 84], "slope": [81, 83], "39": [81, 83, 348, 361, 415, 416, 437, 438], "85": [81, 83, 188, 203], "48": [81, 83, 348, 361, 437, 438], "88": [81, 83, 188, 203, 348, 361, 437, 438], "269": [81, 85], "731": [81, 85], "881": [81, 85], "214": [81, 85], "978": [81, 85], "891": [81, 85], "softmax": [81, 335, 346, 347, 449], "422": [81, 86], "155": [81, 86], "0768": [81, 86], "231": [81, 86], "693": [81, 86, 373, 376], "49": [81, 86, 437, 438], "147": [81, 86], "363": [81, 86], "softplu": [81, 449], "3461": [81, 87], "6491": [81, 87], "5349962": [81, 87], "4203641": [81, 87], "hyperbol": [81, 88, 188, 191, 194, 197, 206, 241, 246], "55": [81, 88, 335, 341, 348, 361, 437, 438], "501": [81, 88], "762": [81, 88], "964": [81, 88], "faster": [89, 90], "invoc": [89, 90], "718281828459045": 91, "inf": [91, 248, 277, 311, 348, 371], "newaxi": 91, "alia": 91, "pi": 91, "141592653589793": 91, "mathemat": [91, 188, 192, 196, 211, 232, 348, 371], "evenli": [92, 93, 101, 102, 377, 387], "half": [92, 93, 417, 419, 421], "word": [92, 93, 417, 421, 459, 460], "chosen": [92, 93, 188, 196, 424, 428], "distanc": [92, 93], "adjac": [92, 93], "dimension": [92, 93, 97, 103, 348, 350, 351, 356, 359, 361, 362, 370, 371, 377, 387, 424, 425, 426, 427, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "ceil": [92, 93, 188, 449], "datatyp": [92, 94, 104, 111, 118, 129, 130, 131], "interpret": [92, 94, 104], "fill": [92, 95, 99, 100, 105, 106, 109, 110, 417, 419], "uniniti": [92, 95, 96], "empty_lik": 92, "n_row": [92, 97], "n_col": [92, 97], "diagon": [92, 97, 107, 108, 348, 369], "elsewher": [92, 97, 424, 428], "row": [92, 97, 348, 365, 366, 417, 418, 424, 427], "column": [92, 97, 348, 353, 363, 365, 366], "upper": [92, 97, 108, 348, 349, 363, 417, 421], "from_dlpack": 92, "__dlpack__": [92, 98, 141, 183], "interchang": [92, 98, 377, 390], "full_lik": 92, "endpoint": [92, 101], "entri": [92, 101, 102, 377, 387, 397, 410], "meshgrid": 92, "xy": [92, 103], "coordin": [92, 103, 188, 196], "cartesian": [92, 103], "matrix": [92, 103, 107, 108, 248, 249, 256, 335, 344, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 369, 372, 467, 477], "ij": [92, 103, 437, 438], "rank": [92, 103, 248, 310, 348, 350, 359, 363, 365, 369, 370, 371, 377, 380, 381, 389, 392, 424, 427, 446, 447, 448], "ni": [92, 103], "xi": [92, 103], "n1": [92, 103], "n2": [92, 103], "n3": [92, 103], "accordingli": [92, 103, 188, 211, 348, 371, 424, 426, 429, 430, 431, 433, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "xv": [92, 103], "yv": [92, 103], "tril": 92, "triangular": [92, 107, 108, 348, 349, 363], "innermost": [92, 107, 108, 348, 349, 351, 352, 353, 354, 355, 359, 360, 362, 363, 365, 366, 367, 369], "mxn": [92, 107, 108, 348, 352, 359, 360, 362, 363, 367, 369], "triu": 92, "zeros_lik": [92, 377, 378, 449], "defaultdtyp": 111, "defaultfloatdtyp": 111, "float_dtyp": [111, 120, 134], "defaultintdtyp": 111, "as_ivy_dtyp": 111, "dtype_in": [111, 112, 113, 123, 128, 129, 130, 140], "as_native_dtyp": 111, "match": [111, 114, 188, 237, 248, 288], "broadcast_arrai": 111, "incompat": [111, 116], "from_": [111, 117], "occur": [111, 117, 424, 425, 426, 429, 430, 431, 433], "closest_valid_dtyp": 111, "closest": [111, 118, 188, 204, 212, 213, 238, 247], "floatdtyp": [111, 120], "int_dtyp": [111, 121, 135], "intdtyp": [111, 121], "dtype_bit": 111, "finfo": 111, "inform": [111, 124, 127, 248, 250, 312, 322], "followng": [111, 124], "occupi": [111, 124, 127, 248, 294, 295], "ep": [111, 124, 348, 359, 362], "smallest": [111, 124, 127, 188, 204], "max": [111, 124, 127, 188, 230, 248, 256, 257, 265, 294, 295, 348, 359, 362, 437, 483, 485], "min": [111, 124, 127, 188, 231, 248, 265, 294, 295, 302, 348, 363, 366, 367, 371, 437], "smallest_norm": [111, 124], "precis": [111, 124, 188, 232, 242], "function_supported_dtyp": 111, "acosh": [111, 125, 126, 188, 449], "function_unsupported_dtyp": 111, "iinfo": 111, "encapsul": [111, 127], "invalid_dtyp": 111, "is_float_dtyp": 111, "is_int_dtyp": [111, 248, 308], "promote_typ": 111, "type1": [111, 131], "type2": [111, 131], "arrays_and_dtyp": [111, 132], "type_promote_arrai": 111, "ret1": [111, 136], "ret2": [111, 136], "unset_default_dtyp": 111, "unset_default_float_dtyp": 111, "unset_default_int_dtyp": 111, "valid_dtyp": 111, "defaultdevic": 141, "__enter__": 141, "_dev": 141, "initialis": 141, "devcloneditem": [141, 160], "multidevitem": [141, 142, 145], "devclonedit": 141, "multidevit": [141, 143, 146, 148, 149, 152], "devclonednest": 141, "max_depth": [141, 144, 147, 152, 162, 166, 170, 248, 276, 397, 409], "multidevnest": [141, 144, 147], "devdistitem": 141, "devdistit": 141, "devdistnest": 141, "devmanag": 141, "dev_mapp": 141, "da_dim_s": 141, "safety_factor": 141, "min_dev_dim_s": 141, "max_dev_dim_step_ratio": 141, "min_unit_dev_tune_step": 141, "min_sf_tune_step": 141, "starting_split_factor": 141, "max_split_factor_step_s": 141, "05": [141, 415, 416], "tune_dev_alloc": 141, "tune_dev_split": 141, "mapper": [141, 148, 149], "receivess": 141, "ratio": [141, 312, 318, 327, 333, 483, 485], "safe": [141, 148], "oom": 141, "tune": 141, "da_tune_step": 141, "dim_siz": 141, "ds_tune_step": 141, "to_clon": 141, "to_distribut": 141, "multidevic": [141, 148], "parallel": [141, 148, 149], "mutlidevic": [141, 148], "repeated_config_check": 141, "tune_step": 141, "devmapp": [141, 149], "ret_fn": [141, 148, 149], "queue_class": [141, 148, 149], "worker_class": [141, 148, 149], "timeout": [141, 148, 149, 248, 293, 298], "worker": [141, 148, 149], "used_dev": [141, 148], "split_factor": [141, 148], "sf": [141, 148], "devmappermultiproc": 141, "multidev": [141, 150, 151, 170], "at_dev": [141, 151, 152], "profil": 141, "save_dir": [141, 153], "as_native_dev": 141, "clear_mem_on_dev": 141, "to_devic": [141, 157], "dev_clon": 141, "deviceic": [141, 159], "dev_clone_arrai": 141, "dev_clone_it": 141, "dev_clone_nest": 141, "dev_dist": 141, "dev_dist_arrai": 141, "dev_dist_it": 141, "dev_dist_nest": 141, "dev_unifi": 141, "concat": [141, 167, 168, 169, 170, 182, 248, 269, 377, 449], "concatten": [141, 167, 168, 169, 170, 182], "dev_unify_arrai": 141, "dev_unify_it": 141, "dev_unify_nest": 141, "spread": [141, 170], "140462020989616": [141, 172], "gpu_is_avail": 141, "num_ivy_arrays_on_dev": 141, "x3": [141, 176], "x4": [141, 176], "percent_used_mem_on_dev": 141, "process_specif": [141, 177, 187], "percentag": [141, 177], "ram": [141, 177, 184, 187], "alon": [141, 177, 187], "print_all_ivy_arrays_on_dev": 141, "attr_onli": [141, 178], "set_split_factor": 141, "chunk": [141, 180, 181, 182], "split_func_cal": 141, "max_chunk_s": [141, 182], "chunk_siz": [141, 182], "input_ax": [141, 182], "output_ax": [141, 182], "feed": [141, 182], "fist": [141, 182], "stream": [141, 183], "caveat": [141, 183], "portabl": [141, 183, 449], "gb": [141, 184, 187], "tpu_is_avail": 141, "unset_default_devic": 141, "reset": [141, 186], "used_mem_on_dev": 141, "magnitud": [188, 189, 192, 232, 348, 366, 367], "aco": [188, 449], "princip": [188, 190, 193, 195], "cosin": [188, 190, 191, 205, 206], "greater": [188, 190, 193, 196, 200, 202, 212, 213, 236, 237, 239, 247, 348, 350, 377, 388, 417, 421], "x1_i": [188, 192, 196, 198, 200, 201, 202, 203, 207, 208, 213, 214, 215, 219, 220, 225, 226, 228, 229, 232, 234, 236, 237, 244], "x2_i": [188, 192, 196, 198, 200, 201, 202, 203, 207, 208, 213, 214, 215, 219, 220, 225, 226, 228, 229, 232, 234, 236, 237, 244], "finit": [188, 192, 196, 216, 232, 236, 237], "nonzero": [188, 192, 232, 424], "nor": [188, 192, 232], "nearest": [188, 192, 232, 238], "2019": [188, 192, 211, 232], "commut": [188, 192], "asin": [188, 449], "sine": [188, 193, 194, 240, 241], "5707964": [188, 193], "5235988": [188, 193], "64350116": [188, 193], "10016742": [188, 193], "20135793": [188, 193], "30469266": [188, 193], "41151685": [188, 193], "asinh": [188, 449], "atan": [188, 449], "atan2": [188, 449], "quotient": [188, 196], "notat": [188, 196, 437, 438], "denot": [188, 196], "pair": [188, 196, 335, 347, 348, 350], "quadrant": [188, 196], "3\u03c0": [188, 196], "atanh": [188, 449], "549": [188, 197], "bitwise_and": 188, "bitwis": [188, 198, 201, 203, 229], "AND": [188, 198, 226, 446, 447], "binari": [188, 198, 201, 203, 229, 373, 374], "bitwise_invert": 188, "invert": [188, 199], "bitwise_left_shift": 188, "bitwise_or": 188, "bitwise_right_shift": 188, "arithmet": [188, 202, 437, 440], "propag": [188, 202, 437, 439, 440, 441, 443, 444, 445], "thu": [188, 202, 236, 237, 348, 353], "floor": [188, 202, 248, 268, 449], "lh": [188, 202], "rh": [188, 202], "bitwise_xor": 188, "xor": [188, 203, 229], "78": [188, 203, 348, 361, 437, 438], "91": [188, 203, 348, 361, 437, 438], "23": [188, 203, 335, 341, 347, 348, 352, 424, 428], "66": [188, 203, 348, 361, 415, 416, 437, 438], "77": [188, 203, 348, 361, 437, 438], "79": [188, 203], "89": [188, 203, 348, 368, 437, 444], "98": [188, 203, 348, 361, 424, 428, 437, 438], "26": [188, 203, 348, 352, 361, 368, 437, 438], "57": [188, 203, 348, 349], "21": [188, 203, 248, 260, 348, 352, 361, 437, 438], "34": [188, 203, 327, 334], "24": [188, 203, 248, 260, 348, 352, 361, 437, 438], "74": [188, 203], "51": [188, 203], "27": [188, 203, 206, 335, 347, 348, 361, 437, 438], "59": [188, 203], "416": [188, 205], "cosh": [188, 449], "5430806": [188, 206], "7621958": [188, 206], "067662": [188, 206], "308231": [188, 206], "0200667": [188, 206], "8283155": [188, 206], "110": [188, 206], "705475": [188, 206], "6685185": [188, 206], "567909": [188, 206], "57476": [188, 206], "286647": [188, 206], "40": [188, 206, 348, 361, 437, 438], "731575": [188, 206], "122": [188, 206], "34801": [188, 206], "367": [188, 206], "54822": [188, 206], "669": [188, 206], "71564": [188, 206], "201": [188, 206, 238], "548": [188, 206], "317": [188, 206], "1490": [188, 206], "4791": [188, 206], "dividend": [188, 207, 237], "divisor": [188, 207, 237, 312, 313, 314, 318, 437, 443, 445, 483, 484, 485], "erf": 188, "gauss": [188, 209], "exponenti": [188, 209, 210, 225, 236], "exp": [188, 211, 225, 449], "logarithm": [188, 210, 221, 222, 223, 224, 225, 348, 364], "7182817": [188, 210], "389056": [188, 210], "085537": [188, 210], "expm1": 188, "accur": [188, 211], "fdlibm": [188, 211], "compliant": [188, 211, 227, 228, 437, 439, 440, 441], "greatest": [188, 212, 213], "floor_divid": 188, "greater_equ": 188, "isfinit": 188, "out_i": [188, 216, 217, 218], "isinf": 188, "isnan": 188, "less_equ": 188, "log10": 188, "log1p": 188, "log2": 188, "logaddexp": 188, "logical_and": [188, 449], "logical_not": [188, 449], "logical_or": [188, 449], "logical_xor": 188, "threshold": [188, 230, 231], "exce": [188, 231], "y_i": [188, 233], "not_equ": 188, "pow": 188, "expon": [188, 236, 248, 303], "versu": [188, 236], "odd": [188, 236], "remaind": [188, 248, 268, 377, 387], "modulu": [188, 237], "primarili": [188, 237], "5654": [188, 238], "034": [188, 238], "433": [188, 238], "343": [188, 238], "44": [188, 238, 348, 361, 424, 428, 437, 438], "30": [188, 238, 327, 334, 348, 361, 437, 438, 461, 465], "81": [188, 238, 437, 438], "527": [188, 238], "301": [188, 238], "202": [188, 238], "sinh": [188, 449], "sqrt": [188, 348, 371], "squar": [188, 242, 335, 338, 348, 349, 351, 353, 354, 355, 358, 364, 365, 366], "indistinguish": [188, 242], "infinit": [188, 242], "546": [188, 245], "842": [188, 245], "916": [188, 245], "96": [188, 245, 348, 361, 437, 438], "37": [188, 245, 327, 334, 415, 416], "996": [188, 245], "328": [188, 245], "trunc": 188, "decim": [188, 247], "all_equ": 248, "equality_matrix": [248, 249], "arg_info": 248, "inspect": [248, 250, 453, 454], "arg_nam": 248, "array_equ": 248, "arrays_equ": 248, "assert_supports_inplac": 248, "later": [248, 255], "clip_matrix_norm": 248, "max_norm": [248, 256, 257], "downscal": [248, 256, 257], "clip_vector_norm": 248, "container_typ": 248, "copy_arrai": 248, "60": [248, 260, 348, 361, 437, 438], "cumsum": [248, 449], "current_backend_str": 248, "default_v": [248, 263], "catch_except": [248, 263], "rev": [248, 263], "with_cal": [248, 263], "einops_rearrang": 248, "axes_length": [248, 264, 265, 266], "rearrang": [248, 264, 266], "arrang": [248, 264], "einops_reduc": 248, "einops_repeat": 248, "123": [248, 267], "floormod": [248, 449], "mod": [248, 268], "fourier_encod": 248, "max_freq": [248, 269], "num_band": [248, 269], "flatten": [248, 269, 348, 361, 371, 377, 384, 386, 424, 425, 426, 429, 430, 431, 433], "pad": [248, 269, 335, 336, 337, 338, 339, 340, 341, 342, 377, 380, 392, 467, 468, 469, 470, 471, 472, 473, 474], "fourier": [248, 269], "band": [248, 269], "linearli": [248, 269, 348, 365], "oppos": [248, 269], "geometr": [248, 269], "gather": [248, 271], "slice": [248, 270, 271, 397, 406], "gather_nd": [248, 449], "get_all_arrays_in_memori": 248, "get_min_bas": 248, "get_min_denomin": 248, "get_num_dim": [248, 449], "as_arrai": [248, 275, 300], "get_referrers_recurs": 248, "seen_set": [248, 276], "local_set": [248, 276], "has_nan": 248, "include_inf": [248, 277, 311], "indices_wher": [248, 449], "inplace_arrays_support": 248, "inplace_decr": 248, "decrement": [248, 280], "inplace_incr": 248, "inplace_variables_support": 248, "is_arrai": 248, "is_ivy_contain": 248, "match_kwarg": 248, "allow_dupl": [248, 288], "forkserv": [248, 289], "spawn": [248, 289], "num_arrays_in_memori": 248, "hot": [248, 291], "scatter": [248, 291, 294, 295], "overrid": [248, 291], "print_all_arrays_in_memori": 248, "queue_timeout": 248, "scatter_flat": 248, "flat": [248, 294, 377, 384], "set_min_bas": 248, "set_min_denomin": 248, "set_queue_timeout": 248, "set_tmp_dir": 248, "tmp_dr": [248, 299], "temporari": [248, 299], "y_tupl": [248, 300], "y_tensor": [248, 300], "as_tensor": [248, 300], "min_denomin": [248, 302], "stabil": [248, 302, 303, 434, 435, 436], "_min_denomin": [248, 302], "stable_pow": 248, "min_bas": [248, 303], "_min_bas": [248, 303, 415, 416, 481, 482], "supports_inplac": 248, "tmp_dir": 248, "to_list": [248, 449], "to_scalar": 248, "try_else_non": 248, "keepdim": [248, 310, 348, 357, 371, 424, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "unpack": [248, 310], "value_is_nan": 248, "gradienttrack": 312, "with_grad": [312, 321], "adam_step": 312, "dcdw": [312, 313, 314, 316, 318, 319], "delta": [312, 313], "cost": [312, 313, 314, 316, 318, 319, 320, 393, 394, 395, 396], "en": [312, 313, 314], "wikipedia": [312, 313, 314], "wiki": [312, 313, 314], "stochastic_gradient_desc": [312, 313, 314], "dc": [312, 313, 314, 316, 318, 319, 320], "dw": [312, 313, 314, 316, 318, 319, 320], "averag": [312, 313, 314, 318, 393, 394, 395], "forget": [312, 313, 314, 318, 483, 484, 485], "mw_tm1": [312, 314, 318], "vw_tm1": [312, 314, 318], "rate": [312, 314, 316, 318, 319, 320, 393, 394, 395, 396, 467, 478, 483, 484, 485, 486, 487, 488], "ws_new": [312, 314, 316, 318, 319, 320], "retain": [312, 315], "gradient_descent_upd": [312, 393, 394, 395, 396, 449], "lamb_upd": 312, "max_trust_ratio": [312, 318, 483, 485], "decay_lambda": [312, 318, 319, 483, 485, 486], "trust": [312, 318, 483, 485], "decai": [312, 318, 319, 483, 485, 486], "lars_upd": 312, "layerwis": [312, 319, 483, 486], "optimizer_upd": 312, "effective_grad": [312, 320], "set_with_grad": 312, "preserve_typ": [312, 322], "unset_with_grad": 312, "variable_data": 312, "bilinear_resampl": [327, 449], "bilinearli": [327, 328], "num_sampl": [327, 328, 331, 417, 418], "bilinear": [327, 328], "float_img_to_uint8_img": 327, "gradient_imag": [327, 449], "linear_resampl": 327, "interpol": [327, 331], "resampl": [327, 331], "random_crop": 327, "crop_siz": [327, 332], "image_dim": [327, 332], "seed": [327, 332, 417, 449], "randomli": [327, 332, 335, 343, 467, 475], "crop": [327, 332], "2d": [327, 332, 348, 364, 467, 470, 471, 474], "nh": [327, 332], "nw": [327, 332], "stack_imag": [327, 449], "desired_aspect_ratio": [327, 333], "width": [327, 333], "uint8_img_to_float_img": 327, "820471434542632e": [327, 334], "0082513512365273e": [327, 334], "658462758989161e": [327, 334], "003653270560797e": [327, 334], "conv1d": [335, 467], "stride": [335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "data_format": [335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "nwc": [335, 336, 337, 467, 468, 469], "dilat": [335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "convolut": [335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "d_in": [335, 336, 337, 338, 339, 340, 341], "fw": [335, 336, 337, 338, 339, 340, 341, 342], "d_out": [335, 336, 337, 338, 339, 340, 341], "slide": [335, 336, 337, 338, 339, 340, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474], "ncw": [335, 336, 337, 467, 468, 469], "wio": [335, 336], "conv1d_transpos": 335, "output_shap": [335, 337, 339, 341, 467, 469, 471, 473], "conv2d": [335, 449, 467], "nhwc": [335, 338, 339, 342, 467, 470, 471, 474], "fh": [335, 338, 339, 340, 341, 342], "nchw": [335, 338, 339, 342, 467, 470, 471, 474], "hwio": [335, 338], "random_norm": [335, 338, 341, 342, 348, 366, 417, 429, 430], "unequ": [335, 338], "28": [335, 338, 341, 342, 348, 361, 437, 438], "unsqueez": [335, 338, 342], "conv2d_transpos": 335, "conv3d": [335, 467], "ndhwc": [335, 340, 341, 467, 472, 473], "volum": [335, 340], "fd": [335, 340, 341], "ncdhw": [335, 340, 341, 467, 472, 473], "dhwio": [335, 340], "conv3d_transpos": 335, "256": [335, 341], "258": [335, 341], "128": [335, 341, 348, 361], "depthwise_conv2d": [335, 449], "depthwis": [335, 342, 467, 474], "333": [335, 342], "inp": [335, 342], "prob": [335, 343, 417, 418, 467, 475], "bernoulli": [335, 343], "out_featur": [335, 343, 344], "incom": [335, 344], "outer_batch_shap": [335, 344], "inner_batch_shap": [335, 344], "in_featur": [335, 344], "cell": [335, 345, 467, 476], "num_queri": [335, 346, 347], "x_feat_dim": [335, 346], "num_kei": [335, 346, 347], "cont_feat_dim": [335, 346], "numhead": [335, 346], "feat_dim": [335, 346, 347], "out_feat_dim": [335, 346], "scaled_dot_product_attent": 335, "score": [335, 347], "04": [335, 347], "03": [335, 347, 415, 416], "35": [335, 347, 348, 350, 424, 428, 437, 438], "09": [335, 347], "08": [335, 347], "choleski": 348, "decomposit": [348, 349, 363, 366], "symmetr": [348, 349, 353, 354, 372], "73": [348, 349, 415, 416], "63": [348, 349, 361, 437, 438], "cross": [348, 373, 374, 375, 376, 449], "vif": [348, 350], "det": 348, "92": [348, 351], "293": [348, 351], "47": [348, 351], "offset": [348, 352, 369, 415, 416], "axis1": [348, 352, 377, 390], "axis2": [348, 352], "eigh": 348, "eigendecomposit": [348, 353], "qlq\u1d40": [348, 353], "orthogon": [348, 353], "eig": [348, 353], "namedtupl": [348, 353, 363, 366, 429, 430, 431], "eigenvalu": [348, 353, 354], "eigenvector": [348, 353], "eigvalsh": 348, "75": [348, 355, 361], "prepend": [348, 356], "matrix_norm": 348, "ord": [348, 357, 371], "fro": [348, 357], "matrix_pow": 348, "matrix_rank": 348, "rtol": [348, 359, 362], "singular": [348, 359, 362, 366, 367], "toler": [348, 359, 362], "largest_singular_valu": [348, 359, 362], "outer": [348, 393, 394, 395, 396], "array_lik": [348, 361], "33": [348, 361, 415, 416, 437, 438], "36": [348, 361, 437, 438], "45": [348, 361, 377, 387, 415, 416, 437, 438], "52": [348, 361, 437, 438], "50": [348, 361, 424, 427, 437, 438], "65": [348, 361, 437, 438], "72": [348, 361, 437, 438], "84": [348, 361, 437, 438], "105": [348, 361], "112": [348, 361, 437, 438], "104": [348, 361, 437, 438], "120": [348, 361], "pinv": [348, 449], "moor": [348, 362], "penros": [348, 362], "pseudo": [348, 362], "qr": 348, "orthonorm": [348, 363, 366], "slogdet": 348, "logdet": [348, 364], "equat": [348, 365, 437, 438], "coeffici": [348, 365], "svd": [348, 449], "full_matric": [348, 366], "usvh": [348, 366], "vh": [348, 366], "hermitian": [348, 366], "descend": [348, 366, 367, 434, 435, 436], "et": [348, 366], "cetera": [348, 366], "adjoint": [348, 366], "reconstruct": [348, 366, 429, 430, 432], "reconstructed_x": [348, 366], "svdval": 348, "tensordot": 348, "contract": [348, 368, 437, 438], "doubl": [348, 368], "76": [348, 368, 437, 438], "vecdot": 348, "vector_norm": 348, "singleton": [348, 371, 377, 388, 424, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "liter": [348, 371], "manhattan": [348, 371], "l2": [348, 371], "euclidean": [348, 371], "vector_to_skew_symmetric_matrix": [348, 449], "mathbf": [348, 372], "mathbb": [348, 372], "skew": [348, 372], "binary_cross_entropi": 373, "entropi": [373, 374, 375, 376], "predict": [373, 374, 375, 376], "smooth": [373, 374, 375, 376], "2231": [373, 374], "3567": [373, 374], "6094": [373, 374], "9163": [373, 374], "2040": [373, 374], "5108": [373, 374], "1054": [373, 374], "discret": [373, 375], "3862944": [373, 375], "35667497": [373, 375, 376], "sparse_cross_entropi": 373, "spars": [373, 376], "logit": [373, 376], "3025851": [373, 376], "357": [373, 376], "join": [377, 379, 389, 449], "constant_pad": 377, "pad_width": [377, 380, 392], "before_1": [377, 380, 392], "after_1": [377, 380, 392], "before_n": [377, 380, 392], "after_n": [377, 380, 392], "insert": [377, 381, 397, 402, 424, 425], "manipulation_funct": [377, 381], "reorder": [377, 382], "permute_dim": 377, "permut": [377, 383, 390], "repetit": [377, 384, 391], "restor": [377, 386], "with_remaind": [377, 387], "squeez": [377, 449], "famili": [377, 389], "intxx": [377, 389], "floatxx": [377, 389], "swapax": 377, "axis0": [377, 390], "tile": [377, 449], "rep": [377, 391], "zero_pad": [377, 449], "fomaml_step": 393, "inner_cost_fn": [393, 394, 395], "outer_cost_fn": [393, 394, 395], "inner_grad_step": [393, 394, 395, 396], "inner_learning_r": [393, 394, 395, 396], "inner_optimization_step": [393, 394, 395, 396], "inner_batch_fn": [393, 394, 395], "outer_batch_fn": [393, 394, 395], "average_across_step": [393, 394, 395], "inner_v": [393, 394, 395], "keep_inner_v": [393, 394, 395], "outer_v": [393, 394, 395], "keep_outer_v": [393, 394, 395], "return_inner_v": [393, 394, 395, 396], "num_task": [393, 394, 395, 396], "maml": [393, 394, 395], "recev": [393, 394, 395], "maml_step": 393, "rece": [393, 395], "reptile_step": 393, "cost_fn": [393, 396], "reptil": [393, 396], "receivng": [393, 396], "all_nested_indic": 397, "include_nest": [397, 398], "_index": [397, 398, 408], "_base": [397, 398, 407, 408], "copy_nest": 397, "include_deriv": [397, 399, 409], "to_mut": [397, 399, 409], "mutabl": [397, 399, 409], "insert_into_nest_at_index": 397, "insert_into_nest_at_indic": 397, "map_nest_at_index": 397, "map_nest_at_indic": 397, "multi_index_nest": 397, "nested_ani": 397, "check_nest": [397, 407, 408], "conditon": [397, 407, 408], "nested_indices_wher": 397, "to_ignor": [397, 408], "stop_after_n_found": [397, 408], "_depth": [397, 409], "_tuple_check_fn": [397, 409], "_list_check_fn": [397, 409], "_dict_check_fn": [397, 409], "nested_multi_map": 397, "key_chain": [397, 410], "to_appli": [397, 410], "prune_unappli": [397, 410], "prune": [397, 410, 411, 412], "leftmost": [397, 410], "nest0": [397, 410], "ivy_arrai": [397, 410], "funciton": [397, 410], "prune_nest_at_index": 397, "prune_nest_at_indic": 397, "set_nest_at_index": 397, "set_nest_at_indic": 397, "layer_norm": 415, "normalized_idx": [415, 416], "new_std": [415, 416, 481, 482], "mini": [415, 416, 481, 482], "gamma": [415, 416], "beta": [415, 416], "0976": [415, 416], "3452": [415, 416], "2740": [415, 416], "1047": [415, 416], "5886": [415, 416], "2732": [415, 416], "7696": [415, 416], "7024": [415, 416], "2518": [415, 416], "58": [415, 416], "283": [415, 416], "585": [415, 416], "909": [415, 416], "628": [415, 416], "997": [415, 416], "0707": [415, 416], "109": [415, 416], "877": [415, 416], "norm_idx": [415, 416], "228": [415, 416], "0285": [415, 416], "199": [415, 416], "204": [415, 416], "335": [415, 416, 429, 430], "multinomi": 417, "population_s": [417, 418], "draw": [417, 418, 420, 421], "unnorm": [417, 418], "drawn": [417, 418, 419, 420, 421], "home": [417, 418, 420, 421], "randint": [417, 449], "uniformli": [417, 419, 421], "highest": [417, 419], "parameter": [417, 420, 421], "6444774682897879": [417, 420], "811": [417, 420], "508": [417, 420], "564": [417, 420], "7268672": [417, 420], "968": [417, 420], "175": [417, 420, 429, 430], "064": [417, 420], "40935726": [417, 420], "556": [417, 420], "boundari": [417, 421], "26431865": [417, 421], "475": [417, 421], "878": [417, 421], "861": [417, 421], "89150229": [417, 421], "89629126": [417, 421], "94198485": [417, 421], "91405606": [417, 421], "72848724": [417, 421], "7550739": [417, 421], "624": [417, 421], "00109": [417, 421], "seed_valu": [417, 422], "shuffl": [417, 449], "argmax": [424, 449], "occurr": [424, 425, 426, 429, 430], "argmin": [424, 449], "yield": [424, 428], "43": [424, 428], "unique_al": 429, "x_j": [429, 430, 431, 433], "impli": [429, 430, 431, 433], "inverse_indic": [429, 430, 432], "aggreg": [429, 430], "fourth": [429, 430], "1141": [429, 430], "8101": [429, 430], "2119": [429, 430], "3519": [429, 430], "40501155": [429, 430], "77361575": [429, 430], "97776199": [429, 430], "36831157": [429, 430], "89148434": [429, 430], "9512272": [429, 430], "67542176": [429, 430], "41985657": [429, 430], "23478023": [429, 430], "9298": [429, 430], "8460": [429, 430], "6252": [429, 430], "4033": [429, 430], "7443": [429, 430], "2577": [429, 430], "3707": [429, 430], "0545": [429, 430], "3238": [429, 430], "5944": [429, 430], "0775": [429, 430], "4327": [429, 430], "176": [429, 430], "889": [429, 430], "763": [429, 430], "071": [429, 430], "262": [429, 430], "456": [429, 430], "114": [429, 430], "349": [429, 430], "615": [429, 430], "594": [429, 430], "212": [429, 430], "457": [429, 430], "827": [429, 430], "209": [429, 430], "unique_count": 429, "unique_invers": 429, "unique_valu": 429, "argsort": 434, "ascend": [434, 435], "einsum": 437, "einstein": [437, 438], "summat": [437, 438], "seq": [437, 438], "jk": [437, 438], "ik": [437, 438], "126": [437, 438], "510": [437, 438], "99": [437, 438], "108": [437, 438], "117": [437, 438], "sentinel": [437, 439, 441], "unsign": [437, 442, 444], "degre": [437, 443, 445], "bessel": [437, 443, 445], "8164966": [437, 443], "varianc": [437, 445], "unbias": [437, 445], "autom": 449, "grow": 449, "ai": 449, "got": 449, "colab": 449, "sharp": 449, "weekli": 449, "event": 449, "immedi": 449, "favorit": 449, "jax_concat": 449, "tf_concat": 449, "np_concat": 449, "mx_concat": 449, "torch_concat": 449, "prompt": 449, "get_devic": 449, "reduce_prod": 449, "linalg": 449, "neural_net": 449, "ecosystem": [449, 455], "popular": [449, 455], "acceler": 449, "articl": 449, "lenton2021ivi": 449, "inter": 449, "author": 449, "lenton": 449, "daniel": 449, "pardo": 449, "fabio": 449, "falck": 449, "fabian": 449, "jame": 449, "stephen": 449, "clark": 449, "ronald": 449, "journal": 449, "arxiv": 449, "preprint": 449, "2102": 449, "02886": 449, "2021": 449, "add_array_spec": 452, "fn_array_spec": 452, "geglu": 456, "native_modul": [459, 460], "native_module_class": [459, 460], "firstlayersiren": 461, "kaimingnorm": 461, "negative_slop": 461, "Ones": 461, "siren": 461, "w0": [461, 465], "filter_s": [467, 468, 469], "1d": [467, 468, 469], "conv1dtranspos": 467, "filter_shap": [467, 470, 471, 472, 473, 474], "conv2dtranspos": 467, "conv3dtranspos": 467, "depthwiseconv2d": 467, "num_channel": [467, 474], "bernoul": [467, 475], "num_lay": [467, 476], "return_sequ": [467, 476], "return_st": [467, 476], "get_initial_st": [467, 476], "dens": [467, 477], "multiheadattent": 467, "query_dim": [467, 478], "head_dim": [467, 478], "dropout_r": [467, 478], "context_dim": [467, 478], "with_to_q_fn": [467, 478], "with_to_kv_fn": [467, 478], "with_to_out_fn": [467, 478], "build_mod": [467, 478, 479, 480], "on_init": [467, 478, 479, 480], "__call__": [467, 478, 479, 480], "store_var": [479, 480], "arg_stateful_idx": [479, 480], "kwarg_stateful_idx": [479, 480], "fallback_to_non_compil": [479, 480, 483, 487], "with_partial_v": [479, 480], "initialz": [479, 480], "from_cal": [479, 480], "check_submod_ret": [479, 480], "get_mod_kei": [479, 480], "top_mod": [479, 480], "mod_depth": [479, 480], "mod_height": [479, 480], "mod_with_top_mod_key_chain": [479, 480], "save_weight": [479, 480], "weights_path": [479, 480], "show_mod_in_top_mod": [479, 480], "upper_depth": [479, 480], "lower_depth": [479, 480], "show_structur": [479, 480], "show_v_in_top_v": [479, 480], "sub_mod": [479, 480], "show_v": [479, 480], "track_submod_call_ord": [479, 480], "track_submod_ret": [479, 480], "v_with_top_v_key_chain": [479, 480], "layernorm": 481, "normalized_shap": [481, 482], "elementwise_affin": [481, 482], "trail": [481, 482], "affin": [481, 482], "0001": [483, 484, 485], "init_on_first_step": [483, 487], "ignore_miss": [483, 487], "overriden": [483, 487], "sgd": 483, "stochast": [483, 488], "sub_modul": [489, 490], "color": [492, 493]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [55, 0, 0, "-", "func_wrapper"], [452, 0, 0, "-", "inspection"], [492, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [1, 3, 1, "", "choose_random_backend"], [2, 3, 1, "", "clear_backend_stack"], [3, 3, 1, "", "current_backend"], [4, 3, 1, "", "get_backend"], [5, 3, 1, "", "set_backend"], [6, 3, 1, "", "try_import_ivy_jax"], [7, 3, 1, "", "try_import_ivy_mxnet"], [8, 3, 1, "", "try_import_ivy_numpy"], [9, 3, 1, "", "try_import_ivy_tf"], [10, 3, 1, "", "try_import_ivy_torch"], [11, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[56, 3, 1, "", "handle_nestable"], [57, 3, 1, "", "handle_out_argument"], [58, 3, 1, "", "infer_device"], [59, 3, 1, "", "infer_dtype"], [60, 3, 1, "", "inputs_to_ivy_arrays"], [61, 3, 1, "", "inputs_to_native_arrays"], [62, 3, 1, "", "outputs_to_ivy_arrays"], [63, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[64, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[65, 0, 0, "-", "jax"], [69, 0, 0, "-", "numpy"], [73, 0, 0, "-", "tensorflow"], [76, 0, 0, "-", "torch"]], "ivy.functional.frontends.jax": [[66, 0, 0, "-", "lax"]], "ivy.functional.frontends.jax.lax": [[67, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.jax.lax.mathematical_functions": [[68, 3, 1, "", "tan"]], "ivy.functional.frontends.numpy": [[70, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.numpy.mathematical_functions": [[71, 3, 1, "", "add"], [72, 3, 1, "", "tan"]], "ivy.functional.frontends.tensorflow": [[74, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.tensorflow.mathematical_functions": [[75, 3, 1, "", "tan"]], "ivy.functional.frontends.torch": [[77, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[78, 3, 1, "", "add"], [79, 3, 1, "", "tan"]], "ivy.functional.ivy": [[81, 0, 0, "-", "activations"], [89, 0, 0, "-", "compilation"], [91, 0, 0, "-", "constants"], [92, 0, 0, "-", "creation"], [111, 0, 0, "-", "data_type"], [141, 0, 0, "-", "device"], [188, 0, 0, "-", "elementwise"], [248, 0, 0, "-", "general"], [312, 0, 0, "-", "gradients"], [327, 0, 0, "-", "image"], [335, 0, 0, "-", "layers"], [348, 0, 0, "-", "linear_algebra"], [373, 0, 0, "-", "losses"], [377, 0, 0, "-", "manipulation"], [393, 0, 0, "-", "meta"], [397, 0, 0, "-", "nest"], [415, 0, 0, "-", "norms"], [417, 0, 0, "-", "random"], [424, 0, 0, "-", "searching"], [429, 0, 0, "-", "set"], [434, 0, 0, "-", "sorting"], [437, 0, 0, "-", "statistical"], [446, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[82, 3, 1, "", "gelu"], [83, 3, 1, "", "leaky_relu"], [84, 3, 1, "", "relu"], [85, 3, 1, "", "sigmoid"], [86, 3, 1, "", "softmax"], [87, 3, 1, "", "softplus"], [88, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[90, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[91, 4, 1, "", "e"], [91, 4, 1, "", "inf"], [91, 4, 1, "", "nan"], [91, 4, 1, "", "newaxis"], [91, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[93, 3, 1, "", "arange"], [92, 3, 1, "", "array"], [94, 3, 1, "", "asarray"], [95, 3, 1, "", "empty"], [96, 3, 1, "", "empty_like"], [97, 3, 1, "", "eye"], [98, 3, 1, "", "from_dlpack"], [99, 3, 1, "", "full"], [100, 3, 1, "", "full_like"], [101, 3, 1, "", "linspace"], [102, 3, 1, "", "logspace"], [103, 3, 1, "", "meshgrid"], [104, 3, 1, "", "native_array"], [105, 3, 1, "", "ones"], [106, 3, 1, "", "ones_like"], [107, 3, 1, "", "tril"], [108, 3, 1, "", "triu"], [109, 3, 1, "", "zeros"], [110, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[111, 1, 1, "", "DefaultDtype"], [111, 1, 1, "", "DefaultFloatDtype"], [111, 1, 1, "", "DefaultIntDtype"], [112, 3, 1, "", "as_ivy_dtype"], [113, 3, 1, "", "as_native_dtype"], [114, 3, 1, "", "astype"], [115, 3, 1, "", "broadcast_arrays"], [116, 3, 1, "", "broadcast_to"], [117, 3, 1, "", "can_cast"], [118, 3, 1, "", "closest_valid_dtype"], [119, 3, 1, "", "default_dtype"], [120, 3, 1, "", "default_float_dtype"], [121, 3, 1, "", "default_int_dtype"], [122, 3, 1, "", "dtype"], [123, 3, 1, "", "dtype_bits"], [124, 3, 1, "", "finfo"], [125, 3, 1, "", "function_supported_dtypes"], [126, 3, 1, "", "function_unsupported_dtypes"], [127, 3, 1, "", "iinfo"], [128, 3, 1, "", "invalid_dtype"], [129, 3, 1, "", "is_float_dtype"], [130, 3, 1, "", "is_int_dtype"], [131, 3, 1, "", "promote_types"], [132, 3, 1, "", "result_type"], [133, 3, 1, "", "set_default_dtype"], [134, 3, 1, "", "set_default_float_dtype"], [135, 3, 1, "", "set_default_int_dtype"], [136, 3, 1, "", "type_promote_arrays"], [137, 3, 1, "", "unset_default_dtype"], [138, 3, 1, "", "unset_default_float_dtype"], [139, 3, 1, "", "unset_default_int_dtype"], [140, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[111, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[111, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[111, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[141, 1, 1, "", "DefaultDevice"], [142, 1, 1, "", "DevClonedItem"], [143, 1, 1, "", "DevClonedIter"], [144, 1, 1, "", "DevClonedNest"], [145, 1, 1, "", "DevDistItem"], [146, 1, 1, "", "DevDistIter"], [147, 1, 1, "", "DevDistNest"], [141, 1, 1, "", "DevManager"], [148, 1, 1, "", "DevMapper"], [149, 1, 1, "", "DevMapperMultiProc"], [141, 1, 1, "", "MultiDev"], [150, 1, 1, "", "MultiDevItem"], [151, 1, 1, "", "MultiDevIter"], [152, 1, 1, "", "MultiDevNest"], [153, 1, 1, "", "Profiler"], [154, 3, 1, "", "as_ivy_dev"], [155, 3, 1, "", "as_native_dev"], [156, 3, 1, "", "clear_mem_on_dev"], [157, 3, 1, "", "default_device"], [158, 3, 1, "", "dev"], [159, 3, 1, "", "dev_clone"], [160, 3, 1, "", "dev_clone_array"], [161, 3, 1, "", "dev_clone_iter"], [162, 3, 1, "", "dev_clone_nest"], [163, 3, 1, "", "dev_dist"], [164, 3, 1, "", "dev_dist_array"], [165, 3, 1, "", "dev_dist_iter"], [166, 3, 1, "", "dev_dist_nest"], [167, 3, 1, "", "dev_unify"], [168, 3, 1, "", "dev_unify_array"], [169, 3, 1, "", "dev_unify_iter"], [170, 3, 1, "", "dev_unify_nest"], [171, 3, 1, "", "dev_util"], [172, 3, 1, "", "get_all_ivy_arrays_on_dev"], [173, 3, 1, "", "gpu_is_available"], [174, 3, 1, "", "num_cpu_cores"], [175, 3, 1, "", "num_gpus"], [176, 3, 1, "", "num_ivy_arrays_on_dev"], [177, 3, 1, "", "percent_used_mem_on_dev"], [178, 3, 1, "", "print_all_ivy_arrays_on_dev"], [179, 3, 1, "", "set_default_device"], [180, 3, 1, "", "set_split_factor"], [181, 3, 1, "", "split_factor"], [182, 3, 1, "", "split_func_call"], [183, 3, 1, "", "to_device"], [184, 3, 1, "", "total_mem_on_dev"], [185, 3, 1, "", "tpu_is_available"], [186, 3, 1, "", "unset_default_device"], [187, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[141, 2, 1, "", "__enter__"], [141, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "da_tune_step"], [141, 5, 1, "", "dim_size"], [141, 2, 1, "", "ds_tune_step"], [141, 2, 1, "", "map"], [141, 2, 1, "", "repeated_config_check"], [141, 5, 1, "", "tune_step"], [141, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[149, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[141, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "items"], [150, 2, 1, "", "keys"], [150, 5, 1, "", "shape"], [150, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "at_dev"], [151, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "start"], [153, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[189, 3, 1, "", "abs"], [190, 3, 1, "", "acos"], [191, 3, 1, "", "acosh"], [192, 3, 1, "", "add"], [193, 3, 1, "", "asin"], [194, 3, 1, "", "asinh"], [195, 3, 1, "", "atan"], [196, 3, 1, "", "atan2"], [197, 3, 1, "", "atanh"], [198, 3, 1, "", "bitwise_and"], [199, 3, 1, "", "bitwise_invert"], [200, 3, 1, "", "bitwise_left_shift"], [201, 3, 1, "", "bitwise_or"], [202, 3, 1, "", "bitwise_right_shift"], [203, 3, 1, "", "bitwise_xor"], [204, 3, 1, "", "ceil"], [205, 3, 1, "", "cos"], [206, 3, 1, "", "cosh"], [207, 3, 1, "", "divide"], [208, 3, 1, "", "equal"], [209, 3, 1, "", "erf"], [210, 3, 1, "", "exp"], [211, 3, 1, "", "expm1"], [212, 3, 1, "", "floor"], [213, 3, 1, "", "floor_divide"], [214, 3, 1, "", "greater"], [215, 3, 1, "", "greater_equal"], [216, 3, 1, "", "isfinite"], [217, 3, 1, "", "isinf"], [218, 3, 1, "", "isnan"], [219, 3, 1, "", "less"], [220, 3, 1, "", "less_equal"], [221, 3, 1, "", "log"], [222, 3, 1, "", "log10"], [223, 3, 1, "", "log1p"], [224, 3, 1, "", "log2"], [225, 3, 1, "", "logaddexp"], [226, 3, 1, "", "logical_and"], [227, 3, 1, "", "logical_not"], [228, 3, 1, "", "logical_or"], [229, 3, 1, "", "logical_xor"], [230, 3, 1, "", "maximum"], [231, 3, 1, "", "minimum"], [232, 3, 1, "", "multiply"], [233, 3, 1, "", "negative"], [234, 3, 1, "", "not_equal"], [235, 3, 1, "", "positive"], [236, 3, 1, "", "pow"], [237, 3, 1, "", "remainder"], [238, 3, 1, "", "round"], [239, 3, 1, "", "sign"], [240, 3, 1, "", "sin"], [241, 3, 1, "", "sinh"], [242, 3, 1, "", "sqrt"], [243, 3, 1, "", "square"], [244, 3, 1, "", "subtract"], [245, 3, 1, "", "tan"], [246, 3, 1, "", "tanh"], [247, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[249, 3, 1, "", "all_equal"], [250, 3, 1, "", "arg_info"], [251, 3, 1, "", "arg_names"], [252, 3, 1, "", "array_equal"], [253, 3, 1, "", "arrays_equal"], [254, 3, 1, "", "assert_supports_inplace"], [255, 3, 1, "", "cache_fn"], [256, 3, 1, "", "clip_matrix_norm"], [257, 3, 1, "", "clip_vector_norm"], [258, 3, 1, "", "container_types"], [259, 3, 1, "", "copy_array"], [260, 3, 1, "", "cumprod"], [261, 3, 1, "", "cumsum"], [262, 3, 1, "", "current_backend_str"], [263, 3, 1, "", "default"], [264, 3, 1, "", "einops_rearrange"], [265, 3, 1, "", "einops_reduce"], [266, 3, 1, "", "einops_repeat"], [267, 3, 1, "", "exists"], [268, 3, 1, "", "floormod"], [269, 3, 1, "", "fourier_encode"], [270, 3, 1, "", "gather"], [271, 3, 1, "", "gather_nd"], [272, 3, 1, "", "get_all_arrays_in_memory"], [273, 3, 1, "", "get_min_base"], [274, 3, 1, "", "get_min_denominator"], [275, 3, 1, "", "get_num_dims"], [276, 3, 1, "", "get_referrers_recursive"], [277, 3, 1, "", "has_nans"], [278, 3, 1, "", "indices_where"], [279, 3, 1, "", "inplace_arrays_supported"], [280, 3, 1, "", "inplace_decrement"], [281, 3, 1, "", "inplace_increment"], [282, 3, 1, "", "inplace_update"], [283, 3, 1, "", "inplace_variables_supported"], [284, 3, 1, "", "is_array"], [285, 3, 1, "", "is_ivy_array"], [286, 3, 1, "", "is_ivy_container"], [287, 3, 1, "", "is_native_array"], [288, 3, 1, "", "match_kwargs"], [289, 3, 1, "", "multiprocessing"], [290, 3, 1, "", "num_arrays_in_memory"], [291, 3, 1, "", "one_hot"], [292, 3, 1, "", "print_all_arrays_in_memory"], [293, 3, 1, "", "queue_timeout"], [294, 3, 1, "", "scatter_flat"], [295, 3, 1, "", "scatter_nd"], [296, 3, 1, "", "set_min_base"], [297, 3, 1, "", "set_min_denominator"], [298, 3, 1, "", "set_queue_timeout"], [299, 3, 1, "", "set_tmp_dir"], [300, 3, 1, "", "shape"], [301, 3, 1, "", "shape_to_tuple"], [302, 3, 1, "", "stable_divide"], [303, 3, 1, "", "stable_pow"], [304, 3, 1, "", "supports_inplace"], [305, 3, 1, "", "tmp_dir"], [306, 3, 1, "", "to_list"], [307, 3, 1, "", "to_numpy"], [308, 3, 1, "", "to_scalar"], [309, 3, 1, "", "try_else_none"], [310, 3, 1, "", "unstack"], [311, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[312, 1, 1, "", "GradientTracking"], [313, 3, 1, "", "adam_step"], [314, 3, 1, "", "adam_update"], [315, 3, 1, "", "execute_with_gradients"], [316, 3, 1, "", "gradient_descent_update"], [317, 3, 1, "", "is_variable"], [318, 3, 1, "", "lamb_update"], [319, 3, 1, "", "lars_update"], [320, 3, 1, "", "optimizer_update"], [321, 3, 1, "", "set_with_grads"], [322, 3, 1, "", "stop_gradient"], [323, 3, 1, "", "unset_with_grads"], [324, 3, 1, "", "variable"], [325, 3, 1, "", "variable_data"], [326, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[312, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[328, 3, 1, "", "bilinear_resample"], [329, 3, 1, "", "float_img_to_uint8_img"], [330, 3, 1, "", "gradient_image"], [331, 3, 1, "", "linear_resample"], [332, 3, 1, "", "random_crop"], [333, 3, 1, "", "stack_images"], [334, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[336, 3, 1, "", "conv1d"], [337, 3, 1, "", "conv1d_transpose"], [338, 3, 1, "", "conv2d"], [339, 3, 1, "", "conv2d_transpose"], [340, 3, 1, "", "conv3d"], [341, 3, 1, "", "conv3d_transpose"], [342, 3, 1, "", "depthwise_conv2d"], [343, 3, 1, "", "dropout"], [344, 3, 1, "", "linear"], [345, 3, 1, "", "lstm_update"], [346, 3, 1, "", "multi_head_attention"], [347, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[349, 3, 1, "", "cholesky"], [350, 3, 1, "", "cross"], [351, 3, 1, "", "det"], [352, 3, 1, "", "diagonal"], [353, 3, 1, "", "eigh"], [354, 3, 1, "", "eigvalsh"], [355, 3, 1, "", "inv"], [356, 3, 1, "", "matmul"], [357, 3, 1, "", "matrix_norm"], [358, 3, 1, "", "matrix_power"], [359, 3, 1, "", "matrix_rank"], [360, 3, 1, "", "matrix_transpose"], [361, 3, 1, "", "outer"], [362, 3, 1, "", "pinv"], [363, 3, 1, "", "qr"], [364, 3, 1, "", "slogdet"], [365, 3, 1, "", "solve"], [366, 3, 1, "", "svd"], [367, 3, 1, "", "svdvals"], [368, 3, 1, "", "tensordot"], [369, 3, 1, "", "trace"], [370, 3, 1, "", "vecdot"], [371, 3, 1, "", "vector_norm"], [372, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[374, 3, 1, "", "binary_cross_entropy"], [375, 3, 1, "", "cross_entropy"], [376, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[378, 3, 1, "", "clip"], [379, 3, 1, "", "concat"], [380, 3, 1, "", "constant_pad"], [381, 3, 1, "", "expand_dims"], [382, 3, 1, "", "flip"], [383, 3, 1, "", "permute_dims"], [384, 3, 1, "", "repeat"], [385, 3, 1, "", "reshape"], [386, 3, 1, "", "roll"], [387, 3, 1, "", "split"], [388, 3, 1, "", "squeeze"], [389, 3, 1, "", "stack"], [390, 3, 1, "", "swapaxes"], [391, 3, 1, "", "tile"], [392, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[394, 3, 1, "", "fomaml_step"], [395, 3, 1, "", "maml_step"], [396, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[398, 3, 1, "", "all_nested_indices"], [399, 3, 1, "", "copy_nest"], [400, 3, 1, "", "index_nest"], [401, 3, 1, "", "insert_into_nest_at_index"], [402, 3, 1, "", "insert_into_nest_at_indices"], [403, 3, 1, "", "map"], [404, 3, 1, "", "map_nest_at_index"], [405, 3, 1, "", "map_nest_at_indices"], [406, 3, 1, "", "multi_index_nest"], [407, 3, 1, "", "nested_any"], [408, 3, 1, "", "nested_indices_where"], [409, 3, 1, "", "nested_map"], [410, 3, 1, "", "nested_multi_map"], [411, 3, 1, "", "prune_nest_at_index"], [412, 3, 1, "", "prune_nest_at_indices"], [413, 3, 1, "", "set_nest_at_index"], [414, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[416, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[418, 3, 1, "", "multinomial"], [419, 3, 1, "", "randint"], [420, 3, 1, "", "random_normal"], [421, 3, 1, "", "random_uniform"], [422, 3, 1, "", "seed"], [423, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[425, 3, 1, "", "argmax"], [426, 3, 1, "", "argmin"], [427, 3, 1, "", "nonzero"], [428, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[430, 3, 1, "", "unique_all"], [431, 3, 1, "", "unique_counts"], [432, 3, 1, "", "unique_inverse"], [433, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[435, 3, 1, "", "argsort"], [436, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[438, 3, 1, "", "einsum"], [439, 3, 1, "", "max"], [440, 3, 1, "", "mean"], [441, 3, 1, "", "min"], [442, 3, 1, "", "prod"], [443, 3, 1, "", "std"], [444, 3, 1, "", "sum"], [445, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[447, 3, 1, "", "all"], [448, 3, 1, "", "any"]], "ivy.inspection": [[453, 3, 1, "", "add_array_specs"], [454, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[456, 0, 0, "-", "activations"], [459, 0, 0, "-", "converters"], [461, 0, 0, "-", "initializers"], [467, 0, 0, "-", "layers"], [479, 0, 0, "-", "module"], [481, 0, 0, "-", "norms"], [483, 0, 0, "-", "optimizers"], [489, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[457, 1, 1, "", "GEGLU"], [458, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[457, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[458, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[460, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[461, 1, 1, "", "Constant"], [462, 1, 1, "", "FirstLayerSiren"], [463, 1, 1, "", "GlorotUniform"], [461, 1, 1, "", "KaimingNormal"], [464, 1, 1, "", "Ones"], [465, 1, 1, "", "Siren"], [461, 1, 1, "", "Uniform"], [466, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[461, 2, 1, "", "__init__"], [461, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[462, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[463, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[461, 2, 1, "", "__init__"], [461, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[464, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[465, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[461, 2, 1, "", "__init__"], [461, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[468, 1, 1, "", "Conv1D"], [469, 1, 1, "", "Conv1DTranspose"], [470, 1, 1, "", "Conv2D"], [471, 1, 1, "", "Conv2DTranspose"], [472, 1, 1, "", "Conv3D"], [473, 1, 1, "", "Conv3DTranspose"], [474, 1, 1, "", "DepthwiseConv2D"], [475, 1, 1, "", "Dropout"], [476, 1, 1, "", "LSTM"], [477, 1, 1, "", "Linear"], [478, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[473, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[474, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[475, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[477, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[478, 2, 1, "", "__init__"]], "ivy.stateful.module": [[480, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[480, 2, 1, "", "__init__"], [480, 2, 1, "", "build"], [480, 5, 1, "", "build_mode"], [480, 5, 1, "", "built"], [480, 2, 1, "", "check_submod_rets"], [480, 2, 1, "", "get_mod_key"], [480, 2, 1, "", "mod_depth"], [480, 2, 1, "", "mod_height"], [480, 2, 1, "", "mod_with_top_mod_key_chain"], [480, 2, 1, "", "save_weights"], [480, 2, 1, "", "show_mod_in_top_mod"], [480, 2, 1, "", "show_structure"], [480, 2, 1, "", "show_v_in_top_v"], [480, 2, 1, "", "sub_mods"], [480, 2, 1, "", "track_submod_call_order"], [480, 2, 1, "", "track_submod_rets"], [480, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[482, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[482, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[484, 1, 1, "", "Adam"], [485, 1, 1, "", "LAMB"], [486, 1, 1, "", "LARS"], [487, 1, 1, "", "Optimizer"], [488, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[484, 2, 1, "", "__init__"], [484, 2, 1, "", "set_state"], [484, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[485, 2, 1, "", "__init__"], [485, 2, 1, "", "set_state"], [485, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[486, 2, 1, "", "__init__"], [486, 2, 1, "", "set_state"], [486, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[487, 2, 1, "", "__init__"], [487, 2, 1, "", "set_state"], [487, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[488, 2, 1, "", "__init__"], [488, 2, 1, "", "set_state"], [488, 5, 1, "", "state"]], "ivy.stateful.sequential": [[490, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[490, 2, 1, "", "__init__"]], "ivy.verbosity": [[493, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 22, 28, 37, 54], "handler": [0, 37], "choose_random_backend": 1, "clear_backend_stack": 2, "current_backend": 3, "get_backend": 4, "set_backend": 5, "try_import_ivy_jax": 6, "try_import_ivy_mxnet": 7, "try_import_ivy_numpi": 8, "try_import_ivy_tf": 9, "try_import_ivy_torch": 10, "unset_backend": 11, "background": [12, 449], "ml": 13, "explos": 13, "standard": 14, "skeptic": 14, "complimentari": 14, "v": [14, 54], "competit": 14, "do": 14, "work": [14, 20], "The": [14, 18, 39, 54], "arrai": [14, 25, 30, 35, 39], "api": [14, 19, 22, 25, 31, 37, 39, 41, 42], "why": 15, "unifi": [15, 39], "No": [15, 17], "more": 15, "re": 15, "implement": 15, "infinit": 15, "shelf": 15, "life": 15, "contribut": [16, 449], "set": [17, 28, 429], "up": 17, "clone": 17, "ivi": [17, 22, 24, 26, 30, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "pycharm": 17, "virtual": 17, "environ": 17, "docker": [17, 18, 20], "us": [17, 20, 40], "miniconda": [17, 20], "venv": [17, 20], "interpret": 17, "window": 17, "maco": 17, "ubuntu": 17, "github": 17, "codespac": 17, "pre": 17, "commit": [17, 18], "basic": 18, "get": 18, "help": 18, "todo": 18, "list": 18, "issu": 18, "manag": 18, "your": 18, "fork": 18, "pull": 18, "request": 18, "small": 18, "often": 18, "run": 18, "test": [18, 25, 26], "local": 18, "With": 18, "open": 19, "task": 19, "function": [19, 27, 29, 31, 32, 33, 35, 37, 42, 54, 67, 70, 74], "format": 19, "frontend": [19, 42, 64], "build": [20, 37], "doc": 20, "dockerless": 20, "document": 20, "pipelin": [20, 54], "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "deep": 21, "dive": 21, "navig": 22, "code": 22, "categor": 22, "submodul": 22, "design": [22, 36, 449], "docstr": [23, 24], "exampl": [24, 35], "tan": [24, 68, 72, 75, 79, 245], "roll": [24, 386], "add": [24, 71, 78, 192], "hypothesi": 26, "data": [26, 32, 40, 54, 111, 429, 430, 431, 433], "gener": [26, 248], "self": 26, "consist": 26, "explicit": 26, "test_array_funct": 26, "type": [27, 32, 54, 111], "primari": 27, "composit": 27, "mix": 27, "standalon": 27, "nestabl": [27, 31, 35], "conveni": 27, "wrap": 29, "nativ": 30, "handl": 30, "contain": [31, 40], "instanc": [31, 39], "method": [31, 39, 40], "static": 31, "special": 31, "modul": [32, 33, 41, 479, 480], "argument": [32, 33, 34, 35], "other": [32, 33], "devic": [33, 35, 141], "inplac": 34, "updat": 34, "out": [34, 35], "copi": 34, "dtype": [35, 122], "number": 35, "oper": [35, 39, 54], "integ": 35, "sequenc": 35, "block": 37, "framework": [37, 38], "graph": [37, 42], "compil": [37, 42, 89, 90], "class": 39, "monkei": 39, "patch": 39, "construct": 40, "represent": 40, "recurs": 40, "built": 40, "ins": 40, "access": 40, "save": 40, "load": 40, "comparison": 40, "custom": [40, 54], "case": 40, "compartment": 40, "configur": 40, "network": [40, 42], "weight": 40, "state": [41, 54], "initi": [41, 461], "optim": [41, 483, 487], "transpil": 42, "role": 42, "convert": [42, 459], "model": [42, 49, 54], "builder": 44, "ecosystem": 45, "gym": [46, 53], "mech": 47, "memori": [48, 53], "robot": [50, 53], "vision": [51, 53], "extens": [52, 449], "appli": 53, "librari": 53, "mechan": 53, "faq": 54, "mana": 54, "version": 54, "dynam": 54, "size": 54, "shape": [54, 300, 429, 430, 431, 433], "check": 54, "control": 54, "flow": 54, "auto": 54, "differenti": 54, "replica": 54, "parallel": 54, "support": 54, "altern": 54, "structur": 54, "func": 55, "wrapper": 55, "handle_nest": 56, "handle_out_argu": 57, "infer_devic": 58, "infer_dtyp": 59, "inputs_to_ivy_arrai": 60, "inputs_to_native_arrai": 61, "outputs_to_ivy_arrai": 62, "to_native_arrays_and_back": 63, "jax": 65, "lax": 66, "mathemat": [67, 70, 74], "numpi": 69, "tensorflow": 73, "torch": 76, "pointwis": 77, "op": 77, "activ": [81, 456], "gelu": [82, 458], "leaky_relu": 83, "relu": 84, "sigmoid": 85, "softmax": 86, "softplu": 87, "tanh": [88, 246], "constant": 91, "creation": 92, "note": [92, 98], "arang": 93, "asarrai": 94, "empti": 95, "empty_lik": 96, "ey": 97, "from_dlpack": 98, "full": 99, "full_lik": 100, "linspac": 101, "logspac": 102, "meshgrid": 103, "native_arrai": 104, "ones": 105, "ones_lik": 106, "tril": 107, "triu": 108, "zero": [109, 466], "zeros_lik": 110, "as_ivy_dtyp": 112, "as_native_dtyp": 113, "astyp": 114, "broadcast_arrai": 115, "broadcast_to": 116, "can_cast": 117, "closest_valid_dtyp": 118, "default_dtyp": 119, "default_float_dtyp": 120, "default_int_dtyp": 121, "dtype_bit": 123, "finfo": 124, "function_supported_dtyp": 125, "function_unsupported_dtyp": 126, "iinfo": 127, "invalid_dtyp": 128, "is_float_dtyp": 129, "is_int_dtyp": 130, "promote_typ": 131, "result_typ": 132, "set_default_dtyp": 133, "set_default_float_dtyp": 134, "set_default_int_dtyp": 135, "type_promote_arrai": 136, "unset_default_dtyp": 137, "unset_default_float_dtyp": 138, "unset_default_int_dtyp": 139, "valid_dtyp": 140, "devcloneditem": 142, "devclonedit": 143, "devclonednest": 144, "devdistitem": 145, "devdistit": 146, "devdistnest": 147, "devmapp": 148, "devmappermultiproc": 149, "multidevitem": 150, "multidevit": 151, "multidevnest": 152, "profil": 153, "as_ivy_dev": 154, "as_native_dev": 155, "clear_mem_on_dev": 156, "default_devic": 157, "dev": 158, "dev_clon": 159, "dev_clone_arrai": 160, "dev_clone_it": 161, "dev_clone_nest": 162, "dev_dist": 163, "dev_dist_arrai": 164, "dev_dist_it": 165, "dev_dist_nest": 166, "dev_unifi": 167, "dev_unify_arrai": 168, "dev_unify_it": 169, "dev_unify_nest": 170, "dev_util": 171, "get_all_ivy_arrays_on_dev": 172, "gpu_is_avail": 173, "num_cpu_cor": 174, "num_gpu": 175, "num_ivy_arrays_on_dev": 176, "percent_used_mem_on_dev": 177, "print_all_ivy_arrays_on_dev": 178, "set_default_devic": 179, "set_split_factor": 180, "split_factor": 181, "split_func_cal": 182, "to_devic": 183, "total_mem_on_dev": 184, "tpu_is_avail": 185, "unset_default_devic": 186, "used_mem_on_dev": 187, "elementwis": 188, "ab": 189, "aco": 190, "acosh": 191, "asin": 193, "asinh": 194, "atan": 195, "atan2": 196, "atanh": 197, "bitwise_and": 198, "bitwise_invert": 199, "bitwise_left_shift": 200, "bitwise_or": 201, "bitwise_right_shift": 202, "bitwise_xor": 203, "ceil": 204, "co": 205, "cosh": 206, "divid": 207, "equal": 208, "erf": 209, "exp": 210, "expm1": 211, "floor": 212, "floor_divid": 213, "greater": 214, "greater_equ": 215, "isfinit": 216, "isinf": 217, "isnan": 218, "less": 219, "less_equ": 220, "log": 221, "log10": 222, "log1p": 223, "log2": 224, "logaddexp": 225, "logical_and": 226, "logical_not": 227, "logical_or": 228, "logical_xor": 229, "maximum": 230, "minimum": 231, "multipli": 232, "neg": 233, "not_equ": 234, "posit": 235, "pow": 236, "remaind": 237, "round": 238, "sign": 239, "sin": 240, "sinh": 241, "sqrt": 242, "squar": 243, "subtract": 244, "trunc": 247, "all_equ": 249, "arg_info": 250, "arg_nam": 251, "array_equ": 252, "arrays_equ": 253, "assert_supports_inplac": 254, "cache_fn": 255, "clip_matrix_norm": 256, "clip_vector_norm": 257, "container_typ": 258, "copy_arrai": 259, "cumprod": 260, "cumsum": 261, "current_backend_str": 262, "default": 263, "einops_rearrang": 264, "einops_reduc": 265, "einops_repeat": 266, "exist": 267, "floormod": 268, "fourier_encod": 269, "gather": 270, "gather_nd": 271, "get_all_arrays_in_memori": 272, "get_min_bas": 273, "get_min_denomin": 274, "get_num_dim": 275, "get_referrers_recurs": 276, "has_nan": 277, "indices_wher": 278, "inplace_arrays_support": 279, "inplace_decr": 280, "inplace_incr": 281, "inplace_upd": 282, "inplace_variables_support": 283, "is_arrai": 284, "is_ivy_arrai": 285, "is_ivy_contain": 286, "is_native_arrai": 287, "match_kwarg": 288, "multiprocess": 289, "num_arrays_in_memori": 290, "one_hot": 291, "print_all_arrays_in_memori": 292, "queue_timeout": 293, "scatter_flat": 294, "scatter_nd": 295, "set_min_bas": 296, "set_min_denomin": 297, "set_queue_timeout": 298, "set_tmp_dir": 299, "shape_to_tupl": 301, "stable_divid": 302, "stable_pow": 303, "supports_inplac": 304, "tmp_dir": 305, "to_list": 306, "to_numpi": 307, "to_scalar": 308, "try_else_non": 309, "unstack": 310, "value_is_nan": 311, "gradient": 312, "adam_step": 313, "adam_upd": 314, "execute_with_gradi": 315, "gradient_descent_upd": 316, "is_vari": 317, "lamb_upd": 318, "lars_upd": 319, "optimizer_upd": 320, "set_with_grad": 321, "stop_gradi": 322, "unset_with_grad": 323, "variabl": 324, "variable_data": 325, "with_grad": 326, "imag": 327, "bilinear_resampl": 328, "float_img_to_uint8_img": 329, "gradient_imag": 330, "linear_resampl": 331, "random_crop": 332, "stack_imag": 333, "uint8_img_to_float_img": 334, "layer": [335, 467], "conv1d": [336, 468], "conv1d_transpos": 337, "conv2d": [338, 470], "conv2d_transpos": 339, "conv3d": [340, 472], "conv3d_transpos": 341, "depthwise_conv2d": 342, "dropout": [343, 475], "linear": [344, 348, 477], "lstm_updat": 345, "multi_head_attent": 346, "scaled_dot_product_attent": 347, "algebra": 348, "choleski": 349, "cross": 350, "det": 351, "diagon": 352, "eigh": 353, "eigvalsh": 354, "inv": 355, "matmul": 356, "matrix_norm": 357, "matrix_pow": 358, "matrix_rank": 359, "matrix_transpos": 360, "outer": 361, "pinv": 362, "qr": 363, "slogdet": 364, "solv": 365, "svd": 366, "svdval": 367, "tensordot": 368, "trace": 369, "vecdot": 370, "vector_norm": 371, "vector_to_skew_symmetric_matrix": 372, "loss": 373, "binary_cross_entropi": 374, "cross_entropi": 375, "sparse_cross_entropi": 376, "manipul": 377, "clip": 378, "concat": 379, "constant_pad": 380, "expand_dim": 381, "flip": 382, "permute_dim": 383, "repeat": 384, "reshap": 385, "split": 387, "squeez": 388, "stack": 389, "swapax": 390, "tile": 391, "zero_pad": 392, "meta": 393, "fomaml_step": 394, "maml_step": 395, "reptile_step": 396, "nest": 397, "all_nested_indic": 398, "copy_nest": 399, "index_nest": 400, "insert_into_nest_at_index": 401, "insert_into_nest_at_indic": 402, "map": 403, "map_nest_at_index": 404, "map_nest_at_indic": 405, "multi_index_nest": 406, "nested_ani": 407, "nested_indices_wher": 408, "nested_map": 409, "nested_multi_map": 410, "prune_nest_at_index": 411, "prune_nest_at_indic": 412, "set_nest_at_index": 413, "set_nest_at_indic": 414, "norm": [415, 481], "layer_norm": 416, "random": 417, "multinomi": 418, "randint": 419, "random_norm": 420, "random_uniform": 421, "seed": 422, "shuffl": 423, "search": 424, "argmax": 425, "argmin": 426, "nonzero": 427, "where": 428, "depend": [429, 430, 431, 433], "output": [429, 430, 431, 433], "unique_al": 430, "unique_count": 431, "unique_invers": 432, "unique_valu": 433, "sort": [434, 436], "argsort": 435, "statist": 437, "einsum": 438, "max": 439, "mean": 440, "min": 441, "prod": 442, "std": 443, "sum": 444, "var": 445, "util": 446, "all": 447, "ani": 448, "content": 449, "overview": 449, "quick": 449, "start": 449, "roadmap": [449, 455], "citat": 449, "inspect": 452, "add_array_spec": 453, "fn_array_spec": 454, "geglu": 457, "to_ivy_modul": 460, "firstlayersiren": 462, "glorotuniform": 463, "Ones": 464, "siren": 465, "conv1dtranspos": 469, "conv2dtranspos": 471, "conv3dtranspos": 473, "depthwiseconv2d": 474, "lstm": 476, "multiheadattent": 478, "layernorm": 482, "adam": 484, "lamb": 485, "lar": 486, "sgd": 488, "sequenti": [489, 490], "verbos": 492, "cprint": 493}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})