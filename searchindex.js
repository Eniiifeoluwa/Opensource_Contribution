Search.setIndex({"docnames": ["backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "DevMapper", "DevMapperMultiProc", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 5, 11, 19, 29, 31, 35, 36, 37, 38, 40, 42, 43, 45, 46, 47, 57, 58, 59, 100, 115, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 234, 236, 267, 273, 292, 297, 310, 382, 384, 394, 434, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "backend_handl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 434], "contextmanag": 0, "modul": [0, 3, 4, 15, 17, 19, 31, 32, 33, 34, 39, 42, 43, 45, 47, 58, 59, 234, 274, 402, 403, 404, 405, 406, 434, 441, 442, 443, 444, 445, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 474, 475], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 35, 36, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "base": [0, 18, 31, 36, 42, 58, 81, 91, 100, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 174, 196, 207, 208, 209, 210, 222, 234, 258, 281, 288, 297, 414, 415, 416, 418, 422, 423, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "object": [0, 44, 47, 81, 87, 100, 114, 127, 297, 382, 385, 387, 389, 390, 391, 396, 397, 398, 399, 402, 408, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465], "__init__": [0, 3, 4, 27, 37, 42, 44, 45, 46, 47, 100, 127, 134, 135, 136, 137, 138, 139, 297, 402, 403, 404, 405, 406, 434, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "choose_random_backend": 0, "exclud": [0, 1, 29, 42, 81, 82, 402, 406], "none": [0, 1, 4, 11, 27, 29, 32, 37, 38, 39, 40, 42, 44, 46, 47, 70, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 109, 110, 111, 114, 115, 127, 134, 135, 142, 143, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 245, 246, 248, 252, 253, 255, 256, 261, 264, 268, 274, 276, 279, 280, 281, 282, 287, 288, 294, 297, 299, 301, 303, 304, 305, 311, 312, 317, 320, 322, 324, 326, 329, 330, 331, 332, 333, 342, 344, 347, 356, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 414, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 444, 445, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "clear_backend_stack": 0, "current_backend": [0, 27, 32], "arg": [0, 3, 19, 42, 44, 46, 127, 134, 148, 152, 156, 168, 234, 280, 444, 445, 464, 465], "kwarg": [0, 3, 42, 44, 46, 127, 134, 148, 152, 156, 234, 273, 444, 445, 464, 465], "return": [0, 3, 4, 11, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 444, 445, 452, 461, 462, 468, 472], "current": [0, 3, 4, 11, 15, 17, 19, 32, 38, 42, 47, 58, 59, 100, 108, 116, 126, 127, 134, 157, 158, 162, 164, 234, 257, 264, 268, 275, 277, 382, 383, 392, 393, 434], "prioriti": [0, 3, 18, 39], "global_backend": [0, 3], "argument": [0, 3, 4, 13, 26, 27, 28, 29, 31, 32, 34, 35, 36, 42, 44, 45, 78, 79, 81, 82, 100, 119, 127, 134, 135, 148, 152, 156, 234, 236, 240, 248, 273, 280, 320, 323, 382, 388, 422, 429, 437, 439, 444, 445, 464, 465], "": [0, 3, 4, 5, 11, 14, 15, 16, 17, 18, 19, 26, 29, 31, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 80, 81, 92, 96, 97, 174, 223, 234, 238, 297, 299, 301, 303, 305, 333, 351, 352, 382, 388, 394, 422, 423, 428, 430, 434, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "paramet": [0, 3, 4, 27, 28, 31, 44, 45, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 444, 445, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "from": [0, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 81, 82, 83, 85, 87, 88, 89, 92, 93, 95, 99, 100, 106, 108, 119, 127, 134, 135, 162, 168, 174, 200, 228, 234, 248, 255, 256, 291, 297, 299, 303, 312, 317, 320, 328, 331, 333, 337, 351, 355, 362, 367, 370, 373, 378, 379, 380, 381, 382, 384, 394, 395, 402, 403, 404, 405, 406, 409, 413, 414, 415, 417, 422, 427, 428, 429, 430, 431, 432, 433, 434, 440, 444, 445, 452, 460, 463, 468, 472], "which": [0, 3, 4, 13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 70, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 112, 114, 115, 116, 126, 127, 134, 135, 144, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 164, 166, 167, 168, 174, 223, 234, 245, 246, 248, 255, 256, 257, 263, 275, 276, 277, 279, 280, 295, 297, 299, 300, 301, 303, 304, 305, 307, 309, 310, 312, 314, 316, 320, 331, 332, 333, 335, 337, 342, 350, 351, 355, 356, 358, 360, 361, 362, 364, 367, 369, 371, 372, 374, 382, 387, 388, 389, 390, 395, 396, 397, 398, 399, 402, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 444, 445, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "try": [0, 3, 12, 14, 15, 17, 18, 19, 35, 44, 59, 234, 294, 434], "infer": [0, 3, 26, 37, 38, 42, 47, 78, 79, 81, 82, 83, 85, 88, 89, 93, 95, 99, 174, 200, 234, 260, 285, 312, 317, 362, 370], "when": [0, 3, 13, 14, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 59, 100, 103, 127, 174, 178, 197, 222, 234, 240, 267, 288, 358, 359, 360, 361, 382, 393, 409, 410, 411, 413, 422, 424, 426, 428, 430, 464, 465], "i": [0, 3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 108, 112, 116, 117, 118, 126, 127, 134, 135, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 163, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 190, 191, 192, 196, 197, 198, 199, 202, 203, 204, 207, 208, 210, 211, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 231, 233, 234, 235, 237, 238, 240, 241, 242, 245, 246, 248, 252, 254, 255, 262, 263, 269, 270, 271, 272, 273, 274, 278, 279, 280, 283, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 312, 316, 320, 323, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 344, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 400, 401, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 444, 445, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "global": [0, 3, 4, 5, 11, 32, 33, 37, 38, 42, 100, 109, 110, 111, 127, 134, 135, 166, 167, 168, 234, 258, 259, 278, 281, 282, 283, 287, 288, 400, 401, 466, 467], "set": [0, 3, 4, 5, 11, 13, 16, 26, 27, 32, 34, 35, 36, 37, 38, 39, 42, 44, 45, 127, 153, 154, 165, 166, 167, 168, 174, 182, 234, 235, 281, 282, 283, 284, 297, 299, 301, 302, 303, 304, 305, 333, 335, 342, 344, 347, 350, 382, 383, 392, 393, 394, 398, 399, 402, 407, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 428, 430, 452, 461, 468, 469, 470, 471, 472, 473], "ret": [0, 3, 4, 11, 27, 28, 42, 47, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 134, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 444, 445, 468, 472], "exampl": [0, 3, 4, 5, 11, 15, 17, 18, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 58, 59, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 88, 89, 92, 94, 95, 98, 99, 100, 103, 127, 144, 159, 160, 161, 162, 169, 171, 174, 178, 183, 185, 188, 190, 191, 196, 200, 201, 205, 216, 217, 219, 231, 234, 237, 238, 244, 259, 270, 285, 291, 292, 293, 312, 315, 316, 318, 319, 320, 321, 323, 325, 327, 333, 334, 335, 336, 337, 340, 344, 351, 353, 354, 358, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 416, 419, 420, 422, 423, 428, 429, 431, 432, 434], "If": [0, 3, 4, 5, 13, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 59, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 103, 105, 119, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 213, 214, 218, 222, 223, 225, 226, 227, 228, 231, 233, 297, 299, 301, 303, 304, 305, 333, 334, 335, 342, 344, 347, 348, 350, 351, 355, 356, 358, 359, 360, 361, 362, 366, 367, 371, 372, 373, 374, 378, 379, 380, 382, 394, 395, 402, 405, 406, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "import": [0, 3, 14, 27, 28, 29, 33, 35, 36, 37, 38, 39, 42, 44, 45, 47, 59, 312, 318, 434, 440], "numpi": [0, 3, 4, 5, 13, 14, 31, 37, 38, 39, 40, 42, 44, 47, 234, 292, 422, 423, 434], "np": [0, 3, 35, 37, 38, 39, 40, 44, 45, 47, 434], "x": [0, 3, 11, 19, 27, 28, 29, 32, 37, 39, 40, 42, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 98, 99, 100, 103, 105, 112, 127, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 162, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 216, 217, 219, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 263, 265, 266, 267, 269, 270, 271, 272, 276, 285, 289, 291, 292, 293, 295, 296, 297, 300, 302, 307, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 388, 392, 393, 394, 400, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 452, 463], "arrai": [0, 3, 26, 27, 28, 29, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 59, 60, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 112, 114, 115, 117, 118, 119, 127, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 275, 276, 277, 279, 280, 285, 289, 291, 292, 293, 295, 296, 297, 302, 307, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 384, 394, 395, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 452, 460, 463], "2": [0, 3, 17, 19, 29, 41, 42, 44, 45, 46, 47, 70, 72, 74, 80, 81, 88, 89, 92, 94, 95, 99, 100, 103, 127, 144, 160, 162, 169, 174, 178, 179, 181, 182, 185, 188, 191, 196, 200, 201, 205, 210, 216, 217, 219, 231, 234, 237, 238, 241, 242, 270, 285, 312, 313, 315, 316, 318, 319, 320, 323, 324, 325, 327, 333, 334, 335, 336, 337, 340, 341, 342, 344, 347, 348, 351, 353, 354, 356, 358, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 402, 403, 404, 405, 406, 408, 409, 411, 414, 416, 419, 420, 422, 423, 431, 432, 434], "0": [0, 3, 27, 28, 29, 42, 44, 45, 46, 47, 70, 72, 73, 74, 75, 76, 77, 81, 82, 86, 90, 91, 95, 96, 97, 98, 99, 100, 103, 114, 127, 128, 131, 134, 136, 140, 144, 149, 150, 151, 152, 153, 154, 155, 156, 162, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 190, 191, 192, 196, 197, 198, 201, 207, 208, 210, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 231, 233, 234, 237, 238, 241, 242, 244, 245, 246, 255, 256, 261, 270, 276, 279, 280, 285, 291, 292, 297, 298, 299, 303, 304, 312, 315, 316, 318, 320, 321, 323, 325, 327, 333, 334, 335, 336, 337, 340, 351, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 382, 394, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 418, 419, 420, 422, 423, 425, 428, 429, 430, 431, 432, 434, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475], "print": [0, 3, 4, 5, 11, 17, 29, 36, 42, 44, 45, 46, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 98, 99, 100, 103, 127, 144, 159, 160, 161, 162, 164, 171, 174, 178, 183, 185, 188, 190, 191, 196, 200, 201, 205, 216, 217, 219, 231, 234, 237, 238, 244, 259, 277, 285, 291, 292, 293, 312, 315, 316, 318, 319, 320, 321, 323, 325, 327, 333, 334, 335, 336, 337, 340, 351, 353, 354, 358, 360, 361, 362, 363, 366, 367, 369, 370, 371, 372, 373, 402, 403, 404, 405, 406, 408, 409, 411, 414, 416, 419, 420, 422, 423, 428, 429, 431, 432, 434], "function": [0, 3, 4, 5, 13, 19, 26, 27, 28, 29, 30, 31, 33, 35, 36, 39, 41, 43, 44, 45, 46, 57, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 441, 442, 443, 468, 471, 473], "py": [0, 3, 4, 27, 28, 32, 37, 38, 40, 42, 44, 46, 47, 402, 403, 404, 405, 406], "noqa": [0, 3, 4, 81, 92, 174, 178, 216, 217, 231, 333, 336, 362, 367, 371], "The": [0, 3, 4, 12, 13, 15, 16, 17, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 58, 70, 71, 72, 75, 77, 78, 79, 81, 82, 87, 91, 92, 96, 97, 100, 101, 102, 103, 107, 108, 113, 116, 126, 127, 134, 135, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 231, 233, 234, 237, 240, 241, 247, 248, 254, 256, 265, 266, 267, 269, 270, 271, 272, 274, 279, 280, 281, 282, 283, 286, 287, 288, 296, 297, 298, 299, 301, 303, 304, 305, 307, 310, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 444, 445, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472], "set_backend": [0, 3, 4, 11, 32, 33, 34, 37], "ha": [0, 3, 4, 13, 14, 15, 18, 28, 29, 32, 33, 37, 38, 42, 44, 46, 47, 58, 59, 81, 92, 174, 175, 218, 222, 333, 341, 349, 350, 351, 354, 362, 366, 373, 414, 415, 416, 418, 422, 425, 427, 428, 429, 430], "over": [0, 3, 13, 15, 28, 29, 39, 44, 59, 333, 342, 353, 355, 356, 400, 401, 402, 406, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 466, 467], "ani": [0, 3, 11, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 78, 79, 81, 83, 93, 174, 194, 201, 206, 234, 235, 248, 249, 250, 251, 252, 262, 269, 270, 271, 272, 287, 288, 297, 300, 320, 323, 382, 388, 392, 402, 406, 431, 434], "pass": [0, 3, 29, 30, 31, 32, 33, 35, 36, 39, 40, 44, 59, 100, 107, 127, 134, 168, 174, 182, 234, 240, 267, 297, 310, 378, 379, 380, 444, 445, 464, 465, 468, 472, 474, 475], "jax": [0, 3, 4, 5, 14, 15, 37, 38, 39, 40, 42, 44, 47, 59, 297, 302, 414, 415, 416, 418, 434], "get_backend": [0, 32], "specifi": [0, 4, 26, 31, 32, 37, 38, 39, 40, 42, 45, 46, 47, 81, 82, 84, 88, 90, 91, 94, 96, 97, 98, 100, 103, 105, 108, 127, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 162, 164, 167, 168, 169, 174, 223, 234, 255, 256, 262, 295, 312, 318, 333, 337, 342, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 371, 373, 374, 377, 382, 387, 389, 390, 396, 397, 398, 399, 409, 410, 411, 414, 415, 416, 418, 419, 420, 422, 423, 427, 429, 431, 432, 433], "isn": [0, 4, 18, 45], "t": [0, 4, 14, 15, 17, 18, 19, 29, 42, 44, 45, 46, 47, 59, 234, 238, 320, 329, 330], "associ": [0, 4, 18, 32, 34, 59, 174, 178, 218, 333, 344, 347, 357], "option": [0, 4, 17, 27, 28, 29, 32, 37, 38, 39, 40, 42, 47, 70, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 107, 109, 110, 111, 116, 126, 127, 143, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 245, 246, 247, 253, 255, 256, 274, 276, 279, 280, 287, 288, 297, 307, 320, 323, 327, 332, 333, 342, 344, 347, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 382, 383, 388, 393, 394, 402, 403, 404, 405, 406, 409, 410, 411, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "str": [0, 4, 37, 38, 81, 92, 100, 101, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 127, 140, 144, 149, 150, 151, 152, 168, 234, 247, 249, 250, 251, 274, 279, 280, 320, 321, 323, 325, 327, 333, 348, 382, 388, 422, 423], "we": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 42, 43, 44, 45, 46, 47, 58, 59, 297, 300, 422, 423, 434, 440], "want": [0, 4, 14, 16, 18, 31, 45, 46, 47, 59, 422, 423], "retriev": [0, 4], "e": [0, 4, 14, 15, 18, 19, 26, 45, 59, 80, 81, 92, 100, 102, 119, 127, 140, 174, 175, 182, 186, 188, 190, 196, 198, 199, 202, 207, 209, 216, 217, 219, 222, 223, 297, 299, 301, 303, 304, 305, 333, 335, 341, 344, 347, 350, 351, 356, 362, 374, 402, 405, 406, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430], "one": [0, 4, 14, 15, 17, 18, 29, 32, 35, 37, 39, 41, 44, 45, 47, 59, 81, 82, 92, 100, 104, 106, 108, 127, 153, 154, 155, 156, 168, 234, 273, 276, 279, 280, 333, 341, 342, 346, 348, 355, 356, 362, 366, 367, 373, 409, 410, 412, 414, 415, 416, 417, 418, 422, 423, 434], "default": [0, 4, 28, 29, 32, 37, 38, 40, 46, 70, 71, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 109, 110, 111, 112, 127, 134, 135, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 235, 241, 242, 245, 246, 253, 254, 255, 256, 260, 261, 262, 264, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 283, 285, 287, 288, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 342, 344, 347, 348, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 444, 445, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "torch": [0, 4, 11, 27, 32, 33, 35, 37, 38, 39, 40, 42, 44, 45, 46, 47, 59, 78, 79, 434], "tensorflow": [0, 4, 11, 14, 15, 37, 38, 39, 40, 42, 47, 59, 434], "mxnet": [0, 4, 14, 37, 38, 39, 42, 47, 434], "either": [0, 4, 11, 18, 19, 28, 29, 32, 33, 37, 38, 42, 44, 45, 59, 81, 87, 174, 178, 182, 203, 207, 208, 210, 211, 218, 223, 225, 226, 231, 234, 248, 269, 273, 274, 333, 341, 378, 379, 380, 381, 422, 427, 429, 452, 463, 464, 465], "doesn": [0, 4, 17, 19, 29, 42, 59], "matter": [0, 4, 13, 29], "been": [0, 4, 28, 32, 33, 37, 38, 40, 42, 58, 234, 249, 250, 251, 402, 403], "ivy_np": [0, 4], "us": [0, 4, 11, 15, 17, 18, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 58, 59, 80, 100, 113, 127, 134, 135, 159, 163, 166, 167, 168, 171, 173, 174, 178, 201, 216, 217, 219, 231, 234, 258, 259, 273, 279, 280, 281, 282, 287, 288, 297, 298, 299, 303, 304, 320, 328, 329, 331, 332, 333, 336, 337, 342, 353, 362, 363, 367, 369, 371, 378, 379, 380, 381, 382, 383, 385, 391, 392, 393, 395, 400, 401, 414, 415, 416, 422, 423, 431, 432, 434, 452, 460, 463, 464, 465, 466, 467, 468, 470, 471], "ivy_jax": [0, 4], "subsequ": [0, 5, 29, 31, 32, 35, 40, 46], "call": [0, 5, 11, 14, 19, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 59, 127, 168, 234, 278, 283, 294, 297, 300, 382, 383, 388, 392, 393, 452, 463, 464, 465, 468, 472], "nativ": [0, 5, 37, 39, 44, 45, 81, 93, 100, 101, 102, 107, 127, 140, 141, 142, 144, 163, 170, 173, 234, 267, 269, 272, 444, 445], "native_arrai": [0, 5, 11, 29, 81, 92, 174, 178, 201, 216, 217, 219, 231, 320, 323, 327, 333, 335, 336, 353, 358, 361, 362, 363, 367, 371, 372, 402, 403, 414, 416, 431, 432], "1": [0, 5, 11, 14, 15, 19, 29, 32, 41, 42, 44, 45, 46, 47, 59, 70, 73, 74, 75, 81, 82, 89, 90, 91, 92, 94, 95, 99, 100, 103, 114, 127, 130, 133, 134, 138, 144, 148, 152, 156, 161, 162, 167, 169, 174, 176, 177, 178, 179, 182, 185, 188, 190, 191, 192, 196, 197, 200, 201, 205, 207, 208, 209, 210, 216, 217, 219, 222, 225, 226, 231, 234, 237, 238, 244, 255, 256, 270, 276, 279, 280, 285, 288, 291, 292, 293, 295, 312, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 340, 344, 346, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 382, 394, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 414, 416, 419, 420, 421, 422, 423, 428, 429, 430, 431, 432, 433, 434, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "type": [0, 5, 11, 17, 26, 27, 28, 29, 34, 35, 36, 38, 39, 40, 42, 44, 45, 47, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 140, 141, 142, 144, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 267, 269, 270, 271, 272, 276, 279, 280, 281, 282, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 302, 307, 309, 312, 316, 318, 319, 320, 321, 323, 325, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 388, 392, 393, 394, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "ndarrai": [0, 5, 35, 37, 38, 39, 40, 44, 81, 83, 93, 234, 292], "Or": [0, 5, 45, 422, 423], "jaxlib": [0, 5, 17, 38, 40, 44], "xla_extens": [0, 5, 38, 40, 44], "devicearrai": [0, 5, 44], "try_import_ivy_jax": 0, "warn": [0, 6, 7, 8, 9, 10], "fals": [0, 6, 7, 8, 9, 10, 29, 37, 39, 45, 46, 47, 100, 103, 106, 112, 127, 144, 155, 159, 163, 168, 171, 173, 174, 200, 201, 202, 203, 204, 205, 213, 214, 234, 235, 237, 238, 245, 248, 252, 254, 260, 269, 270, 272, 273, 285, 295, 297, 299, 300, 301, 302, 303, 304, 305, 333, 334, 342, 351, 356, 362, 372, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 402, 403, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 444, 445, 464, 465, 468, 469, 470, 471, 472, 473], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 11, 42, 44], "adjust": [0, 11, 422, 428, 430], "dict": [0, 11, 36, 45, 46, 127, 134, 135, 149, 150, 151, 152, 234, 249, 250, 251, 382, 384, 385, 388, 391, 394, 395], "previous": [0, 11, 19, 31, 32, 42, 234, 240], "otherwis": [0, 11, 35, 37, 38, 40, 42, 44, 81, 82, 100, 103, 106, 109, 110, 111, 174, 202, 203, 204, 234, 239, 294, 297, 302, 307, 333, 334, 336, 355, 356, 378, 379, 380, 382, 395, 409, 410, 411, 413, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "implement": [0, 11, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 100, 103, 119, 174, 175, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 209, 210, 218, 222, 223, 226, 227, 231, 333, 338, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 434], "wa": [0, 11, 14, 29, 42, 44, 234, 294, 382, 395, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "last": [0, 11, 15, 70, 75, 312, 316, 320, 330, 333, 335, 337, 342, 354, 355, 358, 360, 361, 362, 367, 371, 372, 374, 419, 420, 421, 431, 432, 433, 452, 462], "henc": [0, 11, 414, 415, 416, 418], "here": [0, 11, 17, 27, 29, 40, 42, 43, 44, 45, 46, 47, 58, 59], "tensor": [0, 11, 13, 27, 32, 35, 37, 38, 39, 40, 42, 44, 45, 46, 47, 59, 81, 90, 91, 100, 112, 174, 216, 217, 234, 276, 279, 280, 320, 328, 330, 333, 353, 362, 370, 372, 402, 403, 409, 411, 434, 452, 460, 462], "howev": [0, 11, 14, 17, 29, 31, 32, 35, 37, 38, 39, 40, 44, 45, 46, 47, 59], "befor": [0, 11, 17, 18, 28, 31, 35, 37, 38, 39, 42, 45, 59, 127, 168, 174, 233, 320, 331, 332, 378, 379, 380, 382, 394, 414, 415, 416, 418, 422, 427, 429], "becom": [0, 11, 13, 15, 18, 29, 42, 47, 59, 362, 363], "swap": [0, 11, 362, 375], "python": [0, 11, 12, 13, 14, 17, 19, 42, 44, 45, 59, 81, 82, 127, 163, 173, 174, 223, 434, 440], "op": [0, 11, 27, 42, 59], "eagertensor": [0, 11], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 21, 22, 23, 24, 25, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 438, 439, 440, 442, 443, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 38, 40, 41, 44, 47, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478], "backend": [3, 4, 5, 11, 13, 26, 28, 30, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 47, 59, 100, 108, 116, 126, 127, 159, 161, 171, 234, 264, 267, 268, 274, 297, 299, 301, 303, 304, 305, 310, 434, 440, 444, 445, 468, 469, 470, 471, 472, 473], "ml": [12, 14, 15, 16, 41, 42, 43, 45, 46, 47, 58, 434, 440], "explos": [12, 14, 434], "A": [12, 13, 14, 15, 19, 26, 31, 32, 36, 37, 38, 42, 45, 59, 81, 86, 93, 127, 134, 135, 168, 174, 221, 232, 234, 259, 291, 333, 337, 349, 350, 351, 362, 372, 374, 382, 383, 385, 387, 389, 390, 391, 392, 393, 396, 397, 398, 399, 422, 423, 431, 432, 433, 434, 474, 475], "huge": [12, 14, 45, 434], "number": [12, 13, 17, 29, 38, 42, 45, 47, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 100, 104, 113, 114, 115, 117, 118, 119, 127, 160, 161, 162, 174, 178, 182, 190, 198, 199, 216, 217, 218, 222, 223, 225, 233, 234, 254, 259, 260, 275, 293, 296, 312, 316, 320, 331, 333, 338, 344, 349, 351, 355, 362, 363, 365, 368, 369, 371, 372, 374, 376, 377, 378, 379, 380, 381, 402, 403, 407, 409, 412, 414, 415, 416, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463], "tool": [12, 15, 43, 47, 58, 59, 434], "have": [12, 13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 58, 59, 70, 73, 81, 82, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 114, 127, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 242, 249, 250, 251, 253, 297, 302, 310, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 402, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "explod": [12, 13, 434], "onto": [12, 13, 127, 153, 154, 382, 388, 394, 434], "scene": [12, 13, 26, 41, 43, 297, 299, 301, 303, 304, 305, 434], "b": [12, 15, 16, 26, 29, 32, 33, 41, 42, 43, 45, 46, 47, 57, 174, 178, 201, 219, 231, 234, 237, 238, 320, 323, 327, 333, 334, 335, 336, 346, 350, 353, 357, 362, 367, 369, 371, 374, 419, 420, 422, 423, 431, 432, 434, 440], "why": [12, 14, 18, 39, 40, 44, 434], "unifi": [12, 14, 35, 42, 59, 127, 153, 154, 155, 156, 168, 434], "should": [12, 14, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 78, 79, 81, 92, 96, 97, 100, 105, 127, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 240, 276, 297, 299, 301, 303, 304, 305, 333, 334, 335, 336, 337, 340, 341, 344, 346, 347, 348, 350, 351, 353, 354, 355, 356, 362, 370, 402, 408, 409, 410, 411, 414, 415, 416, 418, 422, 423, 424, 425, 427, 428, 429, 430, 434], "them": [12, 13, 14, 15, 31, 33, 35, 36, 42, 44, 45, 46, 59, 434], "c": [12, 14, 15, 16, 17, 26, 29, 32, 41, 42, 43, 45, 59, 234, 237, 238, 297, 298, 299, 301, 303, 304, 305, 362, 374, 409, 412, 422, 428, 430, 434, 440], "standard": [12, 26, 27, 28, 30, 31, 35, 39, 40, 59, 81, 92, 100, 114, 174, 178, 216, 217, 231, 333, 336, 362, 367, 369, 371, 400, 401, 402, 405, 414, 416, 419, 420, 422, 428, 430, 434, 440, 466, 467], "re": [12, 13, 14, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 59, 127, 168, 234, 249, 312, 313, 316, 333, 353, 362, 371, 434], "collabor": [12, 13, 14, 434], "consortium": [12, 14, 434, 440], "data": [12, 14, 26, 27, 28, 32, 34, 36, 38, 39, 40, 44, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 237, 238, 269, 270, 272, 289, 297, 302, 310, 312, 316, 318, 320, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 362, 367, 368, 370, 371, 373, 374, 402, 408, 409, 410, 411, 412, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440], "api": [12, 13, 26, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 45, 59, 81, 92, 174, 178, 216, 217, 231, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420, 434, 440], "open": [13, 14, 15, 16, 17, 19, 28, 58, 81, 82, 402, 404, 406, 434], "project": [13, 14, 15, 17, 18, 19, 27, 44, 46, 58, 59, 402, 403, 404, 405, 406], "grown": 13, "consider": [13, 29, 40], "recent": [13, 14], "year": [13, 15, 434], "especi": 13, "deep": [13, 16, 18, 41, 45, 434], "learn": [13, 14, 17, 26, 32, 41, 47, 58, 174, 200, 297, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 468, 469, 470, 471, 472, 473], "can": [13, 14, 15, 16, 18, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 81, 83, 93, 100, 106, 127, 166, 167, 168, 312, 314, 333, 340, 362, 370, 422, 423, 434, 440], "seen": [13, 14, 29, 44, 45], "rapidli": 13, "increas": [13, 127, 148, 152, 156, 362, 365, 377, 382, 394], "github": [13, 17, 18, 28, 31], "repo": [13, 14, 15, 17, 18, 30, 42, 44, 45, 46, 47, 58, 434, 440], "contain": [13, 17, 18, 19, 26, 28, 29, 31, 32, 37, 39, 40, 41, 42, 43, 46, 47, 59, 70, 73, 74, 76, 81, 82, 85, 87, 94, 96, 97, 98, 127, 145, 149, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 238, 241, 242, 262, 271, 312, 318, 320, 323, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 367, 368, 369, 371, 372, 382, 395, 402, 403, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 468, 472, 474, 475], "term": [13, 18, 320, 330, 452, 462], "time": [13, 14, 15, 18, 31, 32, 37, 40, 42, 45, 47, 59, 297, 299, 303, 320, 330, 362, 376, 378, 379, 380, 381, 409, 410, 411, 414, 415, 416, 452, 463, 464, 465], "These": [13, 14, 15, 18, 28, 29, 31, 32, 36, 37, 39, 40, 42, 43, 45, 46, 47, 59, 333, 338, 434, 440], "ar": [13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 68, 81, 82, 127, 134, 135, 158, 162, 164, 168, 174, 191, 213, 214, 226, 231, 234, 235, 237, 238, 239, 257, 263, 264, 268, 275, 277, 289, 320, 329, 333, 335, 341, 342, 344, 347, 351, 352, 355, 362, 363, 367, 371, 382, 384, 388, 394, 402, 405, 406, 409, 410, 411, 412, 414, 415, 434, 474, 475], "written": [13, 27, 28, 35, 39, 40, 42, 44, 47, 59, 422, 423], "mani": [13, 14, 15, 17, 18, 28, 29, 32, 34, 35, 36, 37, 38, 40, 42, 44, 45, 59, 362, 372], "differ": [13, 14, 15, 18, 26, 27, 28, 29, 31, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 59, 100, 114, 127, 145, 146, 149, 150, 174, 178, 218, 230, 320, 329, 362, 374, 422, 427, 429, 434], "while": [13, 14, 18, 29, 39, 46, 47, 59, 174, 213, 214, 414, 415, 422, 425], "thi": [13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 81, 82, 83, 92, 93, 127, 148, 152, 156, 163, 168, 173, 174, 175, 178, 188, 197, 213, 214, 216, 217, 223, 231, 234, 254, 267, 278, 283, 297, 299, 301, 302, 303, 304, 305, 310, 320, 323, 329, 333, 336, 342, 349, 362, 366, 367, 369, 370, 371, 374, 382, 388, 394, 395, 409, 410, 414, 415, 416, 418, 419, 420, 422, 423, 425, 428, 430, 434, 440, 464, 465, 468, 469, 470, 471, 472, 473], "wonder": [13, 15, 44], "thing": [13, 14, 15, 17, 18, 44, 45], "research": [13, 58], "develop": [13, 14, 15, 16, 17, 18, 58, 59, 434], "also": [13, 14, 16, 17, 18, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 81, 92, 174, 178, 216, 217, 231, 234, 267, 297, 299, 320, 323, 329, 333, 336, 362, 367, 369, 371, 378, 379, 380, 381, 382, 383, 384, 392, 393, 394, 414, 416, 419, 420, 452, 462], "consid": [13, 14, 27, 29, 32, 43, 44, 45, 174, 213, 214, 414, 415, 416, 418], "speed": 13, "evolv": 13, "sharabl": 13, "code": [13, 14, 15, 18, 19, 26, 28, 29, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57, 59, 320, 327, 414, 416, 419, 420, 434, 440], "significantli": 13, "hinder": [13, 40], "librari": [13, 14, 15, 42, 47, 57, 59, 174, 197, 213, 214, 333, 338, 414, 415, 416, 418, 422, 424, 425, 426, 434], "outdat": 13, "month": 13, "rigor": 13, "maintain": [13, 18, 419, 420, 421], "against": [13, 31, 100, 104, 333, 341, 342, 344, 347, 409, 410], "newest": 13, "version": [13, 14, 15, 17, 28, 42, 44, 333, 338, 434], "For": [13, 14, 15, 17, 18, 19, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 58, 59, 81, 82, 92, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 297, 302, 310, 333, 351, 354, 362, 363, 374, 414, 415, 416, 418, 422, 423, 424, 426, 429, 444, 445], "softwar": [13, 14, 17, 18], "pipelin": [13, 35, 47], "where": [13, 14, 15, 16, 17, 18, 19, 32, 35, 36, 37, 38, 39, 42, 45, 46, 47, 59, 81, 88, 89, 92, 174, 182, 196, 209, 218, 222, 234, 263, 276, 333, 338, 344, 347, 348, 351, 352, 354, 355, 362, 363, 365, 366, 368, 374, 377, 382, 383, 393, 402, 403, 409, 412, 422, 428, 430, 431, 432, 433, 434], "rapid": [13, 14], "prototyp": 13, "vital": [13, 47], "signific": [13, 14, 59], "bottleneck": 13, "As": [13, 18, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 59, 414, 415, 416, 418], "new": [13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 31, 34, 37, 39, 41, 44, 47, 58, 81, 84, 87, 88, 89, 94, 95, 98, 99, 174, 183, 209, 221, 232, 234, 249, 250, 251, 254, 255, 256, 279, 280, 281, 282, 287, 288, 297, 299, 301, 303, 304, 305, 312, 314, 317, 319, 362, 366, 370, 374, 382, 387, 398, 399, 400, 401, 422, 423, 434, 444, 445, 452, 462, 466, 467, 468, 469, 470, 471, 472, 473], "futur": [13, 15, 18, 44, 333, 338], "avail": [13, 17, 18, 28, 38, 127, 159, 160, 161, 171, 234, 250], "specif": [13, 17, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 58, 59, 100, 119, 127, 166, 174, 213, 214, 234, 249, 250, 251, 274, 333, 338, 353, 362, 374, 378, 379, 380, 381, 402, 403, 422, 424, 425, 426, 434, 437, 439, 440, 464, 465], "quickli": [13, 15, 18, 45, 46], "obsolet": [13, 15], "user": [13, 14, 17, 19, 26, 31, 39, 41, 59, 452, 463, 464, 465], "constantli": 13, "invent": 13, "wheel": 13, "our": [13, 14, 16, 17, 18, 29, 41, 44, 45, 46, 47, 59, 434], "desir": [13, 100, 103, 106, 127, 169, 234, 263, 312, 318], "provid": [13, 17, 18, 29, 32, 35, 36, 37, 38, 39, 40, 42, 46, 58, 59, 78, 79, 81, 92, 100, 109, 110, 111, 116, 119, 126, 127, 234, 248, 276, 280, 297, 299, 301, 303, 304, 305, 333, 355, 362, 367, 374, 409, 410, 422, 428, 430, 431, 432, 433, 452, 461, 468, 469, 470, 471, 472, 473], "simultan": [13, 15], "all": [13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 60, 68, 78, 79, 81, 82, 96, 97, 127, 134, 158, 164, 234, 235, 237, 238, 257, 277, 292, 320, 330, 333, 350, 353, 356, 362, 367, 371, 378, 379, 380, 381, 382, 383, 384, 393, 394, 395, 402, 403, 406, 431, 434, 437, 439], "modern": [13, 14], "simpl": [13, 17, 18, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 42, 44, 46, 47, 59, 234, 252], "scalabl": [13, 42], "manner": [13, 27, 38, 45, 58, 59, 382, 394], "must": [13, 15, 17, 18, 27, 28, 29, 32, 35, 37, 38, 42, 46, 47, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 127, 153, 154, 155, 156, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 242, 253, 280, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 402, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 468, 472], "determin": [13, 28, 32, 36, 37, 38, 100, 106, 107, 113, 116, 117, 118, 126, 127, 159, 160, 161, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 196, 197, 202, 203, 204, 207, 208, 210, 211, 215, 218, 222, 223, 226, 227, 228, 231, 234, 235, 237, 238, 262, 264, 268, 269, 270, 271, 272, 289, 296, 297, 302, 320, 331, 333, 334, 335, 336, 337, 340, 341, 344, 346, 347, 349, 350, 354, 355, 356, 378, 379, 380, 381, 414, 415, 416, 418, 431, 432, 433], "exactli": [13, 15, 29, 38, 434, 440], "common": [13, 29, 34, 36, 38, 59], "ground": [13, 31], "li": 13, "between": [13, 29, 31, 32, 35, 36, 40, 41, 43, 44, 45, 47, 58, 81, 82, 100, 114, 174, 182, 222, 358, 359, 360, 361, 362, 366, 374, 382, 388, 402, 404, 414, 415, 416, 418, 434, 468, 470], "find": [13, 18, 42, 45, 414, 415, 416, 418, 434], "exist": [13, 14, 19, 28, 29, 30, 31, 32, 33, 34, 39, 42, 59, 234, 248, 468, 472], "essenti": [13, 14, 29, 32, 38], "order": [13, 17, 18, 19, 28, 29, 33, 35, 37, 38, 40, 44, 45, 47, 59, 174, 182, 297, 299, 301, 303, 304, 305, 333, 338, 342, 351, 352, 356, 362, 367, 378, 379, 380, 409, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 474, 475], "design": [13, 14, 26, 39, 42, 44, 59], "univers": 13, "abstract": [13, 36, 46, 59, 127, 139, 468, 472], "In": [13, 15, 17, 18, 27, 28, 29, 32, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 127, 163, 170, 173, 174, 178, 218, 223, 362, 370, 402, 406, 434], "search": [13, 27, 29, 31, 410, 411, 412, 413], "languag": [13, 15, 42], "first": [13, 14, 17, 18, 19, 29, 32, 35, 40, 42, 44, 45, 47, 78, 79, 81, 90, 91, 127, 155, 174, 178, 184, 186, 187, 188, 189, 194, 199, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 230, 234, 237, 297, 300, 333, 335, 337, 338, 341, 346, 348, 351, 353, 355, 362, 364, 371, 374, 375, 378, 379, 380, 381, 382, 383, 392, 393, 402, 408, 409, 410, 411, 414, 415, 416, 452, 463, 464, 465, 468, 472], "see": [13, 16, 18, 32, 36, 38, 40, 44, 45, 58, 59, 81, 82, 87, 90, 91, 100, 105, 119, 174, 178, 184, 186, 187, 188, 189, 193, 197, 205, 211, 214, 215, 218, 220, 222, 223, 230, 333, 344, 347, 350, 355, 356, 409, 411, 414, 415, 416, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "clear": [13, 14, 15, 18, 29, 31, 37, 38, 42, 44, 127, 142], "front": [13, 41, 42, 45, 434, 440], "runner": 13, "look": [13, 18, 19, 27, 29, 32, 37, 38, 40, 42, 44, 46, 47], "littl": [13, 35, 44], "deeper": [13, 26, 41, 127, 148, 152, 156, 382, 393, 394], "follow": [13, 14, 17, 18, 19, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 59, 100, 115, 127, 168, 174, 223, 234, 265, 266, 267, 287, 288, 297, 299, 301, 303, 304, 305, 320, 331, 332, 333, 348, 356, 382, 388, 394, 414, 415, 416, 418, 422, 423, 434, 452, 462, 468, 472], "same": [13, 15, 17, 18, 19, 27, 29, 31, 32, 35, 36, 38, 39, 40, 42, 44, 46, 47, 81, 82, 85, 89, 92, 95, 96, 97, 99, 100, 103, 104, 105, 127, 134, 135, 168, 174, 175, 178, 185, 190, 198, 218, 223, 224, 225, 233, 234, 253, 255, 256, 276, 279, 280, 297, 302, 307, 320, 321, 322, 323, 324, 325, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 345, 347, 348, 350, 351, 354, 355, 362, 364, 367, 368, 371, 373, 374, 378, 379, 380, 382, 395, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 434, 452, 453, 454, 455, 456, 457, 458, 459], "core": [13, 38, 42, 47, 127, 160, 434], "principl": 13, "oper": [13, 17, 29, 32, 35, 36, 38, 39, 40, 45, 46, 81, 90, 91, 100, 119, 174, 178, 188, 201, 219, 223, 234, 239, 249, 250, 251, 289, 297, 299, 301, 303, 304, 305, 320, 321, 322, 323, 324, 325, 326, 327, 329], "expos": [13, 42, 46, 234, 243], "almost": [13, 18, 36, 43, 45], "ident": [13, 15, 32, 34, 44, 45, 59, 382, 395, 434], "uniqu": [13, 32, 59, 127, 134, 135, 378, 379, 380, 381, 382, 388, 414, 415, 416, 417, 418], "syntax": [13, 14], "There": [13, 18, 29, 32, 35, 36, 37, 42, 45, 59, 422, 423], "onli": [13, 16, 17, 18, 27, 29, 31, 32, 33, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 57, 59, 127, 174, 213, 214, 333, 341, 348, 362, 367, 382, 383, 384, 392, 393, 409, 410, 411, 422, 425, 434, 468, 469, 470, 471, 472, 473], "so": [13, 14, 17, 18, 27, 28, 29, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 59, 60, 68, 382, 383, 393, 434], "wai": [13, 14, 39, 44, 45, 46, 47, 59, 422, 423], "manipul": [13, 27, 47, 58, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "unsurprisingli": [13, 29], "fundament": [13, 42], "consist": [13, 35, 39, 127, 156, 333, 338, 422, 423, 464, 465], "each": [13, 14, 15, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 58, 70, 73, 74, 76, 81, 92, 100, 104, 127, 134, 135, 145, 146, 147, 148, 149, 150, 151, 155, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 297, 299, 301, 303, 304, 305, 312, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 338, 341, 344, 345, 347, 350, 351, 362, 365, 369, 371, 372, 374, 376, 377, 382, 388, 395, 402, 403, 409, 412, 414, 415, 416, 422, 423, 434, 440, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "veri": [13, 14, 18, 27, 29, 31, 32, 38, 39, 40, 43, 45, 46, 47, 59, 434], "similar": [13, 27, 36, 37, 38, 45, 59, 174, 223, 320, 331, 452, 463], "convent": [13, 58, 333, 341, 422, 423], "those": [13, 18, 32, 36, 37, 38, 39, 42, 47, 81, 82, 297, 310, 333, 348, 351, 362, 363], "introduc": [13, 45, 362, 371], "2006": 13, "layer": [13, 27, 42, 43, 46, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 400, 401, 434, 446, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "therefor": [13, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 40, 42, 44, 46, 59, 320, 323], "present": [13, 30, 37, 38, 39, 40, 42], "itself": [13, 18, 36, 39, 40, 46, 58, 59, 382, 394], "cut": 13, "cloth": 13, "adher": [13, 14, 28, 30, 42, 47], "semant": [13, 42, 47, 174, 223], "round": [13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 174, 178, 190, 198, 199, 218, 228, 233, 434], "up": [13, 14, 15, 16, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 58, 59], "hopefulli": [13, 14, 15, 17, 18, 19, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58], "paint": [13, 42], "pictur": [13, 42], "how": [13, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 58, 59, 434, 440, 452, 463, 464, 465], "pleas": [13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58], "check": [13, 14, 15, 17, 18, 36, 41, 42, 44, 45, 46, 47, 58, 100, 107, 116, 126, 127, 163, 173, 234, 239, 252, 262, 269, 270, 271, 272, 289, 296, 297, 302, 333, 338, 382, 383, 392, 393, 394, 434], "out": [13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 58, 70, 73, 81, 82, 127, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 245, 246, 253, 255, 320, 328, 330, 333, 354, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 409, 410, 411, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 452, 460], "discuss": [13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 434], "faq": [13, 14, 15, 42, 44, 45, 46, 47, 58], "reach": [13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 127, 148, 152, 156, 382, 394], "discord": [13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58], "you": [13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 434, 440], "question": [13, 14, 15, 17, 18, 29, 31, 42, 44, 45, 46, 47, 58, 59], "With": [14, 15, 29, 31, 42, 81, 92, 174, 178, 201, 216, 217, 219, 231, 234, 238, 320, 323, 327, 333, 334, 335, 336, 342, 353, 358, 361, 362, 363, 367, 369, 371, 372, 402, 403, 409, 410, 414, 416, 419, 420, 431, 432], "central": 14, "goal": 14, "being": [14, 15, 18, 29, 31, 34, 35, 36, 37, 38, 39, 40, 42, 45, 58, 59, 81, 82, 234, 278, 283, 414, 417, 434], "would": [14, 17, 18, 19, 26, 28, 29, 31, 34, 35, 39, 40, 41, 42, 44, 46, 47, 59, 70, 75], "entir": [14, 15, 18, 29, 30, 31, 35, 36, 44, 45, 46, 47, 127, 168, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 452, 461], "forgiven": 14, "rais": [14, 18, 42, 44, 100, 105, 174, 196, 222, 234, 239, 258, 281, 288, 294, 333, 341, 343, 355, 362, 373, 374, 409, 412, 422, 424, 426, 431, 432, 433, 464, 465, 468, 472], "an": [14, 15, 17, 18, 19, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 70, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 114, 117, 118, 119, 127, 146, 150, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 240, 241, 242, 244, 253, 254, 263, 269, 270, 271, 272, 292, 293, 294, 297, 302, 307, 309, 310, 312, 314, 318, 319, 320, 323, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 354, 355, 356, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 388, 402, 404, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 444, 445, 464, 465, 468, 469, 470, 472], "eyebrow": 14, "somehow": 14, "pytorch": [14, 15, 32, 37, 38, 39, 40, 42, 44, 47, 59, 297, 299, 301, 303, 304, 305, 434, 468, 469, 470, 471, 472, 473], "other": [14, 17, 18, 27, 29, 31, 32, 35, 36, 39, 42, 44, 46, 47, 57, 58, 59, 78, 79, 81, 82, 174, 197, 234, 235, 297, 300, 402, 406, 414, 417, 422, 428, 430, 434], "strong": 14, "industri": 14, "back": [14, 35, 39, 41, 42, 44, 59, 434, 440, 464, 465, 468, 472], "momentum": 14, "won": [14, 15, 47], "ad": [14, 17, 18, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 46, 59, 234, 287, 288, 333, 338, 362, 366, 474, 475], "just": [14, 15, 18, 28, 29, 31, 32, 42, 44, 45, 59, 422, 423, 452, 461], "make": [14, 15, 17, 18, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 44, 45, 47, 127], "problem": [14, 18, 35, 44], "even": [14, 15, 18, 32, 37, 38, 44, 45, 46, 47, 59, 174, 222], "wors": 14, "rather": [14, 27, 31, 36, 38, 47, 59, 81, 82, 127, 168, 234, 269, 270, 272, 297, 302], "funni": 14, "comic": 14, "strip": 14, "easi": [14, 18, 32], "feasibl": 14, "space": [14, 81, 82, 90, 91, 234, 254], "case": [14, 17, 18, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 42, 44, 46, 47, 59, 81, 92, 127, 163, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 225, 226, 227, 228, 231, 233, 234, 279, 280, 333, 342, 362, 370, 382, 385, 391, 422, 424, 425, 426, 428, 429, 430, 452, 463, 464, 465, 468, 472], "unlik": [14, 29, 36, 127], "charger": 14, "charact": 14, "encod": [14, 45, 234, 254, 312, 314], "instant": [14, 434], "messag": [14, 18, 42, 44, 477, 478], "much": [14, 17, 18, 27, 35, 36, 39, 42, 44, 45], "doe": [14, 18, 19, 26, 27, 29, 31, 32, 33, 34, 37, 39, 40, 42, 44, 45, 59, 362, 372], "mandat": [14, 31, 39], "adopt": [14, 18, 35], "continu": [14, 15, 30, 31, 59], "own": [14, 15, 28, 42, 59], "signatur": [14, 27, 28, 29, 37, 38, 40, 414, 416, 419, 420], "replac": [14, 19, 31, 34, 37, 38, 42, 44, 47, 59, 234, 279, 280, 362, 363, 402, 403], "your": [14, 15, 16, 17, 19, 27, 28, 45, 46, 59, 434], "10": [14, 19, 29, 42, 44, 45, 81, 88, 91, 127, 174, 185, 201, 208, 234, 278, 283, 297, 303, 333, 336, 353, 362, 367, 369, 372, 402, 403, 404, 422, 423, 468, 470], "100": [14, 15, 45, 46, 47, 59, 434], "despit": [14, 38], "distinct": [14, 39, 41, 414, 415, 416, 418, 434], "still": [14, 31, 37, 44, 46, 59, 434], "believ": [14, 18], "share": [14, 31, 32, 33, 36, 42], "bring": [14, 42, 43], "benefit": [14, 15, 18, 35, 36, 44, 45, 59], "unrel": [14, 18], "what": [14, 15, 26, 28, 29, 36, 40, 41, 42, 44, 45, 46, 47, 58, 59, 434], "again": [14, 15, 18, 27, 29, 36, 39, 45, 47, 59], "contrari": 14, "bumpi": 14, "road": 14, "allud": [14, 45], "most": [14, 17, 18, 27, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 59, 333, 338], "technologi": 14, "sector": [14, 174, 177, 180, 183], "full": [14, 15, 18, 28, 37, 40, 42, 59, 81, 100, 114, 174, 201, 333, 348, 350, 351], "success": 14, "reason": [14, 18, 27, 29, 32, 35, 36, 37, 42, 44, 174, 223], "build": [14, 16, 17, 32, 41, 43, 46, 47, 414, 415, 416, 418, 434, 452, 463, 464, 465], "custom": [14, 46], "comput": [14, 15, 32, 42, 45, 59, 127, 168, 174, 178, 184, 187, 189, 194, 195, 200, 201, 205, 206, 212, 213, 214, 215, 218, 219, 220, 234, 241, 242, 245, 246, 297, 298, 299, 300, 301, 303, 304, 305, 307, 309, 312, 315, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 333, 334, 335, 338, 339, 340, 341, 342, 348, 349, 350, 351, 355, 356, 358, 359, 360, 361, 382, 388, 414, 415, 416, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430], "thank": [14, 45], "interoper": 14, "compon": [14, 42], "bio": [14, 17], "hardwar": 14, "initi": [14, 18, 37, 38, 127, 320, 330, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 468, 472], "pcie": 14, "interfac": [14, 47, 59], "motherboard": 14, "raid": 14, "storag": [14, 45], "virtual": [14, 19], "bluetooth": 14, "wireless": 14, "exchang": 14, "btx": 14, "form": [14, 16, 32, 46, 47, 81, 83, 93, 96, 97, 297, 299, 301, 303, 304, 305, 320, 333, 334, 336, 337, 338, 339, 340, 344, 345, 347, 348, 350, 351, 352, 354, 382, 384, 394], "factor": [14, 127, 134, 166, 167, 168, 297, 298, 299, 303, 304, 320, 321, 322, 323, 324, 325, 326, 327, 333, 334, 452, 453, 454, 455, 456, 457, 458, 459, 468, 469, 470, 471], "sata": 14, "connect": [14, 17, 46, 47, 452, 462, 463], "host": [14, 59], "bu": 14, "adapt": [14, 297, 304, 468, 471], "devic": [14, 26, 27, 32, 34, 37, 44, 45, 59, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 234, 255, 256, 276, 279, 280, 402, 403, 404, 405, 406, 444, 445, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "html": [14, 19, 28, 414, 416, 419, 420], "enabl": [14, 17, 18, 31, 32, 35, 36, 39, 41, 42, 43, 45, 47, 59], "anyon": [14, 16, 59], "websit": 14, "tcp": 14, "ip": 14, "node": [14, 382, 383, 392, 393], "commun": [14, 16, 18, 59, 434, 440], "network": [14, 32, 36, 42, 46, 58, 320, 329, 434, 441, 452, 464, 465], "smtp": 14, "possibl": [14, 16, 17, 18, 28, 29, 31, 37, 39, 42, 45, 58, 59, 234, 273, 312, 318, 422, 424, 426], "send": 14, "gmail": 14, "outlook": 14, "pop": 14, "u": [14, 17, 18, 31, 36, 46, 333, 334, 351, 422, 423], "email": 14, "ieee": [14, 80, 100, 114, 174, 178, 197, 218, 223, 228], "754": [14, 80, 100, 114, 174, 178, 197, 218, 223, 228], "allow": [14, 42, 59, 81, 90, 91, 234, 273, 422, 423, 464, 465], "calcul": [14, 28, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 196, 197, 207, 208, 209, 210, 211, 218, 222, 226, 227, 228, 230, 231, 358, 359, 360, 361, 422, 424, 425, 426, 427, 428, 429, 430], "live": [14, 15], "depend": [14, 17, 18, 28, 34, 37, 42, 59, 100, 103, 174, 175, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 209, 210, 222, 226, 227, 231, 333, 338, 348, 350, 351, 409, 413, 419, 420, 421], "did": [14, 47], "aris": [14, 59], "until": [14, 18, 59, 434], "substanti": [14, 18, 31, 35], "innov": 14, "growth": 14, "usag": [14, 42, 127, 168], "relev": [14, 29, 37, 45, 468, 469, 470, 471, 472, 473], "area": [14, 39, 57, 174, 177, 180, 183, 434], "necess": 14, "parti": [14, 59], "could": [14, 15, 29, 31, 37, 39, 42, 44, 45, 46, 414, 415, 416, 418], "easili": [14, 18, 45, 46, 47, 59, 434], "engag": [14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "regard": [14, 127], "effect": [14, 28, 35, 40, 59, 81, 92, 297, 305, 422, 428, 430], "2015": 14, "sinc": 14, "alongsid": 14, "machin": [14, 17, 32, 58, 100, 114, 115, 174, 200, 333, 344, 347], "given": [14, 15, 17, 18, 19, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 46, 47, 58, 81, 82, 84, 90, 91, 127, 157, 163, 165, 166, 167, 168, 170, 173, 234, 245, 246, 256, 279, 280, 295, 297, 298, 299, 301, 303, 304, 305, 320, 321, 322, 323, 324, 325, 326, 327, 333, 357, 358, 359, 360, 361, 362, 363, 366, 367, 369, 371, 372, 376, 382, 389, 390, 402, 404, 405, 406, 408, 419, 421, 444, 445], "frame": [14, 58], "less": [14, 18, 29, 40, 41, 42, 174, 176, 177, 179, 182, 190, 207, 208, 210, 222, 223, 225, 228, 333, 344, 347, 356, 402, 406, 422, 430], "matur": [14, 59], "state": [14, 41, 42, 43, 45, 58, 174, 218, 320, 330, 434, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "than": [14, 18, 27, 29, 31, 36, 38, 39, 42, 45, 46, 47, 59, 81, 82, 100, 114, 127, 168, 174, 176, 177, 179, 182, 186, 188, 190, 198, 199, 207, 208, 210, 216, 222, 223, 225, 228, 233, 234, 269, 270, 272, 297, 302, 333, 335, 341, 344, 347, 356, 362, 363, 367, 373, 402, 406, 414, 415, 416, 418, 422, 423, 427, 428, 429, 430], "preced": [14, 46], "mention": [14, 17, 18, 29, 32, 40], "aros": 14, "70": [14, 333, 334, 422, 423], "80": [14, 422, 423], "90": [14, 422, 423], "effort": [14, 16, 59], "stage": [14, 16, 18, 19, 26, 434], "complet": [14, 18, 35, 36, 44, 45, 333, 348], "natur": [14, 29, 35, 58, 174, 196, 207, 209, 333, 349], "like": [14, 17, 18, 19, 26, 27, 28, 29, 31, 38, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 297, 302, 402, 406, 422, 423, 434], "certainli": 14, "mission": [14, 434], "creat": [14, 16, 18, 19, 37, 38, 39, 42, 43, 46, 57, 58, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 127, 134, 135, 234, 255, 256, 276, 279, 280, 291, 297, 309, 402, 403, 404, 406, 422, 423, 434, 440, 444, 445, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "At": 14, "process": [14, 15, 16, 18, 19, 32, 42, 47, 127, 134, 135, 163, 173], "ourselv": 14, "lead": [14, 15, 59, 333, 348, 351], "quansight": 14, "compani": 14, "made": [14, 18, 39, 42, 44], "organ": [14, 27, 32, 35, 36], "panda": 14, "scipi": 14, "conda": [14, 19], "dask": [14, 414, 415, 416, 418], "apach": 14, "onnx": 14, "scikit": 14, "jupyt": 14, "aw": 14, "cupi": 14, "net": [14, 15, 42, 47], "sympi": 14, "rai": [14, 174, 182], "modin": 14, "spyder": 14, "includ": [14, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 58, 59, 81, 82, 83, 93, 234, 262, 296, 333, 356, 382, 383, 402, 406, 409, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 452, 462, 463, 466, 467], "member": [14, 18], "googl": [14, 434], "octoml": 14, "einop": [14, 234, 249, 250, 251], "further": [14, 15, 18, 19, 29, 35, 41, 45, 46, 434], "sponsor": 14, "lg": 14, "electron": 14, "microsoft": 14, "d": [14, 15, 16, 17, 26, 45, 234, 238, 312, 315, 319, 320, 321, 322, 323, 324, 325, 326, 327, 333, 337, 434, 440], "shaw": 14, "co": [14, 42, 58, 174, 234, 254, 434], "intel": 14, "togeth": [14, 35, 46, 47, 59, 474, 475], "major": [14, 37, 38, 59, 409, 412], "involv": [14, 16, 19, 26, 37, 47, 100, 119, 174, 178, 218, 434, 440], "anoth": [14, 18, 32, 37, 44, 47, 81, 87, 100, 104, 106, 108], "promis": 14, "sign": [14, 17, 43, 47, 81, 82, 174, 175, 178, 182, 188, 218, 223, 333, 349, 414, 415, 416, 418, 422, 427, 429], "pursuit": 14, "unif": [14, 16, 44, 434, 440], "clearli": [14, 29], "lot": [14, 15, 34, 44, 59], "thought": [14, 17, 18, 40], "care": [14, 18, 47], "attent": [14, 18, 35, 320, 331, 332, 452, 463], "gone": [14, 41], "simplifi": [14, 42, 43, 44, 46], "compat": [14, 100, 105, 174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 223, 230, 333, 344, 347, 350, 353, 355, 356, 362, 370, 409, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "excit": [14, 16, 26, 434], "complianc": 14, "hope": [14, 59], "due": [14, 39, 174, 218], "suit": [14, 26, 30, 31, 45, 58], "some": [14, 15, 17, 18, 27, 28, 29, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 58, 59, 174, 197, 297, 298, 299, 301, 303, 304, 305, 310, 320, 328, 434, 452, 460], "motiv": [14, 44], "great": [14, 15, 31, 42, 44], "convinc": 14, "celebr": 14, "encourag": [14, 58, 59, 434, 440], "foundat": 14, "point": [15, 18, 28, 29, 35, 40, 42, 44, 45, 58, 80, 81, 82, 84, 86, 88, 94, 98, 100, 103, 114, 117, 119, 174, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 193, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 333, 334, 336, 338, 339, 340, 344, 347, 348, 350, 351, 356, 414, 415, 416, 418, 422, 424, 425, 426, 427, 428, 429, 430], "mai": [15, 17, 44, 46, 81, 82, 87, 174, 194, 201, 206, 213, 214, 234, 248, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426], "ask": [15, 18, 42, 44, 59], "perfectli": 15, "happi": [15, 17, 59], "abund": 15, "better": [15, 26, 41, 44, 45, 46], "ll": [15, 16, 18, 29, 45], "give": [15, 18, 26, 28, 29, 40, 44, 362, 370, 422, 423], "two": [15, 29, 31, 35, 41, 45, 47, 81, 82, 86, 92, 96, 97, 174, 188, 234, 237, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 362, 375, 414, 415, 416, 417, 418, 422, 423, 434], "streamlin": 15, "workflow": [15, 45, 57, 434], "save": [15, 59, 234, 284, 312, 314, 464, 465], "week": [15, 434], "let": [15, 29, 37, 38, 42, 44, 45, 46, 47, 422, 423, 425, 428, 429, 430, 434], "sai": [15, 34, 44], "deepmind": 15, "releas": [15, 17, 434], "awesom": 15, "paper": 15, "love": 15, "choic": [15, 17, 39, 45, 422, 428, 430], "perceiverio": 15, "happen": [15, 18, 45], "slew": 15, "rush": 15, "f": [15, 19, 26, 42, 45, 47, 174, 200, 234, 264, 268, 312, 317], "g": [15, 26, 59, 100, 102, 119, 127, 140, 402, 405, 406, 414, 415, 416, 418, 422, 424, 426, 427, 429], "inevit": 15, "deviat": [15, 400, 401, 402, 405, 422, 428, 466, 467], "origin": [15, 33, 34, 37, 42, 44, 174, 182, 333, 342, 362, 370, 371], "often": [15, 32, 59], "erron": 15, "train": [15, 32, 36, 38, 45, 46, 47, 57, 58, 59, 297, 298, 299, 303, 434], "poor": 15, "converg": 15, "perform": [15, 27, 29, 31, 32, 33, 35, 36, 38, 39, 40, 42, 45, 59, 70, 75, 81, 90, 91, 127, 234, 245, 249, 250, 251, 265, 266, 267, 297, 299, 301, 303, 304, 305, 312, 313, 316, 320, 328, 330, 333, 351, 378, 379, 380, 381, 382, 389, 390, 431, 432, 433], "issu": [15, 16, 42, 44, 46, 59], "etc": [15, 17, 18, 27, 29, 31, 35, 36, 37, 40, 42, 44, 45, 59, 81, 90, 91, 234, 255, 256, 276, 279, 280, 402, 403, 404, 406, 414, 415, 416, 418, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "publish": [15, 59], "manag": [15, 16, 59, 127], "get": [15, 16, 17, 26, 32, 37, 38, 42, 43, 44, 45, 46, 100, 112, 113, 114, 115, 127, 134, 135, 144, 157, 158, 163, 167, 170, 173, 234, 236, 257, 258, 259, 278, 434, 440, 452, 461], "work": [15, 17, 18, 26, 31, 37, 38, 41, 42, 43, 44, 46, 47, 434, 440], "repositori": [15, 17, 18, 19, 30], "pull": [15, 16, 17, 19, 27], "request": [15, 16, 27], "confus": 15, "do": [15, 17, 18, 27, 29, 32, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 59, 174, 223, 297, 302, 310, 382, 383, 392, 393, 394, 422, 423], "don": [15, 18, 46, 59], "expect": [15, 59, 234, 236, 434], "codebas": [15, 16, 26, 27, 41, 127, 166, 167, 434], "total": [15, 16, 18, 29, 31, 38, 45, 46, 59, 127, 170, 409, 412, 422, 428, 430], "hour": 15, "spent": 15, "spin": 15, "off": [15, 41, 333, 337, 354], "test": [15, 17, 26, 29, 100, 117, 118, 174, 202, 203, 204, 431, 432, 433], "error": [15, 17, 31, 35, 38, 44, 59, 70, 71, 127, 174, 195, 422, 424, 426, 464, 465, 468, 472], "iter": [15, 36, 42, 45, 78, 79, 127, 147, 149, 150, 151, 152, 155, 168, 234, 235, 280, 285, 362, 365, 369, 372, 376, 377, 382, 383, 384, 388, 392, 393, 394], "address": [15, 18, 35, 42], "sake": 15, "singl": [15, 27, 29, 31, 32, 34, 36, 39, 40, 42, 45, 46, 47, 59, 127, 134, 135, 153, 154, 155, 156, 234, 293, 296, 402, 405, 406, 414, 415], "multipl": [15, 18, 29, 32, 36, 59, 174, 218, 234, 273, 333, 340, 362, 372, 400, 401, 409, 410, 411, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 452, 462], "line": [15, 17, 18, 29, 35, 43, 44, 45, 46, 57, 434, 440], "convert": [15, 35, 39, 42, 59, 60, 68, 81, 83, 93, 100, 101, 102, 108, 127, 140, 141, 142, 163, 170, 173, 234, 286, 292, 293, 312, 314, 319, 333, 357, 382, 384, 394, 445], "directli": [15, 18, 27, 28, 32, 35, 36, 37, 38, 39, 40, 42, 44, 46, 47, 58, 59, 382, 394], "graph": [15, 32, 43, 59, 297, 299, 301, 303, 304, 305, 414, 415, 416, 418, 464, 465], "guarante": [15, 35, 414, 415], "turn": [15, 29], "4": [15, 19, 29, 42, 44, 45, 46, 47, 81, 89, 92, 95, 99, 174, 178, 182, 201, 216, 217, 219, 231, 234, 238, 254, 312, 314, 315, 316, 319, 320, 323, 324, 325, 327, 330, 333, 335, 336, 337, 340, 344, 353, 354, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 402, 403, 408, 414, 416, 419, 420, 422, 423, 431, 432, 434, 468, 469, 470, 471, 473], "step": [15, 17, 18, 19, 29, 33, 35, 37, 38, 42, 45, 46, 47, 58, 81, 82, 90, 91, 127, 297, 298, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 468, 469, 470, 471, 472, 473], "take": [15, 16, 18, 29, 31, 37, 38, 42, 44, 46, 47, 59, 312, 316, 434, 440], "few": [15, 18, 32, 36, 37, 38, 39, 43, 44, 45, 46, 57, 434, 440], "second": [15, 29, 44, 127, 155, 174, 178, 184, 186, 187, 188, 189, 194, 199, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 230, 234, 237, 278, 283, 297, 298, 299, 303, 333, 335, 337, 338, 341, 346, 348, 351, 353, 355, 362, 374, 375, 378, 380, 414, 415, 416, 468, 469, 470], "automat": [15, 17, 18, 32, 36, 40, 41, 42, 43, 46, 47, 434], "convers": [15, 41, 43, 47, 58, 59, 434, 440], "everyon": [15, 16, 18, 59], "regardless": [15, 16, 44, 47, 78, 79], "wouldn": 15, "nice": [15, 31], "write": [15, 18, 19, 26, 27, 28, 29, 31, 32, 33, 42, 44, 47, 70, 73, 127, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 246, 253, 255, 362, 363, 366, 367, 368, 369, 371, 373, 374, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "onc": [15, 17, 18, 36, 37, 38, 42, 45, 127, 168, 333, 340, 351, 402, 403], "know": [15, 414, 415, 416, 418], "among": [15, 31], "frantic": 15, "port": 15, "lucid": 15, "honk": 15, "improv": [15, 18, 32, 42], "understand": [15, 17, 18, 19, 26, 28, 29, 30, 40, 41], "pattern": [15, 37, 234, 249, 250, 251], "hasn": 15, "chang": [15, 18, 19, 28, 30, 31, 42, 46, 59, 127, 333, 335, 362, 370, 382, 384, 394, 434, 440], "now": [15, 17, 19, 27, 34, 37, 40, 44, 45, 47, 58, 59, 422, 423, 452, 463, 464, 465], "spend": 15, "torchvis": 15, "probabl": [15, 320, 328, 402, 403, 452, 460], "sonnet": 15, "about": [15, 18, 41, 42, 46, 47, 59, 100, 114, 115], "next": [15, 17, 18, 19, 28, 29, 33, 34, 44, 45, 100, 114, 434, 464, 465, 468, 469, 470, 471, 472, 473], "everyth": [15, 18, 43, 59], "zero": [15, 29, 38, 40, 42, 45, 46, 81, 84, 86, 92, 96, 97, 99, 100, 103, 174, 178, 186, 197, 213, 214, 216, 217, 218, 219, 222, 223, 231, 234, 276, 279, 280, 297, 298, 299, 303, 304, 320, 328, 333, 336, 341, 344, 347, 355, 356, 362, 367, 369, 371, 377, 409, 410, 411, 412, 414, 415, 416, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 446, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 468, 469, 470, 471], "need": [15, 18, 19, 27, 28, 29, 30, 32, 35, 42, 44, 45, 58, 59, 234, 241, 242, 362, 363, 366], "said": 15, "high": [15, 45, 402, 404, 406], "level": [15, 16, 32, 41, 42, 45, 46, 47, 59], "optim": [15, 43, 45, 47, 58, 127, 297, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 469, 470, 471, 473], "trainer": [15, 57, 59, 434], "statu": 15, "quo": 15, "kera": 15, "dopamin": 15, "ignit": 15, "catalyst": 15, "lightn": 15, "fastai": 15, "haiku": [15, 47], "flax": [15, 47, 59], "trax": [15, 47], "objax": [15, 47], "idea": [15, 58], "fulli": [15, 35, 40, 42, 43, 44, 45, 46, 47, 59, 452, 462, 463], "offer": [15, 46], "strongli": [16, 434, 440], "welcom": [16, 17, 434, 440], "absolut": [16, 174, 175, 333, 349], "skill": 16, "whether": [16, 17, 37, 39, 40, 70, 71, 78, 79, 100, 103, 112, 116, 117, 118, 126, 127, 144, 155, 159, 163, 168, 171, 173, 174, 204, 234, 235, 237, 238, 245, 248, 252, 254, 260, 262, 264, 268, 269, 270, 271, 272, 273, 285, 289, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 320, 328, 333, 338, 378, 379, 380, 381, 382, 383, 384, 388, 392, 393, 394, 395, 402, 403, 431, 432, 433, 444, 445, 452, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "vetern": 16, "beginn": 16, "start": [16, 17, 18, 19, 26, 28, 29, 37, 41, 42, 44, 45, 46, 58, 81, 82, 90, 91, 127, 139], "aspect": [16, 45, 312, 318, 434], "guid": [16, 17, 18, 31, 434], "through": [16, 18, 26, 29, 32, 33, 41, 42, 44, 45, 46, 47, 58, 174, 182], "journei": [16, 434, 440], "inclusvi": 16, "big": [16, 59], "team": [16, 17, 18], "board": 16, "contributor": [16, 18, 41, 434], "split": [16, 18, 41, 42, 59, 127, 134, 149, 150, 151, 152, 166, 167, 168, 234, 273, 362, 434], "section": [16, 18, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 414, 415, 416, 418], "below": [16, 17, 19, 26, 27, 29, 32, 37, 38, 39, 42, 43, 44, 45, 46, 47, 58, 81, 92, 96, 97, 174, 178, 216, 217, 231, 333, 336, 337, 354, 362, 367, 369, 371, 414, 416, 419, 420, 434], "best": [16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 234, 273], "go": [16, 17, 18, 26, 27, 29, 41, 45, 382, 393], "finish": [16, 17, 26, 434], "dive": [16, 18, 41, 44, 45, 59], "right": [16, 17, 18, 26, 29, 45, 174, 186, 188, 333, 351], "environ": [16, 17, 19, 58], "basic": [16, 19], "fork": [16, 234, 274], "doc": [16, 28, 40, 42, 45, 46, 434], "document": [16, 18, 43, 45, 47], "local": [16, 18, 19, 32], "help": [16, 17, 29, 35, 36, 44, 45, 46, 57, 422, 423, 429, 434], "video": [16, 18, 28, 29, 40], "realli": [17, 59], "contribut": [17, 18, 42, 440], "toward": [17, 42, 362, 371, 434, 440], "page": [17, 18, 43, 47, 57, 434, 440], "explain": [17, 18, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 434, 440], "main": [17, 19, 34, 36, 81, 86, 96, 97, 333, 337, 354], "prefer": 17, "mode": [17, 29, 59, 78, 79, 127, 153, 154, 155, 156, 168, 174, 178, 218, 333, 348], "git": [17, 18], "com": 17, "unifyai": [17, 19], "http": [17, 28, 297, 298, 299, 414, 416, 419, 420], "gh": 17, "your_fold": 17, "id": [17, 35, 36, 464, 465], "cours": [17, 18, 29, 45, 59], "whatev": [17, 59], "integr": [17, 31, 100, 103], "familiar": 17, "decid": [17, 382, 393], "sure": [17, 30], "elig": 17, "free": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 58], "student": 17, "licenc": 17, "peopl": [17, 18, 26], "seem": [17, 46, 59], "miss": [17, 29, 31, 35, 36, 468, 472], "add": [17, 18, 26, 27, 28, 32, 33, 35, 36, 40, 42, 44, 174, 400, 401, 434, 440, 466, 467], "explicit": [17, 19, 37, 39, 42], "remind": 17, "channel": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 234, 254, 312, 314, 315, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462], "show": [17, 29, 58, 59, 434], "easier": [17, 35], "remot": 17, "packag": [17, 19, 59], "mitig": 17, "potenti": [17, 41, 174, 197], "conflict": [17, 18, 45], "addit": [17, 18, 27, 28, 31, 36, 37, 44, 45, 47, 174, 178, 234, 249, 250, 251, 400, 401, 452, 462], "yet": 17, "particular": [17, 27, 39, 174, 175, 422, 423], "system": [17, 59, 333, 350], "instruct": 17, "abov": [17, 19, 28, 29, 32, 35, 39, 40, 44, 45, 46, 47, 81, 92, 96, 97, 174, 178, 216, 217, 218, 231, 320, 323, 333, 336, 337, 338, 354, 362, 367, 369, 371, 402, 404, 414, 416, 419, 420, 422, 427, 428, 429], "instal": [17, 19, 58, 434], "desktop": 17, "wsl": 17, "requir": [17, 19, 27, 28, 29, 31, 34, 35, 37, 38, 40, 44, 59, 78, 79, 174, 228, 333, 338, 362, 374, 444, 445], "run": [17, 18, 19, 30, 31, 42, 43, 44, 45, 46, 47, 58, 59, 127, 134, 297, 298, 299, 303, 378, 379, 380, 381, 452, 463, 464, 465], "command": [17, 19, 434], "powershel": 17, "admin": 17, "visit": 17, "link": 17, "latest": [17, 19, 28, 414, 416, 419, 420, 452, 461], "imag": [17, 19, 27, 42, 43, 45, 47, 58, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 434], "cmd": [17, 19], "profession": 17, "execut": [17, 19, 42, 44, 47, 59, 234, 294], "deploy": 17, "click": [17, 28, 434], "top": [17, 31, 45, 46], "left": [17, 29, 37, 174, 186, 333, 338, 342, 351, 409, 410], "icon": 17, "side": [17, 18], "choos": [17, 18, 47, 174, 213, 214, 409, 413, 414, 415, 416, 418, 422, 424, 425, 426], "panel": 17, "python3": [17, 19], "path": [17, 19], "press": [17, 45, 434], "ok": 17, "correctli": [17, 31, 37, 40, 46, 59, 333, 342, 409, 410], "caus": [17, 18, 29, 31], "earlier": [17, 18], "note": [17, 18, 27, 29, 174, 223, 333, 338, 351, 362, 374, 414, 416, 422, 425], "might": [17, 18, 27, 31, 34, 42, 44, 45, 234, 248], "necessari": [17, 29, 39], "virtualis": 17, "setup": 17, "termin": [17, 18, 19, 36, 42, 45], "linux": [17, 19], "detail": [17, 18, 27, 31, 32, 33, 34, 36, 40, 45, 46, 81, 87, 414, 415, 416, 418], "sudo": 17, "apt": 17, "updat": [17, 18, 19, 26, 29, 30, 34, 35, 36, 37, 40, 42, 44, 45, 47, 127, 134, 234, 267, 279, 280, 297, 298, 299, 301, 303, 304, 305, 320, 330, 378, 379, 380, 382, 389, 390, 398, 399, 444, 445, 468, 469, 470, 471, 472, 473], "ca": 17, "certif": 17, "curl": 17, "gnupg": 17, "lsb": 17, "mkdir": 17, "p": [17, 18, 81, 92, 234, 241, 242, 320, 328, 333, 342, 356, 452, 460], "keyr": 17, "fssl": 17, "download": [17, 31], "gpg": 17, "dearmor": 17, "o": [17, 42, 234, 238], "echo": 17, "deb": 17, "arch": 17, "dpkg": 17, "architectur": [17, 47, 59], "lsb_releas": 17, "stabl": [17, 42, 234, 258, 259, 281, 282, 287, 288, 419, 420, 421], "tee": 17, "list": [17, 19, 27, 29, 37, 38, 40, 42, 45, 46, 47, 59, 81, 82, 83, 84, 92, 93, 94, 98, 100, 104, 127, 134, 135, 145, 146, 149, 150, 153, 154, 168, 234, 238, 286, 291, 295, 312, 318, 320, 321, 322, 323, 324, 325, 326, 327, 333, 353, 362, 364, 367, 372, 374, 382, 383, 384, 388, 393, 394, 431, 432, 433, 434, 452, 453, 454, 455, 456, 457, 458, 459], "dev": [17, 32, 38, 42, 44, 46, 127, 134, 162], "null": 17, "ce": 17, "cli": 17, "containerd": 17, "io": 17, "compos": [17, 59], "plugin": 17, "systemctl": 17, "permiss": 17, "relat": [17, 18, 58], "post": [17, 47, 400, 401, 434, 440], "pypi": 17, "more": [17, 18, 26, 27, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 81, 82, 100, 104, 174, 197, 333, 341, 362, 367, 414, 415, 416, 418, 422, 423, 434], "nutshel": [17, 40], "hook": 17, "lint": 17, "accept": [17, 18, 28, 29, 31, 32, 35, 36, 38, 39, 40, 44, 81, 92, 174, 178, 213, 214, 216, 217, 223, 231, 320, 323, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420, 422, 425, 434], "fix": [17, 18], "fail": [17, 31, 42, 44], "attempt": [17, 59], "succe": 17, "problemat": 17, "appli": [17, 18, 29, 31, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 57, 59, 70, 71, 72, 73, 74, 75, 76, 77, 100, 119, 234, 249, 250, 251, 297, 303, 304, 320, 329, 331, 332, 333, 344, 347, 358, 359, 360, 361, 362, 374, 378, 379, 380, 382, 388, 391, 394, 395, 400, 401, 434, 441, 442, 443, 466, 467], "To": [17, 18, 32, 36, 45, 46, 47, 434], "proce": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "modifi": [17, 28, 32, 37, 38, 42], "file": [17, 18, 19, 27, 28, 32, 35, 36, 42, 45, 234, 284, 464, 465], "properli": [17, 26], "m": [17, 19, 26, 42, 81, 92, 96, 97, 234, 238, 333, 334, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 402, 405, 406], "pip": [17, 58, 434], "enter": [17, 18, 35, 37, 38, 40], "folder": [17, 18, 19, 27, 30, 31, 32], "cd": [17, 19], "That": [17, 18, 44, 45, 46, 174, 223], "good": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 422, 423], "ever": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "unsur": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "feel": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "server": 18, "outlin": [18, 26, 31, 32, 44], "appropri": [18, 174, 178, 218, 409, 410], "context": [18, 38, 234, 274, 320, 331, 452, 463], "suitabl": [18, 27, 36], "quick": [18, 26, 46], "alwai": [18, 27, 32, 35, 39, 40, 42, 44, 100, 103, 174, 178, 218, 234, 267, 297, 302, 307], "correct": [18, 26, 32, 36, 37, 38, 40, 362, 363, 422, 428, 430, 434], "tendenc": 18, "gener": [18, 19, 26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 58, 59, 78, 81, 82, 90, 91, 174, 223, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 402, 403, 404, 406, 407, 414, 416, 419, 420, 434, 468, 472], "land": 18, "end": [18, 41, 58, 59, 81, 82, 174, 182, 434, 440], "world": 18, "come": [18, 46, 57, 434, 440], "fly": 18, "hard": [18, 44], "keep": [18, 30, 43, 45, 47, 234, 295], "track": [18, 127, 382, 394, 464, 465], "receiv": [18, 31, 37, 38, 127, 134, 135, 234, 236, 273, 452, 462], "respons": [18, 19, 39], "internship": 18, "mean": [18, 26, 29, 32, 36, 37, 38, 39, 42, 44, 45, 46, 47, 58, 59, 127, 153, 154, 155, 156, 168, 234, 250, 378, 379, 380, 381, 382, 388, 402, 405, 422, 446], "found": [18, 28, 35, 36], "avoid": [18, 31, 33, 34, 44, 127, 174, 197], "someon": [18, 59], "els": [18, 27, 32, 33, 39, 42, 44, 46, 47, 234, 239, 248, 252, 382, 392], "strive": [18, 59], "respond": 18, "newli": [18, 39, 78, 79, 100, 103, 234, 240], "name": [18, 19, 28, 31, 42, 44, 45, 47, 78, 79, 333, 338, 348, 351, 414, 415, 416], "suggest": [18, 27], "place": [18, 26, 27, 28, 29, 31, 32, 38, 40, 47, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 127, 169, 174, 178, 216, 217, 231, 234, 265, 266, 267, 320, 323, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420, 468, 469, 470, 471, 472, 473], "bug": [18, 31], "It": [18, 19, 26, 27, 28, 29, 35, 36, 39, 42, 44, 45, 46, 70, 73, 127, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 253, 362, 363, 366, 367, 368, 369, 371, 373, 374, 409, 410, 419, 420, 421, 431, 432, 433], "serv": [18, 31, 32, 35, 36, 40, 41, 434], "suspect": 18, "behaviour": [18, 28, 31, 35, 39, 40, 44], "observ": 18, "confid": 18, "noth": 18, "wrong": 18, "someth": [18, 27, 45, 46, 59], "bet": 18, "extens": [18, 28, 81, 92, 174, 178, 216, 217, 231, 333, 336, 362, 367, 371, 414, 416, 419, 420], "act": [18, 29, 59], "placehold": [18, 35, 40, 382, 394], "sub": [18, 26, 31, 36, 44, 45, 46, 127, 149, 150, 153, 154, 155, 156, 333, 337, 362, 372, 378, 379, 380, 381, 434], "task": [18, 58, 378, 379, 380, 381], "mark": [18, 31], "tick": 18, "ii": [18, 422, 423], "iii": 18, "comment": 18, "titl": [18, 434], "refer": [18, 31, 32, 37, 40, 59, 81, 86, 174, 197, 209, 297, 298, 299, 333, 355, 357, 422, 428, 430, 431, 432, 433, 452, 462], "issue_numb": 18, "delet": [18, 19], "No": [18, 42], "wait": 18, "progress": [18, 43, 47], "pr": 18, "soon": [18, 57, 59, 434, 440], "partial": [18, 464, 465], "solut": [18, 31, 333, 350], "review": [18, 27], "merg": 18, "everi": [18, 19, 29, 30, 31, 32, 33, 34, 36, 39, 40, 42, 44, 46, 81, 88, 89, 234, 235], "shape": [18, 27, 28, 29, 37, 38, 40, 42, 44, 45, 46, 47, 70, 73, 81, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 127, 136, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 234, 242, 253, 256, 260, 276, 279, 280, 286, 312, 315, 317, 318, 320, 322, 323, 324, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 377, 402, 404, 405, 406, 409, 410, 419, 420, 421, 422, 423, 431, 432, 433, 434, 452, 454, 455, 456, 457, 458, 459, 466, 467], "master": 18, "move": [18, 27, 127, 169], "within": [18, 31, 46, 59, 81, 82, 402, 406], "7": [18, 19, 29, 32, 174, 178, 185, 196, 201, 216, 217, 231, 234, 238, 297, 298, 299, 303, 312, 315, 319, 320, 327, 333, 335, 336, 337, 353, 358, 359, 360, 361, 362, 363, 367, 369, 372, 402, 403, 404, 422, 423], "dai": 18, "close": [18, 28, 174, 197, 312, 318, 333, 351], "method": [18, 27, 28, 29, 31, 32, 35, 40, 42, 43, 46, 47, 59, 81, 87, 92, 174, 178, 201, 216, 217, 219, 231, 234, 243, 279, 280, 297, 303, 304, 333, 335, 336, 353, 358, 361, 362, 363, 367, 369, 371, 372, 382, 383, 393, 394, 395, 414, 416, 419, 420, 431, 432, 434, 452, 463, 464, 465], "likewis": [18, 32, 37, 40, 45], "freed": 18, "flag": [18, 44, 297, 302], "purpos": [18, 19, 29, 31, 32, 34, 35, 36, 40, 41, 44, 174, 197, 434], "ensur": [18, 31, 35, 37, 40], "remain": [18, 29, 59, 174, 178, 218, 223, 362, 370, 382, 388], "access": [18, 19, 37], "who": [18, 26, 41, 59], "short": [18, 46, 320, 330], "basi": [18, 30, 45], "situat": [18, 47], "alloc": [18, 59, 81, 96, 97, 100, 103, 127], "upon": [18, 29, 31, 39], "long": [18, 29, 320, 330], "period": 18, "prevent": [18, 39, 44, 297, 298, 299, 303, 422, 429, 468, 469, 470], "instead": [18, 28, 29, 31, 32, 36, 40, 42, 44, 45, 59], "unabl": 18, "obvious": 18, "never": 18, "reflect": [18, 35], "qualiti": 18, "hypothet": 18, "frustrat": 18, "delai": 18, "busi": 18, "sometim": 18, "fine": [18, 44, 47], "person": 18, "becaus": [18, 28, 31, 32, 33, 35, 37, 38, 40, 42, 46, 47, 59], "inact": 18, "limit": [18, 29, 31, 42, 45, 47, 59, 100, 114, 115, 234, 241, 242, 362, 363], "me": 18, "unfairli": 18, "definit": [18, 32, 37, 44, 333, 334, 335], "investig": 18, "Then": [18, 19, 44, 59], "practic": [18, 31], "separ": [18, 31, 35, 42, 44, 45], "branch": [18, 59, 78, 79, 174, 182], "simpli": [18, 28, 31, 32, 35, 36, 38, 39, 40, 42, 46, 47, 174, 197], "role": [18, 43], "kept": [18, 39, 378, 379, 380], "date": 18, "upstream": [18, 30], "complic": [18, 42], "script": [18, 19, 29, 42, 59], "root": [18, 19, 45, 174, 228, 402, 403, 404, 405, 406], "merge_with_upstream": 18, "sh": 18, "name_of_your_branch": 18, "resolv": [18, 422, 427, 429], "browser": 18, "clone": [18, 19, 127, 145, 146, 147, 148], "push": [18, 30], "both": [18, 28, 29, 32, 38, 39, 40, 42, 44, 45, 46, 47, 58, 59, 174, 222, 320, 323, 333, 335, 341, 355], "repeat": [18, 28, 29, 33, 35, 234, 251, 362, 376], "yourself": [18, 58], "simpler": [18, 44], "cannot": [18, 37, 47], "alreadi": [18, 33, 40, 44, 59, 127, 174, 190, 198, 218, 233, 333, 346, 434], "least": [18, 29, 32, 35, 333, 341], "final": [18, 28, 29, 32, 35, 37, 42, 44, 45, 81, 90, 91, 234, 254, 452, 463], "done": [18, 29, 31, 45], "tickbox": 18, "lower": [18, 29, 42, 81, 86, 96, 174, 216, 333, 334, 402, 406], "corner": 18, "without": [18, 27, 32, 35, 42, 44, 45, 46, 58, 59, 234, 278, 283, 362, 370, 382, 384, 414, 415, 416, 418], "span": 18, "intent": 18, "larg": [18, 45, 174, 178, 218], "approach": [18, 31, 32, 44, 45, 59], "discourag": 18, "philosophi": 18, "increment": [18, 234, 266], "frequent": 18, "valuabl": 18, "infrequ": 18, "earli": [18, 434], "wast": 18, "spot": [18, 32], "mistak": 18, "propos": 18, "mountain": 18, "around": [18, 32, 35, 40, 44, 59], "advoc": [18, 59], "individu": [18, 32], "per": [18, 45, 127, 320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "style": [18, 409, 412], "ve": [18, 41, 44, 402, 403, 434], "were": [18, 27, 29, 31], "actual": [18, 26, 32, 39, 41, 44, 46, 59], "aim": [18, 41], "part": [18, 27, 30, 31, 32, 42, 43, 47, 58, 59, 81, 96, 97, 297, 299, 301, 303, 304, 305, 464, 465], "subsect": 18, "filepath": 18, "interact": [18, 434], "session": 18, "block": [18, 32, 41, 43, 47, 434], "smaller": [18, 42, 47, 362, 363, 371, 422, 427, 429], "manual": [18, 31, 46, 382, 383, 392, 393], "edit": 18, "exact": [18, 42, 414, 415], "beauti": 18, "histori": 18, "particularli": [18, 45], "concern": [18, 26, 29, 39, 41], "abl": [18, 32, 37, 44, 47], "effici": [18, 31, 32, 39, 40, 42, 45, 59, 422, 423], "too": [18, 59, 174, 178, 218], "difficult": [18, 31, 59, 414, 415, 416, 418], "undo": 18, "stress": 18, "frequenc": [18, 234, 254], "builder": [19, 57, 59, 434], "dockerfil": 19, "window": [19, 312, 318, 320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "maco": 19, "ubuntu": 19, "uid": 19, "bash": 19, "ivy_dev": 19, "3": [19, 29, 42, 44, 45, 46, 47, 80, 81, 89, 92, 95, 98, 99, 127, 169, 174, 178, 188, 196, 200, 201, 205, 216, 217, 219, 231, 234, 237, 238, 285, 312, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 333, 334, 335, 336, 337, 340, 344, 351, 353, 354, 357, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 373, 402, 403, 404, 408, 414, 416, 419, 420, 422, 423, 429, 431, 432, 434], "8": [19, 29, 41, 45, 174, 178, 201, 216, 217, 234, 238, 312, 315, 320, 327, 333, 335, 336, 337, 353, 362, 363, 367, 369, 372, 402, 403, 404, 422, 423, 434, 452, 463], "activ": [19, 27, 46, 71, 72, 73, 74, 75, 76, 77, 434, 442, 443], "builtin": [19, 44, 46], "directori": [19, 234, 284], "bat": 19, "OR": [19, 174, 187, 214, 431, 433], "bin": 19, "mac": 19, "insid": [19, 27, 37], "make_docs_without_dock": 19, "rel": [19, 297, 299, 301, 303, 304, 305, 333, 337, 344, 347, 354, 362, 367, 371, 419, 420, 421, 434], "synchron": 19, "rest": [19, 43, 47], "remove_doc": 19, "_": [19, 28, 39, 44, 45, 297, 298, 299, 333, 357, 414, 416, 419, 420], "indic": [19, 43, 47, 70, 75, 174, 225, 234, 255, 256, 263, 276, 279, 280, 320, 321, 322, 323, 324, 325, 326, 327, 333, 356, 362, 371, 382, 383, 385, 387, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 409, 410, 411, 412, 414, 415, 417, 419, 420, 421, 434, 437, 439, 452, 453, 454, 455, 456, 457, 458, 459, 464, 465], "privat": [19, 468, 472], "fulfil": [19, 41, 434], "autogenerated_sourc": 19, "format": [19, 28, 37, 38, 42, 44, 45, 100, 108, 112, 127, 144, 422, 423, 434], "png": [19, 45], "_imag": 19, "lastli": 19, "docstr": [19, 26, 27, 32, 40, 81, 92, 174, 178, 216, 217, 231, 333, 336, 362, 367, 371, 414, 416, 419, 420], "structur": [19, 27, 32, 35, 36, 45, 46, 234, 243, 382, 395], "rst": 19, "submodul": [19, 30, 31, 32, 38, 41, 42, 46, 434, 466, 467, 474, 475], "skip": [19, 31, 382, 395], "read": [19, 434], "configur": [19, 37, 382, 395], "partial_sourc": 19, "conf": 19, "copi": [19, 28, 33, 37, 42, 44, 45, 58, 59, 81, 83, 87, 100, 103, 234, 244, 292, 293, 362, 370, 382, 384, 419, 421], "5": [19, 29, 44, 45, 46, 81, 89, 92, 95, 98, 99, 127, 162, 174, 178, 183, 188, 201, 216, 217, 219, 231, 234, 238, 312, 315, 316, 320, 323, 325, 326, 333, 334, 335, 336, 337, 340, 353, 354, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 402, 403, 404, 408, 414, 416, 419, 420, 422, 423, 431, 432, 452, 463], "create_rst_fil": 19, "filter": [19, 320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "recurs": [19, 32, 34, 36, 46, 59, 382, 383, 384, 392, 393, 394], "repres": [19, 44, 81, 92, 100, 108, 113, 174, 177, 178, 180, 183, 192, 218, 227, 320, 329, 333, 349, 350], "its": [19, 28, 100, 104, 127, 168, 333, 341, 362, 366, 370, 371, 375], "overal": [19, 28, 36, 37, 38, 47], "markup": 19, "6": [19, 29, 44, 45, 46, 81, 89, 174, 178, 185, 201, 216, 217, 219, 231, 234, 238, 312, 315, 320, 323, 327, 333, 335, 336, 337, 351, 353, 358, 361, 362, 363, 364, 367, 369, 370, 371, 372, 402, 403, 404, 414, 416, 422, 423], "extract": [19, 27], "get_functions_and_class": 19, "doctr": 19, "readm": [19, 59], "module_nam": 19, "copy_readme_to_rst": 19, "tabl": 19, "content": [19, 39, 42, 45], "toc": 19, "tree": 19, "accord": [19, 32, 37, 100, 106, 114, 174, 178, 188, 218, 234, 255, 279, 280, 333, 355, 362, 365, 377, 422, 428, 430], "append": [19, 31, 42, 45, 174, 186, 333, 337, 341], "append_toctree_to_rst": 19, "9": [19, 29, 45, 46, 174, 178, 185, 216, 217, 297, 298, 299, 303, 320, 323, 327, 333, 335, 336, 351, 353, 362, 363, 367, 371, 372, 402, 403, 404, 422, 423, 468, 469, 470], "index": [19, 32, 44, 80, 81, 86, 92, 234, 255, 256, 362, 374, 382, 385, 386, 389, 390, 391, 396, 398, 409, 410, 411, 412, 414, 415, 416, 419, 420, 437, 439], "create_index_rst": 19, "14": [19, 29, 333, 353, 362, 369, 402, 404, 422, 423], "\u03c0": [19, 174, 176, 179, 181, 182], "namespac": [19, 27, 37, 42, 47], "remov": [19, 28, 31, 32, 37, 39, 47, 333, 337, 341, 354, 362, 373, 378, 379, 380], "debug_mod": 20, "set_breakpoint_debug_mod": 20, "set_debug_mod": 20, "debug_mode_in": [20, 23], "except": [20, 23, 32, 37, 38, 39, 44, 59, 100, 105, 234, 239, 248, 294, 333, 347, 362, 364, 374, 409, 412, 431, 432, 433], "set_exception_debug_mod": 20, "unset_debug_mod": 20, "debugg": [21, 22, 23, 24, 25], "mainli": [26, 43, 45], "target": [26, 41, 45, 46, 47, 127, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 434], "under": [26, 28, 29, 31, 32, 36, 41, 42, 45, 47], "hood": [26, 29, 31, 32, 36, 41, 42, 45, 47], "weed": [26, 41], "behind": [26, 41, 43, 297, 299, 301, 303, 304, 305], "navig": 26, "tour": 26, "primari": [26, 31, 33, 39, 59], "composit": [26, 31, 33, 35, 42, 46, 47, 59], "mix": [26, 29, 31, 42, 100, 119, 174, 178, 201, 216, 217, 320, 323, 327, 333, 353, 358, 361, 422, 425], "nestabl": [26, 28, 29, 31, 36, 39, 320, 323], "wrap": [26, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 44, 47, 59, 60, 68, 234, 240, 297, 310], "dynam": [26, 37, 38, 39, 42, 78, 79], "runtim": [26, 31], "thei": [26, 27, 29, 32, 36, 37, 38, 39, 44, 45, 46, 47, 59, 378, 379, 380, 402, 403, 434, 474, 475], "handl": [26, 31, 32, 34, 36, 37, 38, 39, 40, 46, 59, 78, 79, 127, 140, 141, 142, 144, 162, 163, 170, 173, 297, 299, 301, 303, 304, 305, 468, 469, 470, 471, 472, 473], "h": [26, 312, 313, 314, 315, 317, 319, 320, 323, 324, 325, 326, 327], "inplac": [26, 29, 34, 35, 40, 44, 46, 234, 239, 264, 268, 289, 297, 299, 301, 303, 304, 305, 444, 445, 468, 469, 470, 471, 472, 473], "output": [26, 27, 28, 29, 31, 32, 35, 38, 39, 40, 42, 44, 46, 47, 59, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 98, 99, 127, 134, 135, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 240, 242, 246, 253, 255, 297, 300, 320, 322, 324, 326, 328, 330, 331, 332, 333, 354, 362, 363, 366, 367, 368, 369, 371, 373, 374, 376, 402, 404, 405, 406, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463], "j": [26, 234, 237, 238, 333, 354, 422, 423], "k": [26, 42, 81, 86, 96, 97, 234, 237, 320, 332, 333, 341, 348, 350, 351, 352, 354, 402, 405, 406, 409, 412], "l": [26, 333, 334, 338, 341, 354], "borrow": 26, "n": [26, 81, 92, 96, 97, 234, 238, 320, 328, 333, 337, 341, 343, 344, 345, 346, 347, 348, 351, 352, 354, 355, 356, 357, 362, 365, 366, 368, 374, 377, 402, 405, 406, 409, 412, 422, 425, 428, 429, 430, 431, 432, 433], "categori": [27, 35, 36, 37, 41, 434], "taken": [27, 47, 333, 337], "constant": [27, 32, 46, 47, 127, 134, 135, 362, 365, 382, 388, 400, 401, 446, 449, 451, 464, 465, 466, 467], "creation": [27, 37, 38, 42, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "data_typ": [27, 37, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "elementwis": [27, 32, 42, 47, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "linear_algebra": [27, 44, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "sort": [27, 333, 338, 351, 352, 420], "statist": [27, 37, 423, 424, 425, 426, 427, 428, 429, 430], "util": [27, 38, 127, 157, 432, 433], "compil": [27, 41, 43, 59, 434, 464, 465, 468, 469, 470, 471, 472, 473], "gradient": [27, 45, 46, 58, 59, 127, 168, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 378, 379, 380, 381, 434, 468, 469, 470, 471, 472, 473], "loss": [27, 32, 45, 46, 47, 359, 360, 361, 434], "meta": [27, 379, 380, 381], "nest": [27, 32, 36, 44, 45, 46, 59, 127, 148, 152, 156, 234, 291, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 464, 465, 468, 469, 470, 471, 472, 473], "norm": [27, 234, 241, 242, 333, 342, 356, 401, 434, 467, 468, 470], "random": [27, 38, 47, 58, 403, 404, 405, 406, 407, 408, 434], "overlap": 27, "sever": [27, 59, 333, 340], "judgement": 27, "locat": [27, 31, 38, 402, 403], "matmul": [27, 42, 333, 351, 434], "some_namespac": 27, "some_backend": 27, "another_backend": 27, "break": [27, 40, 44, 434], "anyth": 27, "refactor": 27, "ongo": 27, "subfold": [27, 31], "via": [27, 33, 36, 37, 38, 39, 42, 44, 45, 58, 382, 383, 392, 393], "file_nam": 27, "defin": [27, 28, 37, 40, 44, 46, 59, 174, 218, 223, 234, 276, 333, 335, 338, 350, 402, 404, 422, 424, 425, 426], "def": [27, 29, 32, 37, 38, 39, 40, 42, 44, 45, 46, 47, 434], "my_func": [27, 29], "union": [27, 29, 32, 35, 37, 38, 39, 40, 42, 47, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 140, 141, 142, 144, 149, 150, 151, 152, 157, 163, 165, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 260, 262, 263, 267, 276, 279, 280, 285, 286, 291, 292, 293, 295, 296, 297, 309, 312, 316, 318, 319, 320, 321, 323, 325, 327, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 393, 394, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433], "nativearrai": [27, 29, 32, 35, 37, 39, 40, 42, 44, 47, 60, 68, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 103, 104, 105, 112, 114, 115, 117, 118, 119, 127, 144, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 260, 262, 263, 267, 276, 279, 280, 285, 291, 292, 293, 295, 296, 297, 309, 312, 316, 318, 319, 320, 321, 323, 325, 327, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 384, 394, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433], "ax": [27, 29, 37, 44, 127, 168, 333, 342, 350, 353, 356, 362, 365, 367, 368, 371, 373, 375, 377, 409, 410, 411, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "int": [27, 29, 32, 37, 38, 40, 47, 70, 75, 78, 79, 81, 84, 86, 88, 89, 90, 91, 94, 96, 97, 98, 100, 105, 111, 113, 114, 115, 118, 127, 149, 150, 151, 152, 160, 161, 162, 168, 234, 245, 246, 249, 250, 251, 254, 255, 260, 276, 279, 280, 285, 286, 295, 312, 316, 318, 320, 321, 323, 325, 327, 333, 335, 337, 353, 354, 355, 356, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 382, 394, 402, 403, 404, 405, 406, 407, 409, 410, 411, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433], "tupl": [27, 37, 38, 40, 44, 45, 46, 59, 78, 79, 81, 83, 84, 88, 93, 94, 98, 100, 105, 234, 254, 286, 312, 318, 320, 323, 327, 333, 344, 347, 351, 353, 356, 362, 364, 365, 367, 368, 371, 373, 374, 377, 382, 384, 385, 387, 389, 390, 391, 393, 394, 396, 397, 398, 399, 402, 404, 405, 406, 409, 412, 414, 415, 416, 417, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "dtype": [27, 29, 32, 37, 38, 44, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 174, 188, 219, 234, 237, 238, 276, 312, 315, 409, 410, 419, 421, 422, 423, 427, 428, 429, 431, 432, 434], "nativedtyp": [27, 37, 38, 40, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 100, 102, 103, 110, 111, 112, 422, 429], "nativedevic": [27, 38, 40, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 127, 141, 142, 157, 163, 165, 169, 170, 173, 234, 255, 256, 276, 279, 280, 402, 403, 404, 405, 406], "my": 27, "cool": 27, "special": [27, 28, 29, 35, 40, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 225, 226, 227, 228, 231, 233, 422, 424, 425, 426, 428, 429, 430], "nan": [27, 28, 80, 100, 103, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 202, 204, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 234, 262, 296, 414, 415, 416, 418, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433], "y": [27, 29, 42, 44, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 99, 100, 103, 127, 144, 162, 174, 178, 182, 185, 188, 190, 191, 196, 201, 216, 217, 219, 231, 234, 237, 238, 244, 253, 291, 292, 293, 297, 300, 312, 316, 319, 320, 327, 329, 333, 334, 335, 336, 340, 353, 354, 358, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 402, 403, 404, 405, 406, 408, 409, 411, 413, 414, 416, 419, 420, 422, 423, 428, 429, 431, 432], "input": [27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 42, 44, 45, 46, 47, 59, 60, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 99, 100, 103, 104, 106, 107, 109, 110, 111, 112, 113, 117, 118, 119, 127, 134, 135, 144, 145, 148, 149, 152, 156, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 260, 262, 263, 265, 266, 267, 269, 270, 271, 272, 285, 286, 289, 291, 292, 293, 295, 296, 297, 300, 302, 307, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 400, 401, 402, 403, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467], "numer": [27, 46, 81, 92, 100, 103, 174, 175, 178, 190, 193, 197, 198, 199, 202, 203, 204, 205, 213, 214, 218, 219, 220, 222, 223, 225, 230, 233, 234, 258, 259, 281, 282, 287, 288, 333, 335, 341, 346, 351, 353, 354, 355, 402, 408, 409, 410, 411, 422, 424, 427, 429, 446], "along": [27, 39, 81, 90, 91, 127, 149, 150, 151, 152, 153, 154, 155, 156, 168, 234, 245, 246, 255, 295, 312, 316, 333, 342, 354, 355, 356, 358, 360, 361, 362, 364, 367, 369, 371, 372, 374, 376, 378, 379, 380, 381, 402, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "result": [27, 28, 29, 31, 35, 36, 37, 39, 40, 45, 70, 73, 81, 82, 100, 119, 127, 134, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 242, 246, 253, 255, 279, 280, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 337, 342, 351, 356, 362, 363, 366, 367, 368, 369, 371, 373, 374, 382, 395, 409, 410, 411, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "broadcast": [27, 28, 29, 37, 70, 73, 100, 104, 105, 127, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 253, 333, 341, 342, 344, 347, 350, 355, 356, 362, 363, 366, 367, 368, 369, 371, 373, 374, 409, 410, 411, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "cooler": 27, "keyword": [27, 37, 38, 39, 40, 45, 81, 92, 127, 134, 135, 148, 152, 156, 234, 236, 273, 382, 388, 422, 429, 464, 465], "hint": [27, 28, 32, 35, 39, 40, 81, 92, 174, 178, 216, 217, 231, 320, 323, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420], "produc": [27, 127, 134, 135], "featur": [27, 40, 45, 434], "something_cool": 27, "category_nam": [28, 32, 37, 38, 40], "thorough": [28, 31, 40], "contrast": [28, 40], "backend_nam": [28, 32, 33, 34, 37, 38, 40], "account": 28, "instanti": 28, "tan": [28, 32, 36, 39, 40, 42, 174, 414, 416, 419, 420, 434], "firstli": [28, 29, 32, 35, 37, 45], "correspond": [28, 29, 30, 32, 35, 36, 37, 100, 104, 174, 182, 222, 333, 335, 338, 350, 362, 364, 371, 402, 403, 409, 410, 411, 414, 415, 416, 418, 422, 427, 428, 429, 430], "templat": [28, 434], "spec": [28, 29], "api_specif": [28, 414, 416, 419, 420], "array_api": 28, "raw": 28, "preview": 28, "newlin": 28, "render": 28, "incorrectli": 28, "onlin": 28, "approxim": [28, 70, 71, 174, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 209, 210, 222, 226, 227, 231, 333, 344, 347], "tangent": [28, 70, 77, 174, 181, 182, 183, 231, 232], "domain": [28, 174, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 210, 226, 227, 228, 231], "infin": [28, 80, 100, 103, 174, 175, 177, 178, 180, 181, 182, 190, 191, 192, 196, 197, 198, 199, 202, 203, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 333, 356, 422, 424, 426, 431, 432, 433], "codomain": [28, 174, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 210, 226, 227, 228, 231], "element": [28, 42, 47, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 88, 89, 96, 97, 127, 147, 151, 155, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 241, 242, 245, 246, 253, 263, 292, 293, 320, 328, 333, 335, 338, 341, 348, 351, 362, 363, 367, 369, 371, 372, 373, 402, 403, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 452, 460], "x_i": [28, 174, 175, 176, 177, 179, 180, 181, 185, 190, 191, 192, 196, 197, 198, 202, 203, 204, 207, 208, 210, 213, 219, 225, 226, 227, 228, 229, 231, 233, 414, 415, 416, 418, 422, 424, 425, 426, 428, 429, 430], "assum": [28, 37, 44, 45, 59, 81, 92, 174, 178, 191, 216, 217, 226, 231, 320, 323, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420], "express": [28, 42, 47, 174, 176, 179, 181, 182, 191, 226, 231], "radian": [28, 174, 176, 179, 181, 182, 191, 226, 231], "float": [28, 32, 37, 44, 46, 70, 72, 80, 81, 82, 84, 86, 88, 89, 91, 94, 98, 100, 103, 110, 114, 117, 119, 127, 157, 163, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 193, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 234, 241, 242, 254, 258, 259, 281, 282, 287, 288, 312, 314, 319, 320, 323, 327, 333, 334, 336, 338, 339, 340, 344, 347, 348, 350, 351, 356, 358, 359, 360, 361, 402, 405, 406, 414, 415, 416, 418, 422, 424, 425, 426, 427, 428, 429, 430], "operand": [28, 174, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 422, 423, 424, 426, 429], "whose": [28, 81, 96, 97, 174, 177, 180, 183, 191, 192, 222, 226, 227, 231, 234, 240, 333, 334, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 350, 351, 352, 354, 362, 367, 371, 414, 415, 416, 422, 423], "ref": [28, 174, 188, 205, 218, 220, 223, 230, 362, 374], "promot": [28, 32, 37, 100, 103, 106, 119, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 193, 196, 197, 207, 208, 210, 211, 215, 218, 222, 223, 226, 227, 228, 231, 333, 334, 335, 340, 341, 344, 346, 347, 350, 355, 356, 362, 374, 422, 425], "But": [28, 47], "needless": 28, "duplic": [28, 33, 34, 44, 46], "info": [28, 434], "subset": [28, 31, 40, 42], "extend": [28, 31, 33, 40], "renam": 28, "conform": [28, 81, 92, 174, 178, 197, 216, 217, 231, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420], "org": [28, 297, 298, 299, 414, 416, 419, 420], "elementwise_funct": [28, 414, 416, 419, 420], "explan": [28, 40, 44], "descript": [28, 81, 92, 174, 178, 216, 217, 231, 320, 323, 333, 336, 356, 362, 367, 369, 371, 414, 416, 419, 420], "simplic": [28, 46, 58, 81, 92, 174, 178, 216, 217, 231, 320, 323, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420], "instanc": [28, 29, 31, 32, 35, 37, 39, 40, 45, 46, 47, 60, 68, 81, 92, 127, 134, 165, 174, 178, 201, 216, 217, 219, 231, 234, 267, 320, 323, 333, 335, 336, 353, 358, 361, 362, 363, 367, 369, 371, 372, 414, 416, 419, 420, 431, 432, 444, 445], "judgment": 28, "docst": [28, 29], "after": [29, 37, 41, 174, 228, 297, 299, 300, 301, 303, 304, 305, 312, 313, 316, 400, 401, 468, 469, 470, 471, 472, 473], "three": [29, 41, 81, 92, 434], "func_nam": [29, 32], "latter": 29, "subtract": [29, 35, 174], "multipli": [29, 35, 174, 234, 245, 422, 423], "divid": [29, 35, 174, 199, 234, 287, 362, 372], "cover": [29, 32, 34, 41], "variant": 29, "independ": [29, 30, 42, 47, 333, 335, 350, 402, 403], "combinatorili": 29, "equal": [29, 36, 37, 81, 86, 88, 89, 100, 103, 174, 186, 188, 202, 203, 222, 234, 235, 237, 238, 333, 337, 344, 347, 362, 363, 365, 372, 377, 402, 406, 414, 415, 416, 418, 419, 420, 421, 422, 425, 428, 429, 430], "maximum": [29, 42, 45, 47, 127, 148, 152, 156, 168, 174, 234, 241, 242, 254, 297, 303, 362, 363, 382, 394, 409, 410, 422, 424, 426, 434], "variat": [29, 31], "grid": [29, 31, 58, 81, 92], "across": [29, 31, 32, 36, 37, 40, 127, 134, 135, 145, 146, 148, 149, 150, 151, 152, 156, 166, 167, 234, 237, 238, 382, 388, 409, 411], "vari": [29, 31, 36, 44, 414, 415, 416, 418], "valu": [29, 31, 32, 37, 38, 40, 42, 44, 47, 59, 81, 82, 86, 88, 89, 90, 91, 100, 103, 109, 110, 111, 127, 136, 143, 167, 168, 174, 175, 176, 178, 179, 181, 190, 194, 195, 198, 199, 200, 201, 205, 206, 216, 217, 218, 220, 221, 222, 224, 233, 234, 241, 242, 243, 248, 254, 255, 256, 261, 264, 268, 278, 279, 280, 281, 282, 283, 296, 297, 298, 299, 300, 303, 307, 311, 312, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 344, 347, 348, 349, 350, 351, 352, 356, 362, 363, 365, 369, 370, 377, 378, 379, 380, 382, 386, 387, 388, 389, 390, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 472], "simplest": 29, "small": [29, 32, 42, 46, 174, 218, 333, 344, 347, 400, 401, 466, 467], "dimens": [29, 42, 45, 70, 75, 81, 96, 97, 127, 155, 234, 249, 250, 251, 254, 260, 276, 295, 312, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 358, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 402, 408, 409, 410, 411, 412, 414, 415, 416, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463], "unus": [29, 39, 78, 79], "highlight": 29, "extra": [29, 34, 35, 42, 297, 300], "versatil": 29, "excess": [29, 33, 44], "combin": [29, 31, 32, 35, 36, 47, 312, 318, 333, 335, 422, 423], "__add__": [29, 35, 36, 40, 44], "__sub__": [29, 35, 36, 40, 44], "__mul__": [29, 35, 36, 40, 44], "__truediv__": [29, 35, 36], "respect": [29, 35, 36, 37, 40, 81, 92, 174, 175, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 218, 220, 223, 230, 297, 298, 299, 300, 301, 303, 304, 305, 333, 348, 378, 379, 380, 381], "meant": 29, "imaginari": 29, "std": [29, 402, 405, 422], "prod": [29, 37, 234, 250, 422], "var": [29, 42, 378, 379, 380, 422], "some_flag": 29, "bool": [29, 37, 47, 78, 79, 81, 88, 100, 103, 106, 109, 110, 111, 112, 116, 117, 118, 126, 127, 143, 144, 159, 168, 171, 174, 194, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 220, 234, 235, 237, 238, 245, 248, 252, 254, 260, 262, 269, 270, 271, 272, 285, 295, 296, 297, 307, 333, 334, 342, 351, 356, 362, 372, 382, 383, 384, 388, 392, 393, 394, 402, 403, 409, 410, 411, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "another_flag": 29, "true": [29, 31, 32, 36, 37, 42, 44, 45, 46, 47, 70, 71, 78, 79, 81, 90, 100, 103, 106, 127, 174, 200, 201, 202, 203, 204, 205, 213, 214, 234, 235, 237, 238, 239, 240, 252, 254, 262, 263, 270, 285, 291, 293, 296, 297, 299, 301, 302, 303, 304, 305, 307, 320, 328, 333, 334, 342, 351, 356, 358, 359, 360, 361, 362, 372, 378, 379, 380, 381, 382, 383, 392, 393, 395, 402, 403, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 452, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "axi": [29, 32, 37, 40, 42, 44, 47, 58, 70, 75, 81, 90, 91, 127, 128, 131, 136, 149, 150, 151, 152, 153, 154, 155, 156, 168, 234, 245, 246, 255, 295, 312, 316, 333, 335, 337, 355, 356, 358, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 402, 408, 409, 410, 411, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "54": [29, 174, 191, 422, 423], "jointli": 29, "x0": [29, 234, 237], "x1": [29, 40, 174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 216, 217, 218, 220, 222, 223, 230, 234, 237, 320, 325, 333, 335, 341, 346, 350, 353, 355, 409, 413], "x2": [29, 40, 174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 216, 217, 218, 220, 222, 223, 230, 320, 325, 333, 335, 341, 346, 350, 353, 355, 409, 413], "procedur": 29, "think": 29, "sens": [29, 44], "5574077": 29, "1850398": 29, "5463025": 29, "8422884": 29, "91601413": 29, "9647598": 29, "3738229": 29, "1597457": 29, "0963247": 29, "9955841": 29, "3278579": 29, "multi": [29, 41, 59, 320, 331, 333, 335, 422, 423, 434, 440, 452, 463], "seper": [29, 234, 254], "pars": [29, 59], "satisfi": [29, 333, 357], "ignor": [29, 59, 81, 92, 382, 393, 468, 472], "far": [29, 38, 43, 44, 382, 383, 393], "asid": [29, 58], "irrelev": [29, 37], "increasingli": 29, "complex": [29, 45, 46, 47, 333, 338, 351], "shown": [29, 40, 42, 44, 81, 92, 174, 178, 216, 217, 231, 333, 336, 362, 367, 369, 371, 414, 416, 419, 420], "rule": [29, 31, 32, 35, 36, 37, 100, 103, 106, 119, 174, 183, 188, 193, 218, 223, 333, 334, 335, 346, 350], "count": [29, 45, 127, 162, 333, 355, 362, 367, 414, 415, 416, 431, 432, 433], "14254655": 29, "1578213": 29, "380515": 29, "11": [29, 174, 178, 362, 367, 369, 402, 404, 422, 423], "12": [29, 234, 259, 333, 353, 362, 367, 369, 371, 402, 404, 422, 423], "shift": [29, 40, 174, 186, 188, 362, 371], "sequenc": [29, 58, 127, 134, 135, 234, 238, 273, 312, 318, 362, 372, 374, 452, 461, 466, 467, 474, 475], "15": [29, 320, 323, 333, 353, 362, 369, 371, 402, 404, 422, 423], "bit": [29, 32, 35, 44, 100, 113, 114, 115, 174, 185, 186, 188, 312, 314, 319, 422, 427, 429], "trivial": 29, "By": [29, 32, 46, 47, 234, 245, 246, 333, 355, 362, 369, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "demonstr": [29, 44], "non": [29, 36, 37, 42, 78, 79, 100, 103, 116, 174, 213, 214, 320, 323, 333, 336, 344, 351, 353, 355, 356, 409, 410, 411, 412, 422, 424, 425, 426, 427, 430, 431, 432, 433, 464, 465, 468, 472], "float32": [29, 37, 100, 101, 102, 174, 219, 312, 315], "z": [29, 42, 44, 127, 162, 174, 178, 201, 216, 217, 234, 237, 238, 333, 335, 358, 360, 422, 423], "dictat": [29, 35, 39, 40], "exlud": 29, "13": [29, 320, 327, 362, 369, 402, 404, 422, 423], "unit": [30, 31, 70, 71, 72, 73, 127], "test_array_api": [30, 31], "thoroughli": [30, 31], "On": [31, 43, 47], "map": [31, 32, 36, 40, 45, 58, 59, 127, 134, 382, 389, 390, 394, 395, 452, 463], "collect": [31, 58, 70, 78, 127, 234, 297, 312, 320, 358, 382, 395, 400, 402, 441, 452, 466, 468], "test_ivi": 31, "properti": [31, 32, 36, 44, 45, 46, 127, 136, 464, 465, 468, 469, 470, 471, 473], "pytest": 31, "fixtur": 31, "ones": [31, 42, 44, 45, 81, 86, 95, 234, 276, 312, 318, 434], "commit": 31, "consum": [31, 40, 127], "300": 31, "ab": [31, 174, 222, 333, 356, 434], "hit": [31, 42], "permit": [31, 35, 40], "action": 31, "eleg": 31, "intellig": 31, "sampl": [31, 312, 313, 316, 320, 328, 402, 403, 405, 406, 422, 428, 430, 452, 460], "rang": [31, 45, 46, 47, 81, 82, 90, 91, 422, 427, 429, 434], "previou": [31, 40, 47, 297, 299, 303], "cach": [31, 32, 127, 142, 234, 240], "select": [31, 42, 44, 47], "unexplor": 31, "known": 31, "repeatedli": [31, 382, 391], "upload": 31, "artifact": 31, "ci": 31, "parametr": 31, "strategi": 31, "statement": [31, 59], "plai": [31, 47], "todo": 31, "helper": [31, 45], "arbitrari": [31, 32, 36, 40, 46, 59, 81, 92, 100, 104, 119, 127, 153, 154, 156], "verifi": [31, 37, 38, 44, 434, 440], "truth": [31, 174, 194, 200, 201, 205, 206, 220], "opt": [31, 44], "defer": [31, 32, 35, 36, 37, 38], "well": [31, 39, 46, 47, 58, 234, 262, 333, 350], "suffic": [31, 34], "catch": [31, 234, 248], "systemat": 31, "compar": [31, 45, 234, 235, 237, 238, 414, 415, 416, 418, 419, 420, 421], "safeguard": 31, "inabl": 31, "leav": [31, 32, 34, 36, 37, 39, 40, 45, 46, 362, 374, 382, 383, 384, 392, 393, 394], "fact": [31, 45], "num_gpu": [31, 38, 127], "four": [32, 37, 40, 45], "categor": [32, 38], "mutual": [32, 36], "exclus": [32, 36, 47, 81, 82, 234, 245, 269, 270, 272, 297, 302, 402, 404], "constitut": [32, 42, 422, 428, 430], "venn": 32, "diagram": 32, "lowest": [32, 59, 382, 394, 402, 404], "light": [32, 59], "wherea": [32, 35, 37, 38, 40, 47], "hand": [32, 59], "themselv": [32, 37, 38, 46, 382, 383], "cross_entropi": [32, 358, 361], "pred": [32, 358, 359, 360, 361], "epsilon": [32, 46, 297, 298, 299, 303, 333, 344, 347, 358, 359, 360, 361, 400, 401, 466, 467, 468, 469, 470], "1e": [32, 46, 47, 234, 259, 297, 298, 299, 303, 333, 351, 358, 359, 360, 361, 434, 468, 469, 470, 471, 473], "clip": [32, 42, 45, 47, 174, 216, 217, 234, 241, 242, 362, 434], "log_pr": 32, "log": [32, 42, 45, 81, 91, 174, 209, 211, 333, 349, 434], "neg": [32, 70, 72, 81, 82, 86, 174, 202, 203, 218, 222, 223, 333, 351, 355, 356, 362, 367, 371, 431, 432, 433], "sum": [32, 37, 42, 127, 153, 154, 155, 156, 168, 174, 178, 211, 234, 246, 250, 279, 280, 333, 351, 354, 356, 422, 423, 428], "explicitli": [32, 35, 39, 42, 59, 333, 338, 452, 461, 463, 464, 465], "array_arg": 32, "typic": 32, "though": [32, 45, 59], "whatsoev": 32, "commonli": [32, 422, 428, 430], "outsid": [32, 38, 42, 44, 47, 362, 363, 374], "cache_fn": [32, 234], "stable_divid": [32, 234], "denomin": [32, 59, 234, 253, 259, 282, 287, 288, 400, 401, 466, 467], "divis": [32, 174, 188, 193, 199, 223, 234, 253, 259, 282, 287, 288, 297, 298, 299, 303, 468, 469, 470], "leaf": [32, 45, 382, 383, 392, 393], "piec": [32, 34, 35, 42], "deal": [32, 59], "batch": [32, 36, 45, 127, 166, 167, 234, 254, 312, 317, 320, 329, 333, 356, 378, 379, 380, 381, 400, 401, 466, 467], "concurr": 32, "weight": [32, 36, 46, 47, 297, 298, 299, 301, 303, 304, 305, 320, 329, 330, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 468, 470, 471], "modif": 32, "_wrap_funct": [32, 34], "appear": [32, 37, 38, 39, 44, 362, 366], "non_wrapped_funct": [32, 37, 38, 39], "dure": [32, 37, 38, 39, 59, 78, 79, 234, 294, 297, 298, 299, 303, 333, 341, 378, 379, 380, 381, 422, 428, 430, 464, 465, 468, 469, 470, 472], "static": [32, 59, 78, 79], "group": [32, 36, 312, 318], "briefli": [32, 45], "can_cast": [32, 37, 100], "cast": [32, 37, 100, 103, 106, 312, 314, 319, 362, 364, 422, 427, 429, 434], "set_default_dtyp": [32, 37, 100], "default_dtyp": [32, 37, 100], "get_all_arrays_on_dev": 32, "nested_map": [32, 382], "index_nest": [32, 382], "quit": [32, 34, 35], "store": [33, 35, 36, 42, 44, 45, 46, 234, 254, 297, 310, 333, 354, 362, 372, 464, 465], "__dict__": [33, 42, 44], "ivy_original_dict": [33, 42], "string": [33, 37, 38, 42, 45, 100, 101, 102, 112, 116, 126, 127, 140, 141, 142, 157, 163, 169, 170, 173, 234, 247], "unmodifi": [33, 37], "loop": [33, 59, 378, 379, 380, 381], "solv": [33, 43, 58, 333], "achiev": [34, 45, 47], "_wrap_or_unwrap_funct": 34, "_function_wrap": 34, "logic": [34, 35, 37, 38, 44, 174, 212, 213, 214, 431, 432, 433, 434], "independenli": 34, "topic": [34, 44], "tf": [35, 37, 38, 39, 40, 42, 47, 59, 434], "empti": [35, 37, 38, 81, 82, 422, 428, 429, 431, 432, 433], "overwritten": 35, "wrapper": [35, 39, 40, 44], "self": [35, 42, 44, 45, 46, 47, 434, 468, 472], "_data": [35, 44], "organiz": [35, 36], "inherit": [35, 36, 44], "arraywithelementwis": 35, "intern": [35, 36, 38, 127, 297, 310, 382, 383, 392, 393, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 474, 475], "underpin": [35, 36, 42], "programmat": [35, 36], "backup": [35, 36], "accident": [35, 36], "readabl": [35, 36, 40, 44, 45], "absent": [35, 36], "perk": [35, 36], "auto": [35, 36, 45], "__setitem__": [35, 36, 44], "sin": [35, 42, 174, 234, 254, 434], "throw": [35, 44], "agnost": [35, 40, 42, 44, 47, 59, 434], "imposs": 35, "chain": [35, 36, 46, 47, 59, 378, 379, 380, 382, 395, 474, 475], "coupl": [35, 44, 46], "anywai": 35, "secondli": [35, 37], "five": [36, 45], "all_tru": [36, 45], "evalu": [36, 174, 196, 197, 207, 208, 209, 210, 219, 225, 229, 382, 383, 392, 393, 431, 432, 433], "boolean": [36, 81, 88, 100, 103, 116, 126, 127, 159, 171, 174, 184, 185, 187, 189, 212, 213, 214, 215, 234, 235, 237, 238, 262, 263, 264, 268, 269, 270, 271, 272, 289, 296, 297, 302, 378, 379, 380, 382, 392, 422, 426], "to_iter": 36, "travers": [36, 42, 44, 382, 394], "containerbas": 36, "decis": [36, 42, 44], "bind": 36, "multi_map": 36, "diff": [36, 45], "displai": [36, 45], "common_key_chain": 36, "recap": [36, 46], "arbitrarili": [36, 45], "multi_map_in_static_method": 36, "static_add": 36, "static_tan": 36, "static_rol": 36, "roll": [36, 40, 362], "containerwithelementwis": 36, "__repr__": 36, "control": [36, 37, 39, 44, 45, 58], "__getattr__": 36, "kei": [36, 45, 127, 136, 234, 243, 320, 331, 332, 378, 379, 380, 382, 385, 391, 395, 444, 445, 452, 463, 468, 472], "underli": [36, 174, 184, 187, 189, 215], "queri": [36, 37, 44, 127, 157, 167, 320, 331, 332, 452, 463], "attribut": [36, 37, 43, 44, 45, 46, 100, 114, 115], "__setattr__": 36, "__getitem__": 36, "__contains__": 36, "__getstate__": 36, "__setstate__": 36, "pickl": [36, 45], "unpickl": 36, "static_subtract": 36, "static_multipli": 36, "static_divid": 36, "int8": 37, "int16": [37, 422, 427, 429], "int32": [37, 422, 423, 427, 429], "int64": [37, 174, 188, 422, 427, 429], "uint8": [37, 312, 314, 319], "uint16": [37, 422, 427, 429], "uint32": [37, 422, 427, 429], "uint64": [37, 422, 427, 429], "bfloat16": 37, "float16": 37, "float64": [37, 100, 103], "deriv": [37, 38, 44, 46, 81, 85, 89, 95, 99, 297, 298, 299, 301, 303, 304, 305, 382, 384, 394, 464, 468, 472, 474], "constructor": [37, 38, 44, 234, 236, 474, 475], "all_dtyp": 37, "all_numeric_dtyp": 37, "all_int_dtyp": 37, "all_float_dtyp": 37, "fall": [37, 41, 434, 464, 465, 468, 472], "replic": 37, "valid": [37, 42, 100, 107, 320, 321, 322, 323, 324, 325, 326, 327, 362, 374, 431, 432, 433, 452, 453, 454, 455, 456, 457, 458, 459], "invalid": [37, 333, 355, 431, 432, 433], "thirdli": 37, "native_float32": 37, "importantli": [37, 44, 47, 58], "unsupport": 37, "longer": [37, 39], "varieti": [37, 38], "astyp": [37, 39, 100], "broadcast_to": [37, 100], "result_typ": [37, 100], "conveni": [37, 38, 40, 43, 45, 46], "arguabl": [37, 38], "compound": 37, "reduct": [37, 44, 234, 250, 279, 280, 431, 432, 433, 434], "overflow": [37, 174, 178, 422, 429], "_function_w_arrays_dtype_n_dev_handl": [37, 38], "non_dtype_wrapped_funct": [37, 38], "applic": [37, 38, 46, 320, 331, 332, 382, 388, 394], "arr": [37, 38], "scalar": [37, 42, 47, 59, 81, 89, 234, 276, 293, 296, 333, 356], "default_int_dtyp": [37, 100], "default_float_dtyp": [37, 100], "settabl": [37, 38], "set_default_int_dtyp": [37, 100], "set_default_float_dtyp": [37, 100], "arang": [37, 81, 90, 91, 312, 315, 319, 422, 423, 434], "dim": [37, 234, 276, 312, 313, 318, 333, 353, 452, 463], "integ": [37, 44, 81, 82, 88, 100, 115, 118, 119, 174, 175, 184, 185, 186, 187, 188, 189, 190, 198, 199, 215, 222, 223, 224, 233, 333, 343, 355, 356, 362, 372, 402, 404, 407, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "bear": 37, "popul": [37, 38, 42, 402, 403, 422, 428, 430], "keepdim": [37, 234, 295, 333, 342, 356, 409, 410, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "jaxarrai": [37, 38, 39, 40], "jnp": [37, 38, 39, 40, 47, 434], "mx": [37, 38, 39, 434], "nd": [37, 38, 39, 42, 47, 434], "One": [37, 42, 44, 45, 234, 250, 362, 370, 402, 404], "deleg": 37, "fill_valu": [37, 81, 88, 89, 174, 201], "shape_to_tupl": [37, 234], "item": [37, 42, 44, 45, 47, 100, 109, 127, 134, 135, 136, 143, 145, 147, 149, 151, 155, 234, 243, 261, 287, 288, 382, 387, 388, 389, 390, 394, 398, 399, 434, 464, 465], "as_n": [37, 100, 109, 110, 111, 112, 127, 143, 144], "cpu": [38, 59, 81, 90, 91, 127, 144, 160, 163, 169, 170, 173, 234, 255, 256, 276, 279, 280, 402, 403, 404, 406, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "gpu": [38, 44, 59, 127, 159, 161, 402, 404], "idx": [38, 44], "tpu": [38, 127, 171], "get_all_ivy_arrays_on_dev": [38, 127], "aliv": [38, 127, 158, 162, 164, 234, 257, 275, 277], "total_mem_on_dev": [38, 127], "amount": [38, 127, 170, 358, 359, 360, 361], "memori": [38, 39, 57, 59, 127, 142, 163, 168, 170, 173, 320, 330, 422, 423, 434], "dev_util": [38, 127], "num_cpu_cor": [38, 127], "default_devic": [38, 42, 127], "random_uniform": [38, 46, 402, 434], "dual": 38, "thrown": [38, 59], "unless": [38, 59, 174, 218, 234, 276], "distribut": [38, 59, 127, 145, 149, 150, 151, 152, 320, 328, 358, 359, 360, 361, 402, 403, 404, 405, 406, 452, 460, 464, 465], "non_dev_wrapped_funct": 38, "omit": [38, 39, 40, 414, 415, 416, 418], "rare": [38, 59], "set_default_devic": [38, 127], "overwrit": [39, 42, 127, 168], "program": 39, "old": 39, "strictli": 39, "inplace_upd": [39, 234, 444, 445], "ration": 39, "technic": [39, 40, 59], "speak": 39, "subtli": 39, "val": [39, 44, 234, 265, 266, 267, 281, 282], "x_nativ": 39, "val_n": 39, "args_to_n": [39, 44], "is_ivy_arrai": [39, 44, 234], "variabl": [39, 40, 45, 46, 47, 59, 234, 239, 265, 266, 267, 268, 269, 270, 272, 289, 297, 299, 300, 301, 302, 303, 304, 305, 307, 310, 320, 331, 333, 350, 378, 379, 380, 381, 400, 401, 434, 444, 445, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "is_vari": [39, 297], "assign": [39, 44], "irrespect": [39, 44, 100, 103], "inclus": [39, 81, 82, 402, 404], "unspecifi": [39, 174, 222, 223, 333, 338, 362, 374], "predominantli": [39, 58], "_function_w_arrays_n_out_handl": 39, "math": [39, 47, 434], "presenc": 39, "altern": [39, 45], "_wrap_fn": 39, "reshap": [39, 42, 44, 47, 312, 315, 319, 362, 434], "asarrai": [39, 81, 320, 321, 414, 416], "equival": [39, 45, 47, 81, 82, 174, 188, 213, 214, 223, 333, 344, 347, 350, 356], "input_arrai": 39, "adress": 40, "revisit": [40, 47], "dedic": [40, 44, 46, 297, 310, 444, 445], "variou": [40, 58], "posit": [40, 45, 58, 80, 81, 86, 100, 114, 127, 148, 152, 156, 174, 175, 202, 203, 218, 223, 234, 254, 333, 334, 362, 366, 371, 402, 407, 409, 412, 431, 432, 433, 444, 445], "__div__": 40, "dicat": 40, "addition": 40, "detect": [40, 45, 46, 382, 383, 393], "futher": 40, "brittl": 40, "intend": [40, 422, 429], "freeli": 40, "inde": [40, 59], "flexibl": 40, "original_typ": 40, "cumbersom": 40, "gain": [41, 46, 446], "sound": 41, "higher": [41, 42, 47, 59, 297, 299, 301, 303, 304, 305], "overview": [41, 58], "handler": [41, 43, 47, 434], "transpil": [41, 43, 434, 440], "fledg": [42, 43], "label": [42, 43, 47, 358, 359, 360, 361], "cuda": [42, 45, 59, 81, 90, 91, 127, 134, 140, 234, 255, 256, 276, 279, 280, 402, 403, 404, 406, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475], "syntact": [42, 47], "align": [42, 44, 434, 440], "x_min": [42, 47, 362, 363], "x_max": [42, 47, 362, 363], "clip_by_valu": [42, 47], "clamp": [42, 47], "mayb": [42, 44, 422, 423], "behavior": [42, 59, 174, 222, 223, 414, 415, 416, 418], "fit": [42, 312, 318, 362, 369], "logspac": [42, 81], "construct": [42, 43, 46, 47, 362, 376, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "stop": [42, 59, 81, 82, 90, 91, 127, 139, 168, 297, 299, 301, 303, 304, 305, 307, 378, 379, 380, 381, 468, 469, 470, 471, 472, 473], "num": [42, 81, 90, 91, 312, 318], "power_seq": 42, "linspac": [42, 81, 82, 434], "okai": 42, "bound": 42, "set_framework": [42, 44, 45, 47, 434], "resid": [42, 46], "interv": [42, 47, 81, 82, 90, 91, 333, 355, 362, 363, 374, 402, 404, 406, 431, 432, 433], "edg": [42, 47, 362, 363, 365, 377, 434], "wise": [42, 47, 70, 71, 72, 73, 74, 75, 76, 77, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 193, 194, 195, 199, 200, 201, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 230, 234, 253, 362, 363, 422, 423], "larger": [42, 47, 100, 114, 362, 363, 371, 422, 428, 430], "param": [42, 47, 234, 255, 256], "minimum": [42, 47, 127, 174, 175, 234, 258, 259, 281, 282, 287, 288, 362, 363, 409, 411, 422, 424, 426, 434], "ml_framework": [42, 47, 81, 82], "current_framework": [42, 47], "furthermor": 42, "implicit": 42, "concaten": [42, 45, 127, 153, 234, 254, 362, 364, 434], "framework_handl": 42, "face": 42, "verbos": [42, 434, 478], "cprint": [42, 477], "framework_stack": 42, "stack": [42, 81, 96, 97, 312, 318, 333, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 351, 352, 354, 362, 382, 383, 392, 393, 434, 452, 461], "_determine_framework_from_arg": 42, "valueerror": [42, 362, 373], "get_framework": 42, "neither": [42, 174, 178, 218], "callabl": [42, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 127, 168, 234, 240, 248, 250, 378, 379, 380, 381, 382, 388, 392, 393, 394], "slightli": [42, 46, 422, 423], "illustr": [42, 58], "un": [42, 100, 116], "v": [42, 45, 46, 47, 320, 332, 434, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 472, 474, 475], "lstm_updat": [42, 320], "nn": [42, 47, 81, 92, 434], "init_h": [42, 320, 330], "init_c": [42, 320, 330], "kernel": [42, 59, 320, 330], "recurrent_kernel": [42, 320, 330], "bia": [42, 46, 320, 329, 330, 452, 453, 454, 455, 456, 457, 458, 459, 462], "recurrent_bia": [42, 320, 330], "x_shape": 42, "batch_shap": [42, 44, 47, 234, 276, 312, 313, 314, 315, 317, 318, 319, 320, 330, 331, 332, 333, 357, 402, 403, 452, 461], "timestep": [42, 320, 330, 452, 461], "input_channel": [42, 46, 452, 453, 454, 455, 456, 457, 458, 461, 462], "x_flat": 42, "wi": 42, "wi_x": 42, "wii_x": 42, "wif_x": 42, "wig_x": 42, "wio_x": 42, "recurr": [42, 320, 330], "wh": 42, "lstm": [42, 320, 330, 452], "ht": 42, "ct": 42, "hts_list": 42, "unrol": [42, 45, 320, 330], "wii_xt": 42, "wif_xt": 42, "wig_xt": 42, "wio_xt": 42, "zip": 42, "unstack": [42, 45, 234, 434], "htm1": 42, "ctm1": 42, "wh_htm1": 42, "whi_htm1": 42, "whf_htm1": 42, "whg_htm1": 42, "who_htm1": 42, "num_or_size_split": [42, 362, 372], "sigmoid": [42, 45, 46, 70, 434], "ft": 42, "gt": 42, "tanh": [42, 70, 174, 434], "ot": 42, "expand_dim": [42, 45, 362, 434], "offici": 42, "reliabl": 42, "minim": 42, "sacrific": 42, "hear": 42, "virtu": 42, "pure_ivi": 42, "reduce_mean": [42, 45, 46, 47, 434], "reduce_sum": [42, 434], "reduce_var": 42, "compile_graph": [42, 47], "pure_torch": 42, "cat": [42, 47], "backbon": [42, 45], "_layer": 42, "linear": [42, 45, 46, 47, 70, 71, 72, 73, 234, 254, 312, 316, 320, 328, 350, 434, 452, 453, 454, 455, 456, 457, 458, 459], "super": [42, 45, 46, 47], "_forward": [42, 45, 46, 434], "clean": [42, 43, 45], "w": [42, 45, 46, 234, 238, 297, 298, 299, 301, 303, 304, 305, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327], "random_unifrom": 42, "unclean": 42, "wx": 42, "temp": 42, "trace": [42, 59, 234, 269, 270, 272, 333], "torchscript": 42, "lambda": [42, 45, 468, 471, 473], "fn": [42, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 127, 134, 135, 234, 294, 382, 383, 388, 389, 390, 392, 393, 394, 437, 439], "example_input": [42, 78, 79], "static_argnum": [42, 78, 79], "static_argnam": [42, 78, 79], "jit": [42, 59], "maxim": 42, "low": [42, 402, 404, 406], "explor": [43, 47, 58], "frontend": 43, "treat": [43, 47, 78, 79], "abil": [43, 59], "primit": [43, 59], "experi": [43, 45, 59], "describ": [43, 47, 422, 423, 427, 428, 429], "hierarch": [43, 45, 46], "trainabl": [43, 45, 46, 297, 302, 444, 445, 464, 465, 474], "built": [43, 81, 82, 127, 452, 463, 464, 465], "straight": 44, "arraywithdevic": 44, "arraywithgener": 44, "arraywithgradi": 44, "arraywithimag": 44, "arraywithlinalg": 44, "arraywithlog": 44, "arraywithmath": 44, "arraywithmeta": 44, "arraywithrandom": 44, "arraywithreduct": 44, "assert": [44, 45, 234, 239], "is_native_arrai": [44, 234], "_shape": 44, "_size": 44, "functool": 44, "reduc": [44, 127, 168, 234, 250, 333, 348, 409, 410, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "mul": 44, "len": [44, 47, 81, 92], "_dtype": 44, "_devic": 44, "_dev_str": 44, "as_ivy_dev": [44, 127], "_pre_repr": 44, "_post_repr": 44, "ndim": [44, 333, 348, 351], "size": [44, 45, 81, 90, 91, 127, 166, 167, 168, 234, 279, 312, 317, 333, 337, 342, 346, 348, 351, 355, 362, 366, 371, 372, 373, 402, 403, 405, 406, 409, 410, 412, 431, 432, 433, 452, 453, 454], "matrix_transpos": [44, 333, 353], "mt": 44, "answer": [44, 59], "perhap": [44, 45, 46, 59], "consol": 44, "typeerror": 44, "immut": 44, "pure": [44, 47, 59], "behav": 44, "claim": 44, "truli": 44, "_native_wrapp": 44, "attributeerror": 44, "scatter_nd": [44, 234, 434], "genuin": 44, "some_method": 44, "similarli": [44, 81, 92], "rewritten": 44, "__pow__": 44, "strang": 44, "power": [44, 45, 46, 174, 188, 196, 222, 234, 258, 281, 288, 333, 343, 446], "enforc": 44, "notic": 44, "inv": [44, 333, 434], "invers": [44, 58, 174, 176, 177, 179, 180, 181, 182, 183, 333, 340, 347], "_wrap_method": 44, "func_wrapp": [44, 60, 61, 62, 63, 64, 65, 66, 67, 68], "hasattr": 44, "__name__": 44, "non_wrapped_method": 44, "_method_wrap": 44, "native_arg": 44, "native_kwarg": 44, "to_ivi": 44, "inner_fn": 44, "whist": 44, "down": 44, "unwrap": 44, "inner": [44, 333, 338, 341, 378, 379, 380, 381, 422, 423], "transit": 44, "needlessli": 44, "randn": 44, "_unwrap_method": 44, "method_wrap": 44, "whenev": [44, 45], "parent": 44, "compartment": 44, "public": [44, 234, 243], "abc": [44, 127, 134, 139, 464, 465, 468, 472], "newshap": [44, 362, 370], "new_shap": 44, "transpos": [44, 47, 127, 155, 320, 322, 324, 326, 333, 345, 347, 422, 423, 434, 452, 454, 456, 458], "flip": [44, 45, 47, 174, 185, 362, 434], "tidi": 44, "20": [44, 174, 196, 333, 353, 402, 404, 422, 423], "shorter": 44, "crystal": 44, "41": [44, 333, 334, 422, 429], "enough": [44, 45, 46], "ton": 45, "ado": [45, 46], "dictionari": [45, 59], "incredibli": [45, 59], "hash": 45, "soup": 45, "walk": [45, 46], "dct": 45, "cnt": 45, "combo": [45, 434, 440], "intuit": [45, 46], "hold": [45, 234, 279, 280], "1000": 45, "uda": 45, "3333": 45, "6667": 45, "178": 45, "grad": [45, 46, 47, 434, 468, 472], "lr": [45, 46, 297, 299, 301, 303, 304, 305, 468, 469, 470, 471, 472, 473], "new_weight": 45, "0600": 45, "3100": 45, "2400": 45, "6900": 45, "delimit": 45, "autocomplet": 45, "tab": [45, 434], "midwai": 45, "agent": 45, "total_spe": 45, "total_height": 45, "total_width": 45, "ag": 45, "tot": 45, "total_": 45, "total_h": 45, "disk": [45, 312, 314], "hdf5": [45, 464, 465], "to_disk_as_hdf5": 45, "from_disk_as_hdf5": 45, "same_arrai": 45, "to_disk_as_pickl": 45, "from_disk_as_pickl": 45, "config": [45, 382, 395], "batch_siz": [45, 312, 315, 319, 320, 321, 322, 323, 324, 325, 326, 327, 402, 403], "16": [45, 174, 231, 333, 353, 402, 404, 422, 423], "dir": 45, "dataset": [45, 57, 434], "dropout": [45, 320, 452, 463], "adam": [45, 46, 47, 297, 298, 299, 303, 434, 468, 470], "json": 45, "to_disk_as_json": 45, "from_disk_as_json": 45, "debug": 45, "cnt0": 45, "cnt1": 45, "deep_copi": 45, "diff_0": 45, "diff_1": 45, "config0": 45, "config1": 45, "Not": [45, 46, 80], "hierarchi": 45, "screen": 45, "decod": 45, "l0": 45, "l1": [45, 333, 356], "depth": [45, 46, 47, 58, 127, 148, 152, 156, 234, 261, 276, 382, 394, 464, 465], "clearer": 45, "truncat": 45, "__": 45, "flatten_key_chain": [45, 464, 465], "above_height": 45, "decoder__l0": 45, "decoder__l1": 45, "encoder__l0": 45, "encoder__l1": 45, "height": [45, 312, 318], "below_depth": 45, "l0__b": 45, "l0__w": 45, "l1__b": 45, "l1__w": 45, "with_print_limit": 45, "printabl": 45, "with_key_length_limit": 45, "length": [45, 81, 82, 92, 333, 351, 352, 362, 370, 422, 423], "with_print_ind": 45, "indent": 45, "obviou": 45, "foresight": 45, "untidili": 45, "update_ag": 45, "normalize_img": 45, "img": 45, "img_max": 45, "reduce_max": [45, 434], "img_min": 45, "reduce_min": [45, 434], "img_rang": 45, "agent_posit": 45, "agent_veloc": 45, "agent_cam_front_rgb": 45, "agent_cam_front_depth": 45, "agent_cam_rear_rgb": 45, "agent_cam_rear_depth": 45, "agent_cam_lidar": 45, "normal": [45, 362, 374, 400, 401, 402, 405, 466, 467], "cleaner": 45, "camera": 45, "front_rgb": 45, "front_depth": 45, "rear_rgb": 45, "rear_depth": 45, "lidar": 45, "rgb": 45, "rear": 45, "veloc": 45, "cam": 45, "cam_max": 45, "cam_min": 45, "cam_rang": 45, "Of": 45, "ideal": 45, "perman": 45, "afterward": 45, "thread": 45, "incorpor": 45, "multiprocess": [45, 59, 127, 134, 234], "queue": [45, 127, 134, 135, 234, 278, 283], "pretti": 45, "straightforward": 45, "dataload": [45, 57, 434], "_cnt": 45, "img_": 45, "_dataset_s": 45, "_batch_siz": 45, "_count": [45, 46], "__next__": 45, "filenam": 45, "img_fnam": 45, "list_stack": 45, "fname": 45, "loaded_img": 45, "cv2": 45, "imread": 45, "from_numpi": 45, "loader": [45, 59], "32": [45, 312, 319, 320, 323, 422, 423], "batch_slic": 45, "model": [45, 46, 434], "mymodel": [45, 434], "linear0": [45, 46, 434], "64": [45, 46, 320, 327, 422, 423, 434, 452, 463], "linear1": [45, 46, 434], "relu": [45, 46, 70, 71, 72, 434], "x_in": [45, 46, 47, 434], "001": [45, 46], "loss_fn": [45, 46, 47, 434], "execute_with_gradi": [45, 46, 47, 59, 297, 434], "to_numpi": [45, 234, 434], "0145": 45, "grad_fn": 45, "addbackward0": 45, "_create_vari": 46, "output_channel": [46, 452, 453, 454, 455, 456, 457, 458, 461, 462], "with_bia": [46, 452, 462], "_input_channel": 46, "_output_channel": 46, "_w_shape": 46, "_b_shape": 46, "_with_bia": 46, "8979": 46, "3198": 46, "0196": 46, "3126": 46, "3717": 46, "9687": 46, "6958": 46, "5122": 46, "3902": 46, "8800": 46, "5613": 46, "1982": 46, "nightmar": 46, "overcom": 46, "fc": 46, "9563": 46, "direct": [46, 47, 58, 419, 421], "impact": 46, "v0": 46, "v1": 46, "6440": 46, "key0": 46, "key1": 46, "1823": 46, "8075": 46, "linear3": 46, "v2": 46, "2346": 46, "counter": 46, "hidden": [46, 320, 330, 452, 461], "fed": [46, 127, 168], "sequenti": 46, "1300": 46, "decoupl": 46, "scheme": 46, "weight_initi": [46, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462], "glorotuniform": [46, 446, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462], "bias_initi": [46, 452, 453, 454, 455, 456, 457, 458, 459, 462], "_w_init": 46, "_b_init": 46, "create_vari": [46, 446], "var_shap": [46, 446], "fan_out": [46, 446], "fan_in": [46, 446], "uniform": [46, 402, 403, 404, 406, 446, 447, 448, 450], "fan_mod": [46, 446], "fan_sum": 46, "slight": 46, "misnom": 46, "belong": 46, "saw": 46, "vanilla": [46, 378, 380], "descent": [46, 297, 301, 468, 473], "lar": [46, 297, 303, 304, 468], "lamb": [46, 297, 303, 468], "beta1": [46, 297, 298, 299, 303, 468, 469, 470], "beta2": [46, 297, 298, 299, 303, 468, 469, 470], "999": [46, 297, 298, 299, 303, 468, 469, 470], "07": [46, 297, 298, 299, 303, 358, 359, 360, 361, 468, 469, 470], "stop_gradi": [46, 127, 168, 297, 299, 301, 303, 304, 305, 378, 379, 380, 381, 434, 468, 469, 470, 471, 472, 473], "compile_on_next_step": [46, 464, 465, 468, 469, 470, 471, 472, 473], "_beta1": 46, "_beta2": 46, "_epsilon": 46, "_mw": 46, "_vw": 46, "_first_pass": 46, "_should_compil": 46, "_step": [46, 468, 472], "new_v": 46, "adam_upd": [46, 297], "_lr": 46, "isinst": [46, 47, 234, 291], "_inplac": 46, "_stop_gradi": 46, "set_stat": [46, 468, 469, 470, 471, 472, 473], "mw": [46, 297, 298, 299], "vw": [46, 297, 298, 299], "revers": [47, 59, 234, 248, 362, 367], "pre": [47, 59, 127], "captur": 47, "one_hot": [47, 234, 434], "sparse_funct": 47, "num_class": [47, 402, 403], "ey": [47, 81, 320, 323, 327], "cumprod": [47, 234], "ones_lik": [47, 81, 434], "num_dim": 47, "new_axi": 47, "constitu": 47, "_linear": 47, "forward": [47, 58, 59, 464, 465, 468, 472], "to_backend": 47, "jax_graph": 47, "learnabl": [47, 400, 401, 466, 467], "to_ivy_modul": [47, 444], "thinli": 47, "whilst": 47, "preserv": [47, 59, 297, 307, 362, 367], "to_haiku_modul": 47, "hk": 47, "loss_fn_t": 47, "transform": [47, 58, 320, 328, 329], "without_apply_rng": 47, "rng": 47, "prngkei": 47, "42": [47, 402, 407, 422, 423], "init": 47, "update_rul": 47, "01": 47, "tree_multimap": 47, "mechan": [57, 59, 434], "vision": [57, 434], "robot": [57, 434], "focus": 58, "field": [58, 333, 338, 348, 351, 414, 415, 416], "perfect": 58, "showcas": 58, "3d": [58, 452, 457, 458], "differenti": 58, "demo": [58, 434], "orient": 58, "pose": 58, "represent": [58, 80, 100, 101, 102, 108, 114, 115, 127, 140, 141, 174, 175, 178, 184, 187, 189, 215, 218, 234, 286, 291], "largest": [58, 100, 114, 115, 333, 351], "euler": [58, 80], "quaternion": 58, "rotat": 58, "matric": [58, 81, 92, 96, 97, 320, 329, 333, 334, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 350, 351, 352, 354], "vector": [58, 81, 92, 234, 242, 320, 329, 333, 335, 338, 341, 346, 351, 352, 355, 356, 357, 452, 462], "angl": [58, 174, 182, 192, 227], "ivy_mech": 58, "target_facing_rotation_matrix": 58, "polar_to_cartesian_coord": 58, "ordin": [58, 333, 350], "warp": [58, 312, 313], "optic": 58, "flow": 58, "voxel": 58, "cloud": 58, "ivy_vis": 58, "coords_to_voxel_grid": 58, "render_pixel_coord": 58, "neural": [58, 320, 434, 441, 452], "radianc": 58, "nerf": 58, "trajectori": 58, "motion": 58, "plan": [58, 434], "mobil": 58, "ivy_robot": 58, "sample_spline_path": 58, "rigidmobil": 58, "sample_bodi": 58, "drone": 58, "sample_link": 58, "openai": 58, "swimmer": 58, "cumul": [58, 234, 245, 246], "reward": 58, "supervis": 58, "reinforc": 58, "door": [58, 59], "intersect": 58, "cartpol": 58, "mountain_car": 58, "pendulum": 58, "reacher": 58, "polici": 58, "condit": [58, 78, 79, 382, 392, 393, 409, 413], "learnt": 58, "ture": 58, "ntm": 58, "egospher": 58, "spatial": 58, "esm": 58, "ivy_memori": 58, "egocentr": 58, "room": 58, "inspir": 58, "doubt": 59, "grate": 59, "put": 59, "probe": 59, "q": [59, 320, 332, 333, 338, 348], "xla": 59, "buffer": 59, "certain": [59, 81, 82, 90, 91], "kind": [59, 100, 114, 115, 174, 222, 422, 427, 429], "gold": 59, "dex": 59, "phase": 59, "lax": 59, "scan": 59, "tricki": 59, "predictor": 59, "tight": 59, "driver": 59, "schedul": 59, "algorithm": [59, 320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "eager": 59, "dispatch": 59, "Will": 59, "ast": 59, "dynamic": 59, "cond": 59, "jacobian": 59, "checkpoint": 59, "autodiff": 59, "shine": 59, "merci": 59, "superset": 59, "autograd": 59, "cluster": 59, "compet": 59, "paradigm": 59, "parallelis": [59, 127, 134, 135], "spmd": 59, "mixtur": 59, "expert": 59, "sophist": 59, "depart": 59, "routin": 59, "hundr": 59, "thousand": 59, "deepli": [59, 382, 384], "moment": [59, 297, 298, 299, 303, 468, 469, 470], "broadli": 59, "heavili": 59, "supplementari": 59, "drop": 59, "reusabl": 59, "fanci": 59, "fusion": 59, "lose": 59, "vmap": 59, "pmap": 59, "overhead": 59, "possibli": [59, 234, 291], "ineffici": 59, "eventu": 59, "supplement": 59, "backdoor": 59, "callback": 59, "load": 59, "record": 59, "metric": 59, "visual": 59, "somewhat": 59, "outsourc": 59, "third": [59, 333, 351, 414, 415], "handle_nest": 60, "handle_out_argu": 60, "infer_devic": 60, "infer_dtyp": 60, "inputs_to_ivy_arrai": 60, "inputs_to_native_arrai": 60, "outputs_to_ivy_arrai": 60, "to_native_arrays_and_back": 60, "gelu": [70, 441], "gaussian": [70, 71], "leaki": [70, 71, 72], "leaky_relu": [70, 434], "alpha": [70, 72], "rectifi": [70, 72, 73], "slope": [70, 72], "39": [70, 72, 422, 423], "85": [70, 72], "17": [70, 72], "269": [70, 74], "731": [70, 74], "881": [70, 74], "softmax": [70, 320, 331, 332, 434], "09003057": [70, 75], "24472848": [70, 75], "66524094": [70, 75], "softplu": [70, 434], "3461": [70, 76], "6491": [70, 76], "5349962": [70, 76], "4203641": [70, 76], "hyperbol": [70, 77, 174, 177, 180, 183, 192, 227, 232], "55": [70, 77, 422, 423], "50": [70, 77, 422, 423], "func": [78, 79, 127, 168, 234, 240, 297, 300, 382, 395], "faster": [78, 79, 422, 423], "invoc": [78, 79], "718281828459045": 80, "inf": [80, 234, 262, 296, 333, 356], "newaxi": 80, "alia": 80, "pi": 80, "141592653589793": 80, "mathemat": [80, 174, 178, 182, 197, 218, 333, 356], "evenli": [81, 82, 90, 91, 362, 372], "half": [81, 82, 402, 404, 406], "word": [81, 82, 402, 406, 444, 445], "chosen": [81, 82, 174, 182, 409, 413], "distanc": [81, 82], "adjac": [81, 82], "dimension": [81, 82, 86, 92, 333, 335, 336, 341, 344, 346, 347, 355, 356, 362, 372, 409, 410, 411, 412, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "ceil": [81, 82, 174, 434], "datatyp": [81, 83, 93, 100, 107, 117, 118], "interpret": [81, 83, 93], "fill": [81, 84, 88, 89, 94, 95, 98, 99, 402, 404], "uniniti": [81, 84, 85], "empty_lik": 81, "n_row": [81, 86], "n_col": [81, 86], "diagon": [81, 86, 96, 97, 333, 354, 422, 423], "elsewher": [81, 86, 409, 413], "row": [81, 86, 333, 350, 351, 402, 403, 409, 412], "column": [81, 86, 333, 338, 348, 350, 351, 422, 423], "upper": [81, 86, 97, 333, 334, 348, 402, 406], "from_dlpack": 81, "__dlpack__": [81, 87], "view": [81, 87, 320, 323, 327], "interchang": [81, 87, 362, 375], "full_lik": 81, "endpoint": [81, 90], "entri": [81, 90, 91, 362, 372, 382, 395], "meshgrid": 81, "xy": [81, 92], "coordin": [81, 92, 174, 182], "cartesian": [81, 92], "matrix": [81, 92, 96, 97, 234, 235, 241, 320, 329, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 354, 357, 452, 462], "ij": [81, 92, 422, 423], "rank": [81, 92, 234, 295, 333, 335, 344, 348, 350, 354, 355, 356, 362, 365, 366, 374, 377, 409, 412, 431, 432, 433], "ni": [81, 92], "xi": [81, 92], "n1": [81, 92], "n2": [81, 92], "n3": [81, 92], "accordingli": [81, 92, 174, 197, 333, 356, 409, 411, 414, 415, 416, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "xv": [81, 92], "yv": [81, 92], "tril": 81, "triangular": [81, 96, 97, 333, 334, 348], "innermost": [81, 96, 97, 333, 334, 336, 337, 338, 339, 340, 344, 345, 347, 348, 350, 351, 352, 354], "mxn": [81, 96, 97, 333, 337, 344, 345, 347, 348, 352, 354], "triu": 81, "zeros_lik": [81, 362, 363, 434], "defaultdtyp": 100, "defaultfloatdtyp": 100, "float_dtyp": [100, 110, 121], "defaultintdtyp": 100, "as_ivy_dtyp": 100, "dtype_in": [100, 101, 102, 108, 113, 116, 117, 118, 126], "as_native_dtyp": 100, "match": [100, 103, 174, 223, 234, 273], "broadcast_arrai": 100, "incompat": [100, 105], "from_": [100, 106], "occur": [100, 106, 409, 410, 411, 414, 415, 416, 418], "closest_valid_dtyp": 100, "closest": [100, 107, 174, 190, 198, 199, 233], "convert_dtyp": 100, "summari": [100, 109, 110, 111, 120, 121, 122, 127, 137, 138, 143, 234, 243, 247, 261, 297, 306, 311], "floatdtyp": [100, 110], "int_dtyp": [100, 111, 122], "intdtyp": [100, 111], "dtype_bit": 100, "finfo": 100, "inform": [100, 114, 115, 297, 307], "followng": [100, 114], "occupi": [100, 114, 115, 234, 279, 280], "ep": [100, 114, 333, 344, 347], "smallest": [100, 114, 115, 174, 190], "max": [100, 114, 115, 174, 216, 234, 241, 242, 250, 279, 280, 333, 344, 347, 422, 468, 470], "min": [100, 114, 115, 174, 217, 234, 250, 279, 280, 287, 333, 348, 351, 352, 356, 422], "smallest_norm": [100, 114], "precis": [100, 114, 174, 218, 228], "iinfo": 100, "encapsul": [100, 115], "invalid_dtyp": 100, "is_float_dtyp": 100, "is_int_dtyp": [100, 234, 293], "arrays_and_dtyp": [100, 119], "unset_default_dtyp": 100, "unset_default_float_dtyp": 100, "unset_default_int_dtyp": 100, "valid_dtyp": 100, "defaultdevic": 127, "devcloneditem": 127, "multidevitem": [127, 128, 131], "devclonedit": 127, "multidevit": [127, 129, 132, 134, 135, 138], "devclonednest": 127, "max_depth": [127, 130, 133, 138, 148, 152, 156, 234, 261, 382, 394], "multidevnest": [127, 130, 133], "devdistitem": 127, "devdistit": 127, "devdistnest": 127, "devmanag": 127, "dev_mapp": 127, "da_dim_s": 127, "safety_factor": 127, "min_dev_dim_s": 127, "max_dev_dim_step_ratio": 127, "min_unit_dev_tune_step": 127, "min_sf_tune_step": 127, "starting_split_factor": 127, "max_split_factor_step_s": 127, "05": 127, "tune_dev_alloc": 127, "tune_dev_split": 127, "mapper": [127, 134, 135], "receivess": 127, "ratio": [127, 297, 303, 312, 318, 468, 470], "safe": [127, 134], "oom": 127, "tune": 127, "da_tune_step": 127, "dim_siz": 127, "ds_tune_step": 127, "to_clon": 127, "to_distribut": 127, "multidevic": [127, 134], "parallel": [127, 134, 135], "mutlidevic": [127, 134], "repeated_config_check": 127, "tune_step": 127, "devmapp": [127, 135], "ret_fn": [127, 134, 135], "queue_class": [127, 134, 135], "worker_class": [127, 134, 135], "timeout": [127, 134, 135, 234, 278, 283], "worker": [127, 134, 135], "used_dev": [127, 134], "split_factor": [127, 134], "sf": [127, 134], "devmappermultiproc": 127, "multidev": [127, 136, 137, 156], "at_dev": [127, 137, 138], "profil": 127, "save_dir": [127, 139], "as_native_dev": 127, "clear_mem_on_dev": 127, "dev_clon": 127, "deviceic": [127, 145], "dev_clone_arrai": 127, "dev_clone_it": 127, "dev_clone_nest": 127, "dev_dist": 127, "dev_dist_arrai": 127, "dev_dist_it": 127, "iterbal": [127, 151], "dev_dist_nest": 127, "dev_unifi": 127, "concat": [127, 153, 154, 155, 156, 168, 234, 254, 362, 434], "concatten": [127, 153, 154, 155, 156, 168], "dev_unify_arrai": 127, "dev_unify_it": 127, "dev_unify_nest": 127, "spread": [127, 156], "gpu_is_avail": 127, "num_ivy_arrays_on_dev": 127, "percent_used_mem_on_dev": 127, "process_specif": [127, 163, 173], "percentag": [127, 163], "ram": [127, 163, 170, 173], "alon": [127, 163, 173], "print_all_ivy_arrays_on_dev": 127, "set_split_factor": 127, "scale": [127, 166, 167, 297, 304, 320, 328, 331, 332, 400, 401, 452, 460, 463, 468, 471], "chunk": [127, 166, 167, 168], "split_func_cal": 127, "max_chunk_s": [127, 168], "chunk_siz": [127, 168], "input_ax": [127, 168], "output_ax": [127, 168], "feed": [127, 168], "fist": [127, 168], "to_dev": 127, "gb": [127, 170, 173], "tpu_is_avail": 127, "unset_default_devic": 127, "used_mem_on_dev": 127, "magnitud": [174, 175, 178, 218, 333, 351, 352], "aco": [174, 434], "princip": [174, 176, 179, 181], "cosin": [174, 176, 177, 191, 192], "greater": [174, 176, 179, 182, 186, 188, 198, 199, 222, 223, 225, 233, 333, 335, 362, 373, 402, 406], "acosh": [174, 434], "x1_i": [174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 223, 230], "x2_i": [174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 223, 230], "finit": [174, 178, 182, 202, 218, 222, 223], "nonzero": [174, 178, 218, 409], "nor": [174, 178, 218], "nearest": [174, 178, 218, 224], "2019": [174, 178, 197, 218], "commut": [174, 178], "asin": [174, 434], "sine": [174, 179, 180, 226, 227], "asinh": [174, 434], "atan": [174, 434], "atan2": [174, 434], "quotient": [174, 182], "notat": [174, 182, 422, 423], "denot": [174, 182], "pair": [174, 182, 320, 332, 333, 335], "quadrant": [174, 182], "3\u03c0": [174, 182], "atanh": [174, 434], "549": [174, 183], "bitwise_and": 174, "bitwis": [174, 184, 187, 189, 215], "AND": [174, 184, 212, 431, 432], "binari": [174, 184, 187, 189, 215, 358, 359], "bitwise_invert": 174, "invert": [174, 185], "bitwise_left_shift": 174, "bitwise_or": 174, "bitwise_right_shift": 174, "arithmet": [174, 188, 422, 425], "propag": [174, 188, 422, 424, 425, 426, 428, 429, 430], "thu": [174, 188, 222, 223, 333, 338], "floor": [174, 188, 234, 253, 434], "lh": [174, 188], "rh": [174, 188], "bitwise_xor": 174, "xor": [174, 189, 215], "416": [174, 191], "cosh": [174, 434], "dividend": [174, 193, 223], "divisor": [174, 193, 223, 297, 298, 299, 303, 422, 428, 430, 468, 469, 470], "erf": 174, "gauss": [174, 195], "exponenti": [174, 195, 196, 211, 222], "exp": [174, 197, 211, 434], "logarithm": [174, 196, 207, 208, 209, 210, 211, 333, 349], "7182817": [174, 196], "389056": [174, 196], "085537": [174, 196], "expm1": 174, "accur": [174, 197], "fdlibm": [174, 197], "compliant": [174, 197, 213, 214, 422, 424, 425, 426], "greatest": [174, 198, 199], "floor_divid": 174, "greater_equ": 174, "isfinit": 174, "out_i": [174, 202, 203, 204], "isinf": 174, "isnan": 174, "less_equ": 174, "log10": 174, "log1p": 174, "log2": 174, "logaddexp": 174, "logical_and": [174, 434], "logical_not": [174, 434], "NOT": [174, 213], "recommend": [174, 213, 214, 223, 422, 425], "logical_or": [174, 434], "logical_xor": 174, "threshold": [174, 216, 217], "exce": [174, 217], "product": [174, 218, 234, 245, 320, 331, 332, 333, 335, 341, 346, 353, 355, 422, 423, 427, 452, 463], "y_i": [174, 219], "not_equ": 174, "pow": 174, "expon": [174, 222, 234, 288], "versu": [174, 222], "odd": [174, 222], "remaind": [174, 234, 253, 362, 372], "modulu": [174, 223], "primarili": [174, 223], "backward": [174, 223, 333, 355, 431, 432, 433], "sinh": [174, 434], "sqrt": [174, 333, 356], "squar": [174, 228, 320, 323, 333, 334, 336, 338, 339, 340, 343, 349, 350, 351], "indistinguish": [174, 228], "infinit": [174, 228], "56": [174, 231, 422, 423], "19": [174, 231, 362, 369], "546": [174, 231], "842": [174, 231], "916": [174, 231], "96": [174, 231, 422, 423], "37": [174, 231, 312, 319], "996": [174, 231], "328": [174, 231], "143": [174, 231], "38": [174, 231], "trunc": 174, "decim": [174, 233], "all_equ": 234, "equality_matrix": [234, 235], "arg_nam": 234, "array_equ": 234, "arrays_equ": 234, "r": [234, 238, 295, 333, 348, 357], "assert_supports_inplac": 234, "later": [234, 240], "clip_matrix_norm": 234, "max_norm": [234, 241, 242], "downscal": [234, 241, 242], "clip_vector_norm": 234, "container_typ": 234, "copy_arrai": 234, "cumsum": [234, 434], "current_backend_str": 234, "default_v": [234, 248], "catch_except": [234, 248], "rev": [234, 248], "with_cal": [234, 248], "einops_rearrang": 234, "axes_length": [234, 249, 250, 251], "rearrang": [234, 249, 251], "arrang": [234, 249], "einops_reduc": 234, "einops_repeat": 234, "floormod": [234, 434], "mod": [234, 253], "fourier_encod": 234, "max_freq": [234, 254], "num_band": [234, 254], "flatten": [234, 254, 333, 346, 356, 362, 369, 371, 409, 410, 411, 414, 415, 416, 418], "pad": [234, 254, 320, 321, 322, 323, 324, 325, 326, 327, 362, 365, 377, 452, 453, 454, 455, 456, 457, 458, 459], "fourier": [234, 254], "band": [234, 254], "linearli": [234, 254, 333, 350], "oppos": [234, 254], "geometr": [234, 254], "expand": [234, 254, 362, 366], "gather": [234, 256], "slice": [234, 255, 256, 382, 391], "gather_nd": [234, 434], "get_all_arrays_in_memori": 234, "get_min_bas": 234, "get_min_denomin": 234, "get_num_dim": [234, 434], "as_arrai": [234, 260, 285], "get_referrers_recurs": 234, "seen_set": [234, 261], "local_set": [234, 261], "has_nan": 234, "include_inf": [234, 262, 296], "indices_wher": [234, 434], "inplace_arrays_support": 234, "inplace_decr": 234, "decrement": [234, 265], "inplace_incr": 234, "inplace_variables_support": 234, "is_arrai": 234, "is_ivy_contain": 234, "match_kwarg": 234, "allow_dupl": [234, 273], "forkserv": [234, 274], "spawn": [234, 274], "num_arrays_in_memori": 234, "hot": [234, 276], "scatter": [234, 276, 279, 280], "overrid": [234, 276], "print_all_arrays_in_memori": 234, "queue_timeout": 234, "scatter_flat": 234, "flat": [234, 279, 362, 369], "set_min_bas": 234, "set_min_denomin": 234, "set_queue_timeout": 234, "set_tmp_dir": 234, "tmp_dr": [234, 284], "temporari": [234, 284], "y_tupl": [234, 285], "y_tensor": [234, 285], "as_tensor": [234, 285], "min_denomin": [234, 287], "stabil": [234, 287, 288, 419, 420, 421], "_min_denomin": [234, 287], "stable_pow": 234, "min_bas": [234, 288], "_min_bas": [234, 288, 400, 401, 466, 467], "supports_inplac": 234, "tmp_dir": 234, "to_list": [234, 434], "to_scalar": 234, "try_else_non": 234, "unpack": [234, 295], "value_is_nan": 234, "gradienttrack": 297, "with_grad": [297, 306], "adam_step": 297, "dcdw": [297, 298, 299, 301, 303, 304], "delta": [297, 298], "cost": [297, 298, 299, 301, 303, 304, 305, 378, 379, 380, 381], "en": [297, 298, 299], "wikipedia": [297, 298, 299], "wiki": [297, 298, 299], "stochastic_gradient_desc": [297, 298, 299], "dc": [297, 298, 299, 301, 303, 304, 305], "dw": [297, 298, 299, 301, 303, 304, 305], "averag": [297, 298, 299, 303, 378, 379, 380], "forget": [297, 298, 299, 303, 468, 469, 470], "mw_tm1": [297, 299, 303], "vw_tm1": [297, 299, 303], "rate": [297, 299, 301, 303, 304, 305, 378, 379, 380, 381, 452, 463, 468, 469, 470, 471, 472, 473], "ws_new": [297, 299, 301, 303, 304, 305], "retain_grad": [297, 300], "dy": [297, 300, 312, 315], "dx": [297, 300, 312, 315], "retain": [297, 300], "gradient_descent_upd": [297, 378, 379, 380, 381, 434], "lamb_upd": 297, "max_trust_ratio": [297, 303, 468, 470], "decay_lambda": [297, 303, 304, 468, 470, 471], "trust": [297, 303, 468, 470], "decai": [297, 303, 304, 468, 470, 471], "lars_upd": 297, "layerwis": [297, 304, 468, 471], "optimizer_upd": 297, "effective_grad": [297, 305], "set_with_grad": 297, "preserve_typ": [297, 307], "unset_with_grad": 297, "variable_data": 297, "bilinear_resampl": [312, 434], "bilinearli": [312, 313], "num_sampl": [312, 313, 316, 402, 403], "bilinear": [312, 313], "float_img_to_uint8_img": 312, "gradient_imag": [312, 434], "linear_resampl": 312, "interpol": [312, 316], "resampl": [312, 316], "random_crop": 312, "crop_siz": [312, 317], "image_dim": [312, 317], "seed": [312, 317, 402, 434], "randomli": [312, 317, 320, 328, 452, 460], "crop": [312, 317], "2d": [312, 317, 333, 349, 452, 455, 456, 459], "nh": [312, 317], "nw": [312, 317], "stack_imag": [312, 434], "desired_aspect_ratio": [312, 318], "width": [312, 318], "uint8_img_to_float_img": 312, "820471434542632e": [312, 319], "0082513512365273e": [312, 319], "34": [312, 319], "658462758989161e": [312, 319], "003653270560797e": [312, 319], "30": [312, 319, 422, 423, 446, 450], "conv1d": [320, 452], "stride": [320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "data_format": [320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "nwc": [320, 321, 322, 452, 453, 454], "dilat": [320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "convolut": [320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "d_in": [320, 321, 322, 323, 324, 325, 326], "fw": [320, 321, 322, 323, 324, 325, 326, 327], "d_out": [320, 321, 322, 323, 324, 325, 326], "slide": [320, 321, 322, 323, 324, 325, 326, 327, 452, 453, 454, 455, 456, 457, 458, 459], "ncw": [320, 321, 322, 452, 453, 454], "wio": [320, 321], "conv1d_transpos": 320, "output_shap": [320, 322, 324, 326, 452, 454, 456, 458], "conv2d": [320, 434, 452], "nhwc": [320, 323, 324, 327, 452, 455, 456, 459], "fh": [320, 323, 324, 325, 326, 327], "nchw": [320, 323, 324, 327, 452, 455, 456, 459], "hwio": [320, 323], "random_norm": [320, 323, 327, 333, 351, 402], "unequ": [320, 323], "28": [320, 323, 327, 422, 423], "unsqueez": [320, 323, 327], "conv2d_transpos": 320, "conv3d": [320, 452], "ndhwc": [320, 325, 326, 452, 457, 458], "volum": [320, 325], "fd": [320, 325, 326], "ncdhw": [320, 325, 326, 452, 457, 458], "dhwio": [320, 325], "conv3d_transpos": 320, "depthwise_conv2d": [320, 434], "depthwis": [320, 327, 452, 459], "333": [320, 327], "inp": [320, 327], "prob": [320, 328, 402, 403, 452, 460], "bernoul": [320, 328, 452, 460], "out_featur": [320, 328, 329], "incom": [320, 329], "outer_batch_shap": [320, 329], "inner_batch_shap": [320, 329], "in_featur": [320, 329], "cell": [320, 330, 452, 461], "multi_head_attent": 320, "num_head": [320, 331, 452, 463], "mask": [320, 331, 332], "to_q_fn": [320, 331], "to_kv_fn": [320, 331], "to_out_fn": [320, 331], "to_q_v": [320, 331], "to_kv_v": [320, 331], "to_out_v": [320, 331], "head": [320, 331, 434, 452, 463], "num_queri": [320, 331, 332], "x_feat_dim": [320, 331], "measur": [320, 331, 452, 463], "num_kei": [320, 331, 332], "cont_feat_dim": [320, 331], "numhead": [320, 331], "feat_dim": [320, 331, 332], "dot": [320, 331, 332, 333, 353, 355, 422, 423, 452, 463], "out_feat_dim": [320, 331], "scaled_dot_product_attent": 320, "choleski": 333, "decomposit": [333, 334, 348, 351], "symmetr": [333, 334, 338, 339, 357], "73": [333, 334], "57": [333, 334], "63": [333, 334, 422, 423], "cross": [333, 358, 359, 360, 361, 434], "vif": [333, 335], "35": [333, 335, 422, 423], "det": 333, "92": [333, 336], "293": [333, 336], "47": [333, 336], "offset": [333, 337, 354, 400, 401], "axis1": [333, 337, 362, 375], "axis2": [333, 337], "eigh": 333, "eigendecomposit": [333, 338], "qlq\u1d40": [333, 338], "orthogon": [333, 338], "eig": [333, 338], "namedtupl": [333, 338, 348, 351, 414, 415, 416], "eigenvalu": [333, 338, 339], "eigenvector": [333, 338], "eigvalsh": 333, "25": [333, 340, 358, 360, 422, 423], "75": [333, 340], "prepend": [333, 341], "matrix_norm": 333, "ord": [333, 342, 356], "fro": [333, 342], "matrix_pow": 333, "matrix_rank": 333, "rtol": [333, 344, 347], "singular": [333, 344, 347, 351, 352], "toler": [333, 344, 347], "largest_singular_valu": [333, 344, 347], "outer": [333, 378, 379, 380, 381, 422, 423], "array_lik": [333, 346], "pinv": [333, 434], "moor": [333, 347], "penros": [333, 347], "pseudo": [333, 347], "qr": 333, "orthonorm": [333, 348, 351], "slodget": 333, "logdet": [333, 349], "equat": [333, 350, 422, 423], "coeffici": [333, 350], "svd": [333, 434], "full_matric": [333, 351], "usvh": [333, 351], "vh": [333, 351], "hermitian": [333, 351], "descend": [333, 351, 352, 419, 420, 421], "et": [333, 351], "cetera": [333, 351], "adjoint": [333, 351], "reconstruct": [333, 351, 414, 415, 417], "reconstructed_x": [333, 351], "svdval": 333, "tensordot": 333, "contract": [333, 353, 422, 423], "26": [333, 353, 422, 423], "doubl": [333, 353], "89": [333, 353, 422, 429], "76": [333, 353, 422, 423], "vecdot": 333, "vector_norm": 333, "singleton": [333, 356, 362, 373, 409, 411, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "liter": [333, 356], "manhattan": [333, 356], "l2": [333, 356], "euclidean": [333, 356], "vector_to_skew_symmetric_matrix": [333, 434], "mathbf": [333, 357], "mathbb": [333, 357], "skew": [333, 357], "binary_cross_entropi": 358, "entropi": [358, 359, 360, 361], "predict": [358, 359, 360, 361], "smooth": [358, 359, 360, 361], "discret": [358, 360], "3862944": [358, 360], "35667497": [358, 360, 361], "sparse_cross_entropi": 358, "spars": [358, 361], "logit": [358, 361], "3025851": [358, 361], "693": [358, 361], "357": [358, 361], "join": [362, 364, 374, 434], "constant_pad": 362, "pad_width": [362, 365, 377], "before_1": [362, 365, 377], "after_1": [362, 365, 377], "before_n": [362, 365, 377], "after_n": [362, 365, 377], "insert": [362, 366, 382, 387, 409, 410], "reorder": [362, 367], "permute_dim": 362, "permut": [362, 368, 375], "repetit": [362, 369, 376], "beyond": [362, 371], "restor": [362, 371], "with_remaind": [362, 372], "45": [362, 372, 422, 423], "squeez": [362, 434], "famili": [362, 374], "intxx": [362, 374], "floatxx": [362, 374], "swapax": 362, "axis0": [362, 375], "tile": [362, 434], "rep": [362, 376], "zero_pad": [362, 434], "fomaml_step": 378, "inner_cost_fn": [378, 379, 380], "outer_cost_fn": [378, 379, 380], "inner_grad_step": [378, 379, 380, 381], "inner_learning_r": [378, 379, 380, 381], "inner_optimization_step": [378, 379, 380, 381], "inner_batch_fn": [378, 379, 380], "outer_batch_fn": [378, 379, 380], "average_across_step": [378, 379, 380], "inner_v": [378, 379, 380], "keep_inner_v": [378, 379, 380], "outer_v": [378, 379, 380], "keep_outer_v": [378, 379, 380], "return_inner_v": [378, 379, 380, 381], "num_task": [378, 379, 380, 381], "maml": [378, 379, 380], "recev": [378, 379, 380], "maml_step": 378, "rece": [378, 380], "reptile_step": 378, "cost_fn": [378, 381], "reptil": [378, 381], "receivng": [378, 381], "all_nested_indic": 382, "include_nest": [382, 383], "_index": [382, 383, 393], "_base": [382, 383, 392, 393], "begin": [382, 383, 393], "copy_nest": 382, "include_deriv": [382, 384, 394], "to_mut": [382, 384, 394], "mutabl": [382, 384, 394], "insert_into_nest_at_index": 382, "insert_into_nest_at_indic": 382, "map_nest_at_index": 382, "map_nest_at_indic": 382, "multi_index_nest": 382, "nested_ani": 382, "check_nest": [382, 392, 393], "conditon": [382, 392, 393], "nested_indices_wher": 382, "to_ignor": [382, 393], "_depth": [382, 394], "_tuple_check_fn": [382, 394], "_list_check_fn": [382, 394], "_dict_check_fn": [382, 394], "wherebi": [382, 394], "nested_multi_map": 382, "key_chain": [382, 395], "to_appli": [382, 395], "prune_unappli": [382, 395], "prune": [382, 395, 396, 397], "leftmost": [382, 395], "nest0": [382, 395], "funciton": [382, 395], "prune_nest_at_index": 382, "prune_nest_at_indic": 382, "set_nest_at_index": 382, "set_nest_at_indic": 382, "layer_norm": 400, "normalized_idx": [400, 401], "new_std": [400, 401, 466, 467], "mini": [400, 401, 466, 467], "gamma": [400, 401], "beta": [400, 401], "multinomi": 402, "population_s": [402, 403], "draw": [402, 403, 405, 406], "unnorm": [402, 403], "drawn": [402, 403, 404, 405, 406], "home": [402, 403, 404, 405, 406], "randint": [402, 434], "uniformli": [402, 404, 406], "highest": [402, 404], "parameter": [402, 405, 406], "6444774682897879": [402, 405], "boundari": [402, 406], "89150229": [402, 406], "seed_valu": [402, 407], "shuffl": [402, 434], "argmax": [409, 434], "occurr": [409, 410, 411, 414, 415], "argmin": [409, 434], "yield": [409, 413], "unique_al": 414, "x_j": [414, 415, 416, 418], "impli": [414, 415, 416, 418], "inverse_indic": [414, 415, 417], "aggreg": [414, 415], "fourth": [414, 415], "unique_count": 414, "unique_invers": 414, "unique_valu": 414, "argsort": 419, "ascend": [419, 420], "einsum": 422, "einstein": [422, 423], "summat": [422, 423], "seq": [422, 423], "imagin": [422, 423], "suppos": [422, 423], "chanc": [422, 423], "22": [422, 423], "bigger": [422, 423], "jk": [422, 423], "ik": [422, 423], "1d": [422, 423, 452, 453, 454], "24": [422, 423], "36": [422, 423], "66": [422, 423], "84": [422, 423], "104": [422, 423], "126": [422, 423], "510": [422, 423], "18": [422, 423], "21": [422, 423], "27": [422, 423], "33": [422, 423], "40": [422, 423], "44": [422, 423], "48": [422, 423], "52": [422, 423], "60": [422, 423], "65": [422, 423], "72": [422, 423], "78": [422, 423], "49": [422, 423], "77": [422, 423], "91": [422, 423], "98": [422, 423], "88": [422, 423], "112": [422, 423], "81": [422, 423], "99": [422, 423], "108": [422, 423], "117": [422, 423], "sentinel": [422, 424, 426], "unsign": [422, 427, 429], "degre": [422, 428, 430], "freedom": [422, 428, 430], "bessel": [422, 428, 430], "8164966": [422, 428], "varianc": [422, 430], "unbias": [422, 430], "autom": 434, "grow": 434, "ai": 434, "got": 434, "colab": 434, "sharp": 434, "immedi": 434, "favorit": 434, "jax_concat": 434, "tf_concat": 434, "np_concat": 434, "mx_concat": 434, "torch_concat": 434, "prompt": 434, "get_devic": 434, "reduce_prod": 434, "linalg": 434, "neural_net": 434, "ecosystem": [434, 440], "popular": [434, 440], "acceler": 434, "articl": 434, "lenton2021ivi": 434, "inter": 434, "portabl": 434, "author": 434, "lenton": 434, "daniel": 434, "pardo": 434, "fabio": 434, "falck": 434, "fabian": 434, "jame": 434, "stephen": 434, "clark": 434, "ronald": 434, "journal": 434, "arxiv": 434, "preprint": 434, "2102": 434, "02886": 434, "2021": 434, "add_array_spec": 437, "fn_array_spec": 437, "inspect": [438, 439], "geglu": 441, "native_modul": [444, 445], "native_module_class": [444, 445], "firstlayersiren": 446, "kaimingnorm": 446, "negative_slop": 446, "Ones": 446, "siren": 446, "w0": [446, 450], "filter_s": [452, 453, 454], "conv1dtranspos": 452, "filter_shap": [452, 455, 456, 457, 458, 459], "conv2dtranspos": 452, "conv3dtranspos": 452, "depthwiseconv2d": 452, "num_channel": [452, 459], "num_lay": [452, 461], "return_sequ": [452, 461], "return_st": [452, 461], "get_initial_st": [452, 461], "dens": [452, 462], "multiheadattent": 452, "query_dim": [452, 463], "head_dim": [452, 463], "dropout_r": [452, 463], "context_dim": [452, 463], "with_to_q_fn": [452, 463], "with_to_kv_fn": [452, 463], "with_to_out_fn": [452, 463], "build_mod": [452, 463, 464, 465], "on_init": [452, 463, 464, 465], "__call__": [452, 463, 464, 465], "store_var": [464, 465], "arg_stateful_idx": [464, 465], "kwarg_stateful_idx": [464, 465], "fallback_to_non_compil": [464, 465, 468, 472], "with_partial_v": [464, 465], "initialz": [464, 465], "from_cal": [464, 465], "check_submod_ret": [464, 465], "get_mod_kei": [464, 465], "top_mod": [464, 465], "mod_depth": [464, 465], "mod_height": [464, 465], "mod_with_top_mod_key_chain": [464, 465], "save_weight": [464, 465], "weights_path": [464, 465], "show_mod_in_top_mod": [464, 465], "upper_depth": [464, 465], "lower_depth": [464, 465], "show_structur": [464, 465], "show_v_in_top_v": [464, 465], "sub_mod": [464, 465], "show_v": [464, 465], "track_submod_call_ord": [464, 465], "track_submod_ret": [464, 465], "v_with_top_v_key_chain": [464, 465], "layernorm": 466, "normalized_shap": [466, 467], "elementwise_affin": [466, 467], "trail": [466, 467], "affin": [466, 467], "0001": [468, 469, 470], "init_on_first_step": [468, 472], "ignore_miss": [468, 472], "overriden": [468, 472], "sgd": 468, "stochast": [468, 473], "sub_modul": [474, 475], "color": [477, 478], "green": [477, 478]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [20, 0, 0, "-", "debugger"], [60, 0, 0, "-", "func_wrapper"], [437, 0, 0, "-", "inspection"], [477, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [1, 3, 1, "", "choose_random_backend"], [2, 3, 1, "", "clear_backend_stack"], [3, 3, 1, "", "current_backend"], [4, 3, 1, "", "get_backend"], [5, 3, 1, "", "set_backend"], [6, 3, 1, "", "try_import_ivy_jax"], [7, 3, 1, "", "try_import_ivy_mxnet"], [8, 3, 1, "", "try_import_ivy_numpy"], [9, 3, 1, "", "try_import_ivy_tf"], [10, 3, 1, "", "try_import_ivy_torch"], [11, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[21, 3, 1, "", "debug_mode"], [22, 3, 1, "", "set_breakpoint_debug_mode"], [23, 3, 1, "", "set_debug_mode"], [24, 3, 1, "", "set_exception_debug_mode"], [25, 3, 1, "", "unset_debug_mode"]], "ivy.func_wrapper": [[61, 3, 1, "", "handle_nestable"], [62, 3, 1, "", "handle_out_argument"], [63, 3, 1, "", "infer_device"], [64, 3, 1, "", "infer_dtype"], [65, 3, 1, "", "inputs_to_ivy_arrays"], [66, 3, 1, "", "inputs_to_native_arrays"], [67, 3, 1, "", "outputs_to_ivy_arrays"], [68, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[70, 0, 0, "-", "activations"], [78, 0, 0, "-", "compilation"], [80, 0, 0, "-", "constants"], [81, 0, 0, "-", "creation"], [100, 0, 0, "-", "data_type"], [127, 0, 0, "-", "device"], [174, 0, 0, "-", "elementwise"], [234, 0, 0, "-", "general"], [297, 0, 0, "-", "gradients"], [312, 0, 0, "-", "image"], [320, 0, 0, "-", "layers"], [333, 0, 0, "-", "linear_algebra"], [358, 0, 0, "-", "losses"], [362, 0, 0, "-", "manipulation"], [378, 0, 0, "-", "meta"], [382, 0, 0, "-", "nest"], [400, 0, 0, "-", "norms"], [402, 0, 0, "-", "random"], [409, 0, 0, "-", "searching"], [414, 0, 0, "-", "set"], [419, 0, 0, "-", "sorting"], [422, 0, 0, "-", "statistical"], [431, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[71, 3, 1, "", "gelu"], [72, 3, 1, "", "leaky_relu"], [73, 3, 1, "", "relu"], [74, 3, 1, "", "sigmoid"], [75, 3, 1, "", "softmax"], [76, 3, 1, "", "softplus"], [77, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[79, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[80, 4, 1, "", "e"], [80, 4, 1, "", "inf"], [80, 4, 1, "", "nan"], [80, 4, 1, "", "newaxis"], [80, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[82, 3, 1, "", "arange"], [81, 3, 1, "", "array"], [83, 3, 1, "", "asarray"], [84, 3, 1, "", "empty"], [85, 3, 1, "", "empty_like"], [86, 3, 1, "", "eye"], [87, 3, 1, "", "from_dlpack"], [88, 3, 1, "", "full"], [89, 3, 1, "", "full_like"], [90, 3, 1, "", "linspace"], [91, 3, 1, "", "logspace"], [92, 3, 1, "", "meshgrid"], [93, 3, 1, "", "native_array"], [94, 3, 1, "", "ones"], [95, 3, 1, "", "ones_like"], [96, 3, 1, "", "tril"], [97, 3, 1, "", "triu"], [98, 3, 1, "", "zeros"], [99, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[100, 1, 1, "", "DefaultDtype"], [100, 1, 1, "", "DefaultFloatDtype"], [100, 1, 1, "", "DefaultIntDtype"], [101, 3, 1, "", "as_ivy_dtype"], [102, 3, 1, "", "as_native_dtype"], [103, 3, 1, "", "astype"], [104, 3, 1, "", "broadcast_arrays"], [105, 3, 1, "", "broadcast_to"], [106, 3, 1, "", "can_cast"], [107, 3, 1, "", "closest_valid_dtype"], [108, 3, 1, "", "convert_dtype"], [109, 3, 1, "", "default_dtype"], [110, 3, 1, "", "default_float_dtype"], [111, 3, 1, "", "default_int_dtype"], [112, 3, 1, "", "dtype"], [113, 3, 1, "", "dtype_bits"], [114, 3, 1, "", "finfo"], [115, 3, 1, "", "iinfo"], [116, 3, 1, "", "invalid_dtype"], [117, 3, 1, "", "is_float_dtype"], [118, 3, 1, "", "is_int_dtype"], [119, 3, 1, "", "result_type"], [120, 3, 1, "", "set_default_dtype"], [121, 3, 1, "", "set_default_float_dtype"], [122, 3, 1, "", "set_default_int_dtype"], [123, 3, 1, "", "unset_default_dtype"], [124, 3, 1, "", "unset_default_float_dtype"], [125, 3, 1, "", "unset_default_int_dtype"], [126, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[127, 1, 1, "", "DefaultDevice"], [128, 1, 1, "", "DevClonedItem"], [129, 1, 1, "", "DevClonedIter"], [130, 1, 1, "", "DevClonedNest"], [131, 1, 1, "", "DevDistItem"], [132, 1, 1, "", "DevDistIter"], [133, 1, 1, "", "DevDistNest"], [127, 1, 1, "", "DevManager"], [134, 1, 1, "", "DevMapper"], [135, 1, 1, "", "DevMapperMultiProc"], [127, 1, 1, "", "MultiDev"], [136, 1, 1, "", "MultiDevItem"], [137, 1, 1, "", "MultiDevIter"], [138, 1, 1, "", "MultiDevNest"], [139, 1, 1, "", "Profiler"], [140, 3, 1, "", "as_ivy_dev"], [141, 3, 1, "", "as_native_dev"], [142, 3, 1, "", "clear_mem_on_dev"], [143, 3, 1, "", "default_device"], [144, 3, 1, "", "dev"], [145, 3, 1, "", "dev_clone"], [146, 3, 1, "", "dev_clone_array"], [147, 3, 1, "", "dev_clone_iter"], [148, 3, 1, "", "dev_clone_nest"], [149, 3, 1, "", "dev_dist"], [150, 3, 1, "", "dev_dist_array"], [151, 3, 1, "", "dev_dist_iter"], [152, 3, 1, "", "dev_dist_nest"], [153, 3, 1, "", "dev_unify"], [154, 3, 1, "", "dev_unify_array"], [155, 3, 1, "", "dev_unify_iter"], [156, 3, 1, "", "dev_unify_nest"], [157, 3, 1, "", "dev_util"], [158, 3, 1, "", "get_all_ivy_arrays_on_dev"], [159, 3, 1, "", "gpu_is_available"], [160, 3, 1, "", "num_cpu_cores"], [161, 3, 1, "", "num_gpus"], [162, 3, 1, "", "num_ivy_arrays_on_dev"], [163, 3, 1, "", "percent_used_mem_on_dev"], [164, 3, 1, "", "print_all_ivy_arrays_on_dev"], [165, 3, 1, "", "set_default_device"], [166, 3, 1, "", "set_split_factor"], [167, 3, 1, "", "split_factor"], [168, 3, 1, "", "split_func_call"], [169, 3, 1, "", "to_dev"], [170, 3, 1, "", "total_mem_on_dev"], [171, 3, 1, "", "tpu_is_available"], [172, 3, 1, "", "unset_default_device"], [173, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[127, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "da_tune_step"], [127, 5, 1, "", "dim_size"], [127, 2, 1, "", "ds_tune_step"], [127, 2, 1, "", "map"], [127, 2, 1, "", "repeated_config_check"], [127, 5, 1, "", "tune_step"], [127, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[135, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[127, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "items"], [136, 2, 1, "", "keys"], [136, 5, 1, "", "shape"], [136, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "at_dev"], [137, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "start"], [139, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[175, 3, 1, "", "abs"], [176, 3, 1, "", "acos"], [177, 3, 1, "", "acosh"], [178, 3, 1, "", "add"], [179, 3, 1, "", "asin"], [180, 3, 1, "", "asinh"], [181, 3, 1, "", "atan"], [182, 3, 1, "", "atan2"], [183, 3, 1, "", "atanh"], [184, 3, 1, "", "bitwise_and"], [185, 3, 1, "", "bitwise_invert"], [186, 3, 1, "", "bitwise_left_shift"], [187, 3, 1, "", "bitwise_or"], [188, 3, 1, "", "bitwise_right_shift"], [189, 3, 1, "", "bitwise_xor"], [190, 3, 1, "", "ceil"], [191, 3, 1, "", "cos"], [192, 3, 1, "", "cosh"], [193, 3, 1, "", "divide"], [194, 3, 1, "", "equal"], [195, 3, 1, "", "erf"], [196, 3, 1, "", "exp"], [197, 3, 1, "", "expm1"], [198, 3, 1, "", "floor"], [199, 3, 1, "", "floor_divide"], [200, 3, 1, "", "greater"], [201, 3, 1, "", "greater_equal"], [202, 3, 1, "", "isfinite"], [203, 3, 1, "", "isinf"], [204, 3, 1, "", "isnan"], [205, 3, 1, "", "less"], [206, 3, 1, "", "less_equal"], [207, 3, 1, "", "log"], [208, 3, 1, "", "log10"], [209, 3, 1, "", "log1p"], [210, 3, 1, "", "log2"], [211, 3, 1, "", "logaddexp"], [212, 3, 1, "", "logical_and"], [213, 3, 1, "", "logical_not"], [214, 3, 1, "", "logical_or"], [215, 3, 1, "", "logical_xor"], [216, 3, 1, "", "maximum"], [217, 3, 1, "", "minimum"], [218, 3, 1, "", "multiply"], [219, 3, 1, "", "negative"], [220, 3, 1, "", "not_equal"], [221, 3, 1, "", "positive"], [222, 3, 1, "", "pow"], [223, 3, 1, "", "remainder"], [224, 3, 1, "", "round"], [225, 3, 1, "", "sign"], [226, 3, 1, "", "sin"], [227, 3, 1, "", "sinh"], [228, 3, 1, "", "sqrt"], [229, 3, 1, "", "square"], [230, 3, 1, "", "subtract"], [231, 3, 1, "", "tan"], [232, 3, 1, "", "tanh"], [233, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[235, 3, 1, "", "all_equal"], [236, 3, 1, "", "arg_names"], [237, 3, 1, "", "array_equal"], [238, 3, 1, "", "arrays_equal"], [239, 3, 1, "", "assert_supports_inplace"], [240, 3, 1, "", "cache_fn"], [241, 3, 1, "", "clip_matrix_norm"], [242, 3, 1, "", "clip_vector_norm"], [243, 3, 1, "", "container_types"], [244, 3, 1, "", "copy_array"], [245, 3, 1, "", "cumprod"], [246, 3, 1, "", "cumsum"], [247, 3, 1, "", "current_backend_str"], [248, 3, 1, "", "default"], [249, 3, 1, "", "einops_rearrange"], [250, 3, 1, "", "einops_reduce"], [251, 3, 1, "", "einops_repeat"], [252, 3, 1, "", "exists"], [253, 3, 1, "", "floormod"], [254, 3, 1, "", "fourier_encode"], [255, 3, 1, "", "gather"], [256, 3, 1, "", "gather_nd"], [257, 3, 1, "", "get_all_arrays_in_memory"], [258, 3, 1, "", "get_min_base"], [259, 3, 1, "", "get_min_denominator"], [260, 3, 1, "", "get_num_dims"], [261, 3, 1, "", "get_referrers_recursive"], [262, 3, 1, "", "has_nans"], [263, 3, 1, "", "indices_where"], [264, 3, 1, "", "inplace_arrays_supported"], [265, 3, 1, "", "inplace_decrement"], [266, 3, 1, "", "inplace_increment"], [267, 3, 1, "", "inplace_update"], [268, 3, 1, "", "inplace_variables_supported"], [269, 3, 1, "", "is_array"], [270, 3, 1, "", "is_ivy_array"], [271, 3, 1, "", "is_ivy_container"], [272, 3, 1, "", "is_native_array"], [273, 3, 1, "", "match_kwargs"], [274, 3, 1, "", "multiprocessing"], [275, 3, 1, "", "num_arrays_in_memory"], [276, 3, 1, "", "one_hot"], [277, 3, 1, "", "print_all_arrays_in_memory"], [278, 3, 1, "", "queue_timeout"], [279, 3, 1, "", "scatter_flat"], [280, 3, 1, "", "scatter_nd"], [281, 3, 1, "", "set_min_base"], [282, 3, 1, "", "set_min_denominator"], [283, 3, 1, "", "set_queue_timeout"], [284, 3, 1, "", "set_tmp_dir"], [285, 3, 1, "", "shape"], [286, 3, 1, "", "shape_to_tuple"], [287, 3, 1, "", "stable_divide"], [288, 3, 1, "", "stable_pow"], [289, 3, 1, "", "supports_inplace"], [290, 3, 1, "", "tmp_dir"], [291, 3, 1, "", "to_list"], [292, 3, 1, "", "to_numpy"], [293, 3, 1, "", "to_scalar"], [294, 3, 1, "", "try_else_none"], [295, 3, 1, "", "unstack"], [296, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[297, 1, 1, "", "GradientTracking"], [298, 3, 1, "", "adam_step"], [299, 3, 1, "", "adam_update"], [300, 3, 1, "", "execute_with_gradients"], [301, 3, 1, "", "gradient_descent_update"], [302, 3, 1, "", "is_variable"], [303, 3, 1, "", "lamb_update"], [304, 3, 1, "", "lars_update"], [305, 3, 1, "", "optimizer_update"], [306, 3, 1, "", "set_with_grads"], [307, 3, 1, "", "stop_gradient"], [308, 3, 1, "", "unset_with_grads"], [309, 3, 1, "", "variable"], [310, 3, 1, "", "variable_data"], [311, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[297, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[313, 3, 1, "", "bilinear_resample"], [314, 3, 1, "", "float_img_to_uint8_img"], [315, 3, 1, "", "gradient_image"], [316, 3, 1, "", "linear_resample"], [317, 3, 1, "", "random_crop"], [318, 3, 1, "", "stack_images"], [319, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[321, 3, 1, "", "conv1d"], [322, 3, 1, "", "conv1d_transpose"], [323, 3, 1, "", "conv2d"], [324, 3, 1, "", "conv2d_transpose"], [325, 3, 1, "", "conv3d"], [326, 3, 1, "", "conv3d_transpose"], [327, 3, 1, "", "depthwise_conv2d"], [328, 3, 1, "", "dropout"], [329, 3, 1, "", "linear"], [330, 3, 1, "", "lstm_update"], [331, 3, 1, "", "multi_head_attention"], [332, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[334, 3, 1, "", "cholesky"], [335, 3, 1, "", "cross"], [336, 3, 1, "", "det"], [337, 3, 1, "", "diagonal"], [338, 3, 1, "", "eigh"], [339, 3, 1, "", "eigvalsh"], [340, 3, 1, "", "inv"], [341, 3, 1, "", "matmul"], [342, 3, 1, "", "matrix_norm"], [343, 3, 1, "", "matrix_power"], [344, 3, 1, "", "matrix_rank"], [345, 3, 1, "", "matrix_transpose"], [346, 3, 1, "", "outer"], [347, 3, 1, "", "pinv"], [348, 3, 1, "", "qr"], [349, 3, 1, "", "slodget"], [350, 3, 1, "", "solve"], [351, 3, 1, "", "svd"], [352, 3, 1, "", "svdvals"], [353, 3, 1, "", "tensordot"], [354, 3, 1, "", "trace"], [355, 3, 1, "", "vecdot"], [356, 3, 1, "", "vector_norm"], [357, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[359, 3, 1, "", "binary_cross_entropy"], [360, 3, 1, "", "cross_entropy"], [361, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[363, 3, 1, "", "clip"], [364, 3, 1, "", "concat"], [365, 3, 1, "", "constant_pad"], [366, 3, 1, "", "expand_dims"], [367, 3, 1, "", "flip"], [368, 3, 1, "", "permute_dims"], [369, 3, 1, "", "repeat"], [370, 3, 1, "", "reshape"], [371, 3, 1, "", "roll"], [372, 3, 1, "", "split"], [373, 3, 1, "", "squeeze"], [374, 3, 1, "", "stack"], [375, 3, 1, "", "swapaxes"], [376, 3, 1, "", "tile"], [377, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[379, 3, 1, "", "fomaml_step"], [380, 3, 1, "", "maml_step"], [381, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[383, 3, 1, "", "all_nested_indices"], [384, 3, 1, "", "copy_nest"], [385, 3, 1, "", "index_nest"], [386, 3, 1, "", "insert_into_nest_at_index"], [387, 3, 1, "", "insert_into_nest_at_indices"], [388, 3, 1, "", "map"], [389, 3, 1, "", "map_nest_at_index"], [390, 3, 1, "", "map_nest_at_indices"], [391, 3, 1, "", "multi_index_nest"], [392, 3, 1, "", "nested_any"], [393, 3, 1, "", "nested_indices_where"], [394, 3, 1, "", "nested_map"], [395, 3, 1, "", "nested_multi_map"], [396, 3, 1, "", "prune_nest_at_index"], [397, 3, 1, "", "prune_nest_at_indices"], [398, 3, 1, "", "set_nest_at_index"], [399, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[401, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[403, 3, 1, "", "multinomial"], [404, 3, 1, "", "randint"], [405, 3, 1, "", "random_normal"], [406, 3, 1, "", "random_uniform"], [407, 3, 1, "", "seed"], [408, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[410, 3, 1, "", "argmax"], [411, 3, 1, "", "argmin"], [412, 3, 1, "", "nonzero"], [413, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[415, 3, 1, "", "unique_all"], [416, 3, 1, "", "unique_counts"], [417, 3, 1, "", "unique_inverse"], [418, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[420, 3, 1, "", "argsort"], [421, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[423, 3, 1, "", "einsum"], [424, 3, 1, "", "max"], [425, 3, 1, "", "mean"], [426, 3, 1, "", "min"], [427, 3, 1, "", "prod"], [428, 3, 1, "", "std"], [429, 3, 1, "", "sum"], [430, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[432, 3, 1, "", "all"], [433, 3, 1, "", "any"]], "ivy.inspection": [[438, 3, 1, "", "add_array_specs"], [439, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[441, 0, 0, "-", "activations"], [444, 0, 0, "-", "converters"], [446, 0, 0, "-", "initializers"], [452, 0, 0, "-", "layers"], [464, 0, 0, "-", "module"], [466, 0, 0, "-", "norms"], [468, 0, 0, "-", "optimizers"], [474, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[442, 1, 1, "", "GEGLU"], [443, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[442, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[443, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[445, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[446, 1, 1, "", "Constant"], [447, 1, 1, "", "FirstLayerSiren"], [448, 1, 1, "", "GlorotUniform"], [446, 1, 1, "", "KaimingNormal"], [449, 1, 1, "", "Ones"], [450, 1, 1, "", "Siren"], [446, 1, 1, "", "Uniform"], [451, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[446, 2, 1, "", "__init__"], [446, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[447, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[448, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[446, 2, 1, "", "__init__"], [446, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[449, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[450, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[446, 2, 1, "", "__init__"], [446, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[451, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[453, 1, 1, "", "Conv1D"], [454, 1, 1, "", "Conv1DTranspose"], [455, 1, 1, "", "Conv2D"], [456, 1, 1, "", "Conv2DTranspose"], [457, 1, 1, "", "Conv3D"], [458, 1, 1, "", "Conv3DTranspose"], [459, 1, 1, "", "DepthwiseConv2D"], [460, 1, 1, "", "Dropout"], [461, 1, 1, "", "LSTM"], [462, 1, 1, "", "Linear"], [463, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[453, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[454, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[455, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[456, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[457, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[458, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[459, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[460, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[461, 2, 1, "", "__init__"], [461, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[462, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[463, 2, 1, "", "__init__"]], "ivy.stateful.module": [[465, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[465, 2, 1, "", "__init__"], [465, 2, 1, "", "build"], [465, 5, 1, "", "build_mode"], [465, 5, 1, "", "built"], [465, 2, 1, "", "check_submod_rets"], [465, 2, 1, "", "get_mod_key"], [465, 2, 1, "", "mod_depth"], [465, 2, 1, "", "mod_height"], [465, 2, 1, "", "mod_with_top_mod_key_chain"], [465, 2, 1, "", "save_weights"], [465, 2, 1, "", "show_mod_in_top_mod"], [465, 2, 1, "", "show_structure"], [465, 2, 1, "", "show_v_in_top_v"], [465, 2, 1, "", "sub_mods"], [465, 2, 1, "", "track_submod_call_order"], [465, 2, 1, "", "track_submod_rets"], [465, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[467, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[467, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[469, 1, 1, "", "Adam"], [470, 1, 1, "", "LAMB"], [471, 1, 1, "", "LARS"], [472, 1, 1, "", "Optimizer"], [473, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[469, 2, 1, "", "__init__"], [469, 2, 1, "", "set_state"], [469, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[470, 2, 1, "", "__init__"], [470, 2, 1, "", "set_state"], [470, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[471, 2, 1, "", "__init__"], [471, 2, 1, "", "set_state"], [471, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[472, 2, 1, "", "__init__"], [472, 2, 1, "", "set_state"], [472, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "set_state"], [473, 5, 1, "", "state"]], "ivy.stateful.sequential": [[475, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[475, 2, 1, "", "__init__"]], "ivy.verbosity": [[478, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 27, 33, 42], "handler": [0, 42], "choose_random_backend": 1, "clear_backend_stack": 2, "current_backend": 3, "get_backend": 4, "set_backend": 5, "try_import_ivy_jax": 6, "try_import_ivy_mxnet": 7, "try_import_ivy_numpi": 8, "try_import_ivy_tf": 9, "try_import_ivy_torch": 10, "unset_backend": 11, "background": [12, 434], "ml": 13, "explos": 13, "standard": 14, "skeptic": 14, "complimentari": 14, "v": [14, 59], "competit": 14, "do": 14, "work": [14, 19], "The": [14, 18, 44, 59], "arrai": [14, 30, 35, 40, 44], "api": [14, 27, 30, 36, 42, 44, 46, 47], "why": 15, "unifi": [15, 44], "No": 15, "more": 15, "re": 15, "implement": 15, "infinit": 15, "shelf": 15, "life": 15, "contribut": [16, 434], "set": [17, 33, 414], "up": 17, "clone": 17, "ivi": [17, 27, 29, 31, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58], "pycharm": 17, "docker": [17, 19], "interpret": 17, "window": 17, "maco": 17, "ubuntu": 17, "pre": 17, "commit": [17, 18], "basic": 18, "get": 18, "help": 18, "todo": 18, "list": 18, "issu": 18, "manag": 18, "your": 18, "fork": 18, "pull": 18, "request": 18, "small": 18, "often": 18, "build": [19, 42], "doc": 19, "dockerless": 19, "us": [19, 45], "miniconda": 19, "venv": 19, "document": 19, "pipelin": [19, 59], "make_doc": 19, "sh": 19, "entrypoint": 19, "_make_doc": 19, "generate_src_rst_fil": 19, "py": 19, "sphinx": 19, "correct_built_html_fil": 19, "remove_fil": 19, "debugg": 20, "debug_mod": 21, "set_breakpoint_debug_mod": 22, "set_debug_mod": 23, "set_exception_debug_mod": 24, "unset_debug_mod": 25, "deep": 26, "dive": 26, "navig": 27, "code": 27, "categor": 27, "submodul": 27, "design": [27, 41, 434], "docstr": [28, 29], "exampl": [29, 40], "tan": [29, 231], "roll": [29, 371], "add": [29, 178], "test": [30, 31], "hypothesi": 31, "data": [31, 37, 45, 59, 100, 414, 415, 416, 418], "gener": [31, 234], "self": 31, "consist": 31, "explicit": 31, "test_array_funct": 31, "function": [32, 34, 37, 38, 40, 42, 47, 59], "type": [32, 37, 59, 100], "primari": 32, "composit": 32, "mix": 32, "standalon": 32, "nestabl": [32, 40], "conveni": 32, "wrap": 34, "nativ": 35, "handl": 35, "contain": [36, 45], "instanc": [36, 44], "method": [36, 44, 45], "static": 36, "special": 36, "modul": [37, 38, 46, 464, 465], "argument": [37, 38, 39, 40], "other": [37, 38], "devic": [38, 40, 127], "inplac": 39, "updat": 39, "out": [39, 40], "copi": 39, "dtype": [40, 112], "integ": 40, "sequenc": 40, "block": 42, "framework": [42, 43], "graph": [42, 47], "compil": [42, 47, 78, 79], "class": 44, "oper": [44, 59], "monkei": 44, "patch": 44, "construct": 45, "represent": 45, "recurs": 45, "built": 45, "ins": 45, "access": 45, "save": 45, "load": 45, "comparison": 45, "custom": [45, 59], "case": 45, "compartment": 45, "configur": 45, "network": [45, 47], "weight": 45, "state": [46, 59], "initi": [46, 446], "optim": [46, 468, 472], "transpil": 47, "frontend": 47, "role": 47, "convert": [47, 444], "model": [47, 54, 59], "builder": 49, "ecosystem": 50, "gym": [51, 58], "mech": 52, "memori": [53, 58], "robot": [55, 58], "vision": [56, 58], "extens": [57, 434], "appli": 58, "librari": 58, "mechan": 58, "faq": 59, "dynam": 59, "size": 59, "shape": [59, 285, 414, 415, 416, 418], "check": 59, "control": 59, "flow": 59, "auto": 59, "differenti": 59, "replica": 59, "parallel": 59, "support": 59, "altern": 59, "structur": 59, "func": 60, "wrapper": 60, "handle_nest": 61, "handle_out_argu": 62, "infer_devic": 63, "infer_dtyp": 64, "inputs_to_ivy_arrai": 65, "inputs_to_native_arrai": 66, "outputs_to_ivy_arrai": 67, "to_native_arrays_and_back": 68, "activ": [70, 441], "gelu": [71, 443], "leaky_relu": 72, "relu": 73, "sigmoid": 74, "softmax": 75, "softplu": 76, "tanh": [77, 232], "constant": 80, "creation": 81, "note": [81, 87], "arang": 82, "asarrai": 83, "empti": 84, "empty_lik": 85, "ey": 86, "from_dlpack": 87, "full": 88, "full_lik": 89, "linspac": 90, "logspac": 91, "meshgrid": 92, "native_arrai": 93, "ones": 94, "ones_lik": 95, "tril": 96, "triu": 97, "zero": [98, 451], "zeros_lik": 99, "as_ivy_dtyp": 101, "as_native_dtyp": 102, "astyp": 103, "broadcast_arrai": 104, "broadcast_to": 105, "can_cast": 106, "closest_valid_dtyp": 107, "convert_dtyp": 108, "default_dtyp": 109, "default_float_dtyp": 110, "default_int_dtyp": 111, "dtype_bit": 113, "finfo": 114, "iinfo": 115, "invalid_dtyp": 116, "is_float_dtyp": 117, "is_int_dtyp": 118, "result_typ": 119, "set_default_dtyp": 120, "set_default_float_dtyp": 121, "set_default_int_dtyp": 122, "unset_default_dtyp": 123, "unset_default_float_dtyp": 124, "unset_default_int_dtyp": 125, "valid_dtyp": 126, "devcloneditem": 128, "devclonedit": 129, "devclonednest": 130, "devdistitem": 131, "devdistit": 132, "devdistnest": 133, "devmapp": 134, "devmappermultiproc": 135, "multidevitem": 136, "multidevit": 137, "multidevnest": 138, "profil": 139, "as_ivy_dev": 140, "as_native_dev": 141, "clear_mem_on_dev": 142, "default_devic": 143, "dev": 144, "dev_clon": 145, "dev_clone_arrai": 146, "dev_clone_it": 147, "dev_clone_nest": 148, "dev_dist": 149, "dev_dist_arrai": 150, "dev_dist_it": 151, "dev_dist_nest": 152, "dev_unifi": 153, "dev_unify_arrai": 154, "dev_unify_it": 155, "dev_unify_nest": 156, "dev_util": 157, "get_all_ivy_arrays_on_dev": 158, "gpu_is_avail": 159, "num_cpu_cor": 160, "num_gpu": 161, "num_ivy_arrays_on_dev": 162, "percent_used_mem_on_dev": 163, "print_all_ivy_arrays_on_dev": 164, "set_default_devic": 165, "set_split_factor": 166, "split_factor": 167, "split_func_cal": 168, "to_dev": 169, "total_mem_on_dev": 170, "tpu_is_avail": 171, "unset_default_devic": 172, "used_mem_on_dev": 173, "elementwis": 174, "ab": 175, "aco": 176, "acosh": 177, "asin": 179, "asinh": 180, "atan": 181, "atan2": 182, "atanh": 183, "bitwise_and": 184, "bitwise_invert": 185, "bitwise_left_shift": 186, "bitwise_or": 187, "bitwise_right_shift": 188, "bitwise_xor": 189, "ceil": 190, "co": 191, "cosh": 192, "divid": 193, "equal": 194, "erf": 195, "exp": 196, "expm1": 197, "floor": 198, "floor_divid": 199, "greater": 200, "greater_equ": 201, "isfinit": 202, "isinf": 203, "isnan": 204, "less": 205, "less_equ": 206, "log": 207, "log10": 208, "log1p": 209, "log2": 210, "logaddexp": 211, "logical_and": 212, "logical_not": 213, "logical_or": 214, "logical_xor": 215, "maximum": 216, "minimum": 217, "multipli": 218, "neg": 219, "not_equ": 220, "posit": 221, "pow": 222, "remaind": 223, "round": 224, "sign": 225, "sin": 226, "sinh": 227, "sqrt": 228, "squar": 229, "subtract": 230, "trunc": 233, "all_equ": 235, "arg_nam": 236, "array_equ": 237, "arrays_equ": 238, "assert_supports_inplac": 239, "cache_fn": 240, "clip_matrix_norm": 241, "clip_vector_norm": 242, "container_typ": 243, "copy_arrai": 244, "cumprod": 245, "cumsum": 246, "current_backend_str": 247, "default": 248, "einops_rearrang": 249, "einops_reduc": 250, "einops_repeat": 251, "exist": 252, "floormod": 253, "fourier_encod": 254, "gather": 255, "gather_nd": 256, "get_all_arrays_in_memori": 257, "get_min_bas": 258, "get_min_denomin": 259, "get_num_dim": 260, "get_referrers_recurs": 261, "has_nan": 262, "indices_wher": 263, "inplace_arrays_support": 264, "inplace_decr": 265, "inplace_incr": 266, "inplace_upd": 267, "inplace_variables_support": 268, "is_arrai": 269, "is_ivy_arrai": 270, "is_ivy_contain": 271, "is_native_arrai": 272, "match_kwarg": 273, "multiprocess": 274, "num_arrays_in_memori": 275, "one_hot": 276, "print_all_arrays_in_memori": 277, "queue_timeout": 278, "scatter_flat": 279, "scatter_nd": 280, "set_min_bas": 281, "set_min_denomin": 282, "set_queue_timeout": 283, "set_tmp_dir": 284, "shape_to_tupl": 286, "stable_divid": 287, "stable_pow": 288, "supports_inplac": 289, "tmp_dir": 290, "to_list": 291, "to_numpi": 292, "to_scalar": 293, "try_else_non": 294, "unstack": 295, "value_is_nan": 296, "gradient": 297, "adam_step": 298, "adam_upd": 299, "execute_with_gradi": 300, "gradient_descent_upd": 301, "is_vari": 302, "lamb_upd": 303, "lars_upd": 304, "optimizer_upd": 305, "set_with_grad": 306, "stop_gradi": 307, "unset_with_grad": 308, "variabl": 309, "variable_data": 310, "with_grad": 311, "imag": 312, "bilinear_resampl": 313, "float_img_to_uint8_img": 314, "gradient_imag": 315, "linear_resampl": 316, "random_crop": 317, "stack_imag": 318, "uint8_img_to_float_img": 319, "layer": [320, 452], "conv1d": [321, 453], "conv1d_transpos": 322, "conv2d": [323, 455], "conv2d_transpos": 324, "conv3d": [325, 457], "conv3d_transpos": 326, "depthwise_conv2d": 327, "dropout": [328, 460], "linear": [329, 333, 462], "lstm_updat": 330, "multi_head_attent": 331, "scaled_dot_product_attent": 332, "algebra": 333, "choleski": 334, "cross": 335, "det": 336, "diagon": 337, "eigh": 338, "eigvalsh": 339, "inv": 340, "matmul": 341, "matrix_norm": 342, "matrix_pow": 343, "matrix_rank": 344, "matrix_transpos": 345, "outer": 346, "pinv": 347, "qr": 348, "slodget": 349, "solv": 350, "svd": 351, "svdval": 352, "tensordot": 353, "trace": 354, "vecdot": 355, "vector_norm": 356, "vector_to_skew_symmetric_matrix": 357, "loss": 358, "binary_cross_entropi": 359, "cross_entropi": 360, "sparse_cross_entropi": 361, "manipul": 362, "clip": 363, "concat": 364, "constant_pad": 365, "expand_dim": 366, "flip": 367, "permute_dim": 368, "repeat": 369, "reshap": 370, "split": 372, "squeez": 373, "stack": 374, "swapax": 375, "tile": 376, "zero_pad": 377, "meta": 378, "fomaml_step": 379, "maml_step": 380, "reptile_step": 381, "nest": 382, "all_nested_indic": 383, "copy_nest": 384, "index_nest": 385, "insert_into_nest_at_index": 386, "insert_into_nest_at_indic": 387, "map": 388, "map_nest_at_index": 389, "map_nest_at_indic": 390, "multi_index_nest": 391, "nested_ani": 392, "nested_indices_wher": 393, "nested_map": 394, "nested_multi_map": 395, "prune_nest_at_index": 396, "prune_nest_at_indic": 397, "set_nest_at_index": 398, "set_nest_at_indic": 399, "norm": [400, 466], "layer_norm": 401, "random": 402, "multinomi": 403, "randint": 404, "random_norm": 405, "random_uniform": 406, "seed": 407, "shuffl": 408, "search": 409, "argmax": 410, "argmin": 411, "nonzero": 412, "where": 413, "depend": [414, 415, 416, 418], "output": [414, 415, 416, 418], "unique_al": 415, "unique_count": 416, "unique_invers": 417, "unique_valu": 418, "sort": [419, 421], "argsort": 420, "statist": 422, "einsum": 423, "max": 424, "mean": 425, "min": 426, "prod": 427, "std": 428, "sum": 429, "var": 430, "util": 431, "all": 432, "ani": 433, "content": 434, "overview": 434, "quick": 434, "start": 434, "roadmap": [434, 440], "citat": 434, "inspect": 437, "add_array_spec": 438, "fn_array_spec": 439, "geglu": 442, "to_ivy_modul": 445, "firstlayersiren": 447, "glorotuniform": 448, "Ones": 449, "siren": 450, "conv1dtranspos": 454, "conv2dtranspos": 456, "conv3dtranspos": 458, "depthwiseconv2d": 459, "lstm": 461, "multiheadattent": 463, "layernorm": 467, "adam": 469, "lamb": 470, "lar": 471, "sgd": 473, "sequenti": [474, 475], "verbos": 477, "cprint": 478}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})